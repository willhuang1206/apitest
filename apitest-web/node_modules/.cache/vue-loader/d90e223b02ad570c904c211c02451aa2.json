{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectList.vue","mtime":1588749633783},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n//import NProgress from 'nprogress'\n  import { test} from '../../api/api';\n  import axios from \"axios\";\n  export default {\n      // components: {ElRow},\n      data() {\n          return {\n              filters: {\n                  name: '',\n                  businessline: ''\n              },\n              project: [],\n              total: 0,\n              page: 1,\n              pages: 0,\n              listLoading: false,\n              sels: [],//列表选中列\n              form: {\n                  data: {\n                      id: '',\n                      name: '',\n                      version: '',\n                      type: '',\n                      description: '',\n                      businessline: ''\n                  },\n                  visible: false,\n                  loading: false,\n                  rules: {\n                      name: [\n                          { required: true, message: '请输入名称', trigger: 'blur' },\n                          { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                      ],\n                      type: [\n                          { required: true, message: '请选择类型', trigger: 'blur' }\n                      ],\n                      version: [\n                          { required: true, message: '请输入版本号', trigger: 'blur' },\n                          { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n                      ],\n                      description: [\n                          { required: false, message: '请输入描述', trigger: 'blur' },\n                          { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                      ]\n                  },\n              },\n              options: [{ label: \"Web\", value: \"Web\"}, { label: \"App\", value: \"App\"}],\n              businesslinelist: [{name: \"集团科技\"},{name: \"加油宝科技\"},{name: \"物流科技\"},{name: \"金融科技\"},{name: \"其他\"}]\n          }\n      },\n      methods: {\n          // 获取项目列表\n          getProjectList() {\n              this.listLoading = true;\n              let self = this;\n              sessionStorage.setItem(\"businessline\",self.filters.businessline);\n              let params = { page: self.page, name: self.filters.name, businessline: self.filters.businessline};\n              let headers = {Authorization: 'Token '+sessionStorage.getItem('token')};\n              axios.get(`${test}/api/project/project_list`, { params: params, headers:headers}).then((res) => {\n                  self.listLoading = false;\n                  let { msg, code, data } = res.data;\n                  if (code === '999999') {\n                      self.total = data.total;\n                      self.project = data.data;\n                      self.pages=data.pages;\n                  }\n                  else {\n                      self.$message.error({\n                          message: msg,\n                          center: true,\n                      })\n                  }\n              })\n          },\n          handleSearch(){\n              this.page=1;\n              this.getProjectList();\n          },\n          //删除\n          handleDel: function (index, row) {\n              this.$confirm('确认删除项目[' + row.name + ']吗?', '提示', {\n                  type: 'warning'\n              }).then(() => {\n                  this.listLoading = true;\n                  //NProgress.start();\n                  let self = this;\n                  let params = {ids: [row.id, ]};\n                  let header = {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: 'Token '+sessionStorage.getItem('token')\n                  };\n                  axios.post(`${test}/api/project/del_project`, params, {header}).then(res => {\n                      let { msg, code, data } = res.data;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '删除成功',\n                              center: true,\n                              type: 'success'\n                          })\n                      } else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                      self.getProjectList()\n                  });\n              }).catch(() => {\n              });\n          },\n          // 改变项目状态\n          handleChangeStatus: function(index, row) {\n              let self = this;\n              this.listLoading = true;\n              let params = { project_id: row.id};\n              let headers = {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: 'Token '+sessionStorage.getItem('token')\n              };\n              if (row.status) {\n                  axios.post(`${test}/api/project/disable_project`, params, {headers}).then(res => {\n                      let { msg, code, data } = res.data;\n                      self.listLoading = false;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '禁用成功',\n                              center: true,\n                              type: 'success'\n                          });\n                          row.status = !row.status;\n                      }\n                      else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                  });\n              } else {\n                  axios.post(`${test}/api/project/enable_project`, params, {headers}).then(res => {\n                      let { msg, code, data } = res.data;\n                      self.listLoading = false;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '启用成功',\n                              center: true,\n                              type: 'success'\n                          });\n                          row.status = !row.status;\n                      }\n                      else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                  });\n              }\n          },\n          handleCurrentChange(val) {\n              this.page = val;\n              this.getProjectList()\n          },\n          //显示编辑界面\n          handleEdit: function (index, row) {\n              this.form.title=\"编辑\";\n              this.form.visible = true;\n              this.form.data = Object.assign({}, row);\n          },\n          //显示新增界面\n          handleAdd: function () {\n              this.form.title=\"新增\";\n              this.form.visible = true;\n              this.form.data={\n                      id: '',\n                      name: '',\n                      version: '',\n                      type: '',\n                      description: '',\n                      businessline: ''\n                  };\n          },\n          //编辑\n          editSubmit: function () {\n              let self = this;\n              this.$refs.form.validate((valid) => {\n                  if (valid) {\n                      this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                          self.form.loading = true;\n                          //NProgress.start();\n                          let params = {\n                              name: self.form.data.name,\n                              type: self.form.data.type,\n                              version: self.form.data.version,\n                              description: self.form.data.description,\n                              businessline: self.form.data.businessline\n                          };\n                          let url=`${test}/api/project/add_project`;\n                          if(self.form.data.id!=''){\n                              url=`${test}/api/project/update_project`;\n                              params[\"project_id\"]=self.form.data.id;\n                          }\n                          let header = {\n                              \"Content-Type\": \"application/json\",\n                              Authorization: 'Token '+sessionStorage.getItem('token')\n                          };\n                          axios.post(url, params,{headers:header}).then(response => {\n                              let {msg, code, data} = response.data;\n                              self.form.loading = false;\n                              if (code === '999999') {\n                                  self.$message({\n                                      message: '执行成功',\n                                      center: true,\n                                      type: 'success'\n                                  });\n                                  self.$refs['form'].resetFields();\n                                  self.form.visible = false;\n                                  self.getProjectList()\n                              } else if (code === '999997'){\n                                  self.$message.error({\n                                      message: msg,\n                                      center: true,\n                                  })\n                              } else {\n                                  self.$message.error({\n                                      message: msg,\n                                      center: true,\n                                  })\n                              }\n                          }).catch(error=>{\n\n                          });\n                      }).catch(() => {});\n                  }\n              });\n          },\n          selsChange: function (sels) {\n              this.sels = sels;\n          },\n          //批量删除\n          batchRemove: function () {\n              let ids = this.sels.map(item => item.id);\n              let self = this;\n              this.$confirm('确认删除选中记录吗？', '提示', {\n                  type: 'warning'\n              }).then(() => {\n                  this.listLoading = true;\n                  //NProgress.start();\n                  let self = this;\n                  let params = {ids: ids};\n                  let header = {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: 'Token ' + sessionStorage.getItem('token')\n                  };\n                  axios.post(`${test}/api/project/del_project`, params, {header}).then(res => {\n                      let {msg, code, data} = res.data;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '删除成功',\n                              center: true,\n                              type: 'success'\n                          })\n                      } else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                      self.getProjectList()\n                  });\n              }).catch(() => {});\n          }\n      },\n      mounted() {\n          if(sessionStorage.getItem(\"businessline\")!=null){\n              this.filters.businessline=sessionStorage.getItem(\"businessline\");\n              this.form.data.businessline=sessionStorage.getItem(\"businessline\");\n          }\n          this.getProjectList();\n      }\n  }\n",{"version":3,"sources":["projectList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"projectList.vue","sourceRoot":"src/views/project","sourcesContent":["<template>\n  <div class=\"app-container\">\n      <div class=\"filter-container\">\n        <el-input v-model=\"filters.name\" placeholder=\"名称\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleSearch\"></el-input>\n        <el-select v-model=\"filters.businessline\" placeholder=\"业务板块\" clearable style=\"width: 200px\" class=\"filter-item\">\n          <el-option v-for=\"(item,index) in businesslinelist\" :key=\"index+''\" :label=\"item.name\" :value=\"item.name\">\n          </el-option>\n        </el-select>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">查询</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"handleAdd\">新增</el-button>\n      </div>\n      <el-table :data=\"project\" stripe border highlight-current-row v-loading=\"listLoading\" @selection-change=\"selsChange\" style=\"width: 100%;\">\n          <el-table-column type=\"selection\" min-width=\"5%\">\n          </el-table-column>\n          <el-table-column prop=\"name\" label=\"项目名称\" min-width=\"20%\" show-overflow-tooltip>\n              <template slot-scope=\"scope\">\n                  <el-icon name=\"name\"></el-icon>\n                  <router-link v-if=\"scope.row.status\" :to=\"{ name: '项目面板', params: {project_id: scope.row.id}}\" style='text-decoration: none;color: #000000;'>\n                      {{ scope.row.name }}\n                  </router-link>\n                  {{ !scope.row.status?scope.row.name:\"\"}}\n              </template>\n          </el-table-column>\n          <el-table-column prop=\"businessline\" label=\"业务板块\" min-width=\"10%\">\n          </el-table-column>\n          <el-table-column prop=\"type\" label=\"类型\" min-width=\"10%\">\n          </el-table-column>\n          <el-table-column prop=\"LastUpdateTime\" label=\"最后修改时间\" min-width=\"15%\">\n          </el-table-column>\n          <el-table-column prop=\"status\" label=\"状态\" min-width=\"10%\">\n              <template slot-scope=\"scope\">\n                  <img v-show=\"scope.row.status\" src=\"@/assets/icon-yes.svg\"/>\n                  <img v-show=\"!scope.row.status\" src=\"@/assets/icon-no.svg\"/>\n              </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" min-width=\"20%\">\n              <template slot-scope=\"scope\">\n                <!--<el-button-group>-->\n                  <!--<el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>-->\n                  <!--<el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>-->\n                  <!--<el-button type=\"info\" size=\"small\" @click=\"handleChangeStatus(scope.$index, scope.row)\">{{scope.row.status===false?'启用':'禁用'}}</el-button>-->\n                <!--</el-button-group>-->\n                <el-dropdown>\n                  <el-button size=\"small\" type=\"primary\" @click=\"handleEdit(scope.$index, scope.row)\" plain>编辑<i class=\"el-icon-arrow-down el-icon--right\"></i></el-button>\n                  <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item><el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\" plain>删除</el-button></el-dropdown-item>\n                    <el-dropdown-item><el-button type=\"info\" size=\"small\" @click=\"handleChangeStatus(scope.$index, scope.row)\" plain>{{scope.row.status===false?'启用':'禁用'}}</el-button></el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n          </el-table-column>\n      </el-table>\n\n      <!--工具条-->\n      <el-col :span=\"24\" class=\"toolbar\">\n          <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n          <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChange\" :current-page.sync=\"page\" :total=\"total\" :page-size=\"20\" :page-count=\"pages\" style=\"float:right;\">\n          </el-pagination>\n      </el-col>\n\n      <!--编辑界面-->\n      <el-dialog width=\"60%\" :title=\"form.title\" :visible.sync=\"form.visible\" :close-on-click-modal=\"false\" style=\"width: 75%; left: 12.5%\">\n          <el-form :model=\"form.data\" label-width=\"80px\"  :rules=\"form.rules\" ref=\"form\">\n              <el-form-item label=\"项目名称\" prop=\"name\">\n                  <el-input v-model=\"form.data.name\" auto-complete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"业务板块\" prop=\"businessLine\">\n                  <el-select style=\"width:100%\" v-model=\"form.data.businessline\" placeholder=\"请选择\">\n                    <el-option v-for=\"(item,index) in businesslinelist\" :key=\"index+''\" :label=\"item.name\" :value=\"item.name\">\n                    </el-option>\n                  </el-select>\n              </el-form-item>\n              <el-row :gutter=\"24\">\n                  <el-col :span=\"12\">\n                      <el-form-item label=\"类型\" prop='type'>\n                          <el-select v-model=\"form.data.type\" placeholder=\"请选择\">\n                              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                              </el-option>\n                          </el-select>\n                      </el-form-item>\n                  </el-col>\n                  <el-col :span=\"12\">\n                      <el-form-item label=\"版本号\" prop='version'>\n                          <el-input v-model=\"form.data.version\" auto-complete=\"off\"></el-input>\n                      </el-form-item>\n                  </el-col>\n              </el-row>\n              <el-form-item label=\"描述\" prop='description'>\n                  <el-input type=\"textarea\" :rows=\"6\" v-model=\"form.data.description\"></el-input>\n              </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click.native=\"form.visible = false\">取消</el-button>\n              <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"form.loading\">提交</el-button>\n          </div>\n      </el-dialog>\n  </div>\n</template>\n\n<script>\n  //import NProgress from 'nprogress'\n    import { test} from '../../api/api';\n    import axios from \"axios\";\n    export default {\n        // components: {ElRow},\n        data() {\n            return {\n                filters: {\n                    name: '',\n                    businessline: ''\n                },\n                project: [],\n                total: 0,\n                page: 1,\n                pages: 0,\n                listLoading: false,\n                sels: [],//列表选中列\n                form: {\n                    data: {\n                        id: '',\n                        name: '',\n                        version: '',\n                        type: '',\n                        description: '',\n                        businessline: ''\n                    },\n                    visible: false,\n                    loading: false,\n                    rules: {\n                        name: [\n                            { required: true, message: '请输入名称', trigger: 'blur' },\n                            { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                        ],\n                        type: [\n                            { required: true, message: '请选择类型', trigger: 'blur' }\n                        ],\n                        version: [\n                            { required: true, message: '请输入版本号', trigger: 'blur' },\n                            { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n                        ],\n                        description: [\n                            { required: false, message: '请输入描述', trigger: 'blur' },\n                            { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                        ]\n                    },\n                },\n                options: [{ label: \"Web\", value: \"Web\"}, { label: \"App\", value: \"App\"}],\n                businesslinelist: [{name: \"集团科技\"},{name: \"加油宝科技\"},{name: \"物流科技\"},{name: \"金融科技\"},{name: \"其他\"}]\n            }\n        },\n        methods: {\n            // 获取项目列表\n            getProjectList() {\n                this.listLoading = true;\n                let self = this;\n                sessionStorage.setItem(\"businessline\",self.filters.businessline);\n                let params = { page: self.page, name: self.filters.name, businessline: self.filters.businessline};\n                let headers = {Authorization: 'Token '+sessionStorage.getItem('token')};\n                axios.get(`${test}/api/project/project_list`, { params: params, headers:headers}).then((res) => {\n                    self.listLoading = false;\n                    let { msg, code, data } = res.data;\n                    if (code === '999999') {\n                        self.total = data.total;\n                        self.project = data.data;\n                        self.pages=data.pages;\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            handleSearch(){\n                this.page=1;\n                this.getProjectList();\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除项目[' + row.name + ']吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let params = {ids: [row.id, ]};\n                    let header = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(`${test}/api/project/del_project`, params, {header}).then(res => {\n                        let { msg, code, data } = res.data;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getProjectList()\n                    });\n                }).catch(() => {\n                });\n            },\n            // 改变项目状态\n            handleChangeStatus: function(index, row) {\n                let self = this;\n                this.listLoading = true;\n                let params = { project_id: row.id};\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                if (row.status) {\n                    axios.post(`${test}/api/project/disable_project`, params, {headers}).then(res => {\n                        let { msg, code, data } = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '禁用成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            row.status = !row.status;\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                    });\n                } else {\n                    axios.post(`${test}/api/project/enable_project`, params, {headers}).then(res => {\n                        let { msg, code, data } = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '启用成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            row.status = !row.status;\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                    });\n                }\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getProjectList()\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.form.title=\"编辑\";\n                this.form.visible = true;\n                this.form.data = Object.assign({}, row);\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.form.title=\"新增\";\n                this.form.visible = true;\n                this.form.data={\n                        id: '',\n                        name: '',\n                        version: '',\n                        type: '',\n                        description: '',\n                        businessline: ''\n                    };\n            },\n            //编辑\n            editSubmit: function () {\n                let self = this;\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.form.loading = true;\n                            //NProgress.start();\n                            let params = {\n                                name: self.form.data.name,\n                                type: self.form.data.type,\n                                version: self.form.data.version,\n                                description: self.form.data.description,\n                                businessline: self.form.data.businessline\n                            };\n                            let url=`${test}/api/project/add_project`;\n                            if(self.form.data.id!=''){\n                                url=`${test}/api/project/update_project`;\n                                params[\"project_id\"]=self.form.data.id;\n                            }\n                            let header = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+sessionStorage.getItem('token')\n                            };\n                            axios.post(url, params,{headers:header}).then(response => {\n                                let {msg, code, data} = response.data;\n                                self.form.loading = false;\n                                if (code === '999999') {\n                                    self.$message({\n                                        message: '执行成功',\n                                        center: true,\n                                        type: 'success'\n                                    });\n                                    self.$refs['form'].resetFields();\n                                    self.form.visible = false;\n                                    self.getProjectList()\n                                } else if (code === '999997'){\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                } else {\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                }\n                            }).catch(error=>{\n\n                            });\n                        }).catch(() => {});\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认删除选中记录吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let params = {ids: ids};\n                    let header = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + sessionStorage.getItem('token')\n                    };\n                    axios.post(`${test}/api/project/del_project`, params, {header}).then(res => {\n                        let {msg, code, data} = res.data;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getProjectList()\n                    });\n                }).catch(() => {});\n            }\n        },\n        mounted() {\n            if(sessionStorage.getItem(\"businessline\")!=null){\n                this.filters.businessline=sessionStorage.getItem(\"businessline\");\n                this.form.data.businessline=sessionStorage.getItem(\"businessline\");\n            }\n            this.getProjectList();\n        }\n    }\n</script>\n"]}]}