{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/autoStepList.vue?vue&type=template&id=240ded19&scoped=true&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/autoStepList.vue","mtime":1590558683770},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"section\",\n    [\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value:\n                (_vm.currentType === \"case\" || _vm.currentType === \"reuse\") &&\n                _vm.pageType === \"update\",\n              expression:\n                \"(currentType==='case'||currentType==='reuse')&&pageType==='update'\"\n            }\n          ],\n          attrs: { type: \"primary\" },\n          nativeOn: {\n            click: function($event) {\n              return _vm.handleAdd($event)\n            }\n          }\n        },\n        [_vm._v(\"添加步骤\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value:\n                (_vm.currentType === \"case\" || _vm.currentType === \"reuse\") &&\n                _vm.pageType === \"update\",\n              expression:\n                \"(currentType==='case'||currentType==='reuse')&&pageType==='update'\"\n            }\n          ],\n          attrs: { type: \"primary\" },\n          nativeOn: {\n            click: function($event) {\n              return _vm.handleAddReuse($event)\n            }\n          }\n        },\n        [_vm._v(\"添加可重用步骤\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.currentType === \"monitor\" && _vm.pageType === \"update\",\n              expression: \"currentType==='monitor'&&pageType==='update'\"\n            }\n          ],\n          attrs: { type: \"primary\" },\n          on: { click: _vm.handleLinkApi }\n        },\n        [_vm._v(\"关联接口\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.currentType === \"list\" && _vm.pageType === \"update\",\n              expression: \"currentType==='list'&&pageType==='update'\"\n            }\n          ],\n          attrs: { type: \"primary\" },\n          on: { click: _vm.handleLinkAutomation }\n        },\n        [_vm._v(\"关联自动化\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.pageType !== \"update\",\n              expression: \"pageType!=='update'\"\n            }\n          ],\n          attrs: { type: \"primary\", disabled: _vm.running },\n          on: {\n            click: function($event) {\n              return _vm.RunAutomation(_vm.ids)\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: !_vm.running,\n                  expression: \"!running\"\n                }\n              ]\n            },\n            [_vm._v(\"执行\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.running,\n                  expression: \"running\"\n                }\n              ]\n            },\n            [_vm._v(\"执行中\")]\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value:\n                _vm.pageType !== \"update\" &&\n                (_vm.currentType === \"list\" || _vm.currentType === \"monitor\") &&\n                _vm.failRerunShow,\n              expression:\n                \"pageType!=='update' && (currentType==='list'||currentType==='monitor') && failRerunShow\"\n            }\n          ],\n          attrs: { type: \"primary\", disabled: _vm.running },\n          on: {\n            click: function($event) {\n              return _vm.RunAutomation(_vm.failIds)\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: !_vm.running,\n                  expression: \"!running\"\n                }\n              ]\n            },\n            [_vm._v(\"失败重跑\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.running,\n                  expression: \"running\"\n                }\n              ]\n            },\n            [_vm._v(\"执行中\")]\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-select\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.pageType !== \"update\",\n              expression: \"pageType!=='update'\"\n            }\n          ],\n          attrs: { placeholder: \"执行环境\" },\n          model: {\n            value: _vm.env,\n            callback: function($$v) {\n              _vm.env = $$v\n            },\n            expression: \"env\"\n          }\n        },\n        _vm._l(_vm.EnvList, function(item, index) {\n          return _c(\"el-option\", {\n            key: index + \"\",\n            attrs: { label: item.name, value: item.name }\n          })\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-select\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.pageType !== \"update\",\n              expression: \"pageType!=='update'\"\n            }\n          ],\n          attrs: { multiple: \"\", placeholder: \"测试数据\" },\n          model: {\n            value: _vm.data,\n            callback: function($$v) {\n              _vm.data = $$v\n            },\n            expression: \"data\"\n          }\n        },\n        _vm._l(_vm.DataList, function(item, index) {\n          return _c(\"el-option\", {\n            key: index + \"\",\n            attrs: { label: item.name, value: item.name }\n          })\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-select\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.pageType !== \"update\",\n              expression: \"pageType!=='update'\"\n            }\n          ],\n          attrs: { placeholder: \"执行结果\" },\n          on: {\n            change: function($event) {\n              return _vm.getResult(_vm.result.resulttrace)\n            }\n          },\n          model: {\n            value: _vm.result.resulttrace,\n            callback: function($$v) {\n              _vm.$set(_vm.result, \"resulttrace\", $$v)\n            },\n            expression: \"result.resulttrace\"\n          }\n        },\n        _vm._l(_vm.result.ResultList, function(item, index) {\n          return _c(\"el-option\", {\n            key: index + \"\",\n            style: _vm.result_color[item.result],\n            attrs: { label: item.testTime, value: item.trace }\n          })\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"router-link\",\n        {\n          staticStyle: { \"text-decoration\": \"none\" },\n          attrs: {\n            to: {\n              name: \"更新自动化步骤\",\n              params: {\n                automation_id: this.$route.params.automation_id,\n                type: \"update\"\n              }\n            }\n          }\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.pageType !== \"update\",\n                  expression: \"pageType!=='update'\"\n                }\n              ],\n              staticClass: \"return-list\",\n              staticStyle: { float: \"right\", \"margin-right\": \"15px\" },\n              attrs: { type: \"primary\" }\n            },\n            [_vm._v(\"修改\")]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"router-link\",\n        {\n          staticStyle: { \"text-decoration\": \"none\" },\n          attrs: {\n            to: {\n              name: \"自动化步骤列表\",\n              params: { automation_id: this.$route.params.automation_id }\n            }\n          }\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.pageType === \"update\",\n                  expression: \"pageType==='update'\"\n                }\n              ],\n              staticClass: \"return-list\",\n              staticStyle: { float: \"right\", \"margin-right\": \"15px\" },\n              attrs: { type: \"primary\" }\n            },\n            [_vm._v(\"执行\")]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.pageType === \"update\",\n              expression: \"pageType==='update'\"\n            }\n          ],\n          staticClass: \"return-list\",\n          staticStyle: { float: \"right\", \"margin-right\": \"15px\" },\n          attrs: { type: \"primary\" },\n          nativeOn: {\n            click: function($event) {\n              return _vm.updateAutomation($event)\n            }\n          }\n        },\n        [_vm._v(\"保存\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"选择可重用步骤\",\n            visible: _vm.reuseSteps.visible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              return _vm.$set(_vm.reuseSteps, \"visible\", $event)\n            }\n          }\n        },\n        [\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 10 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 18 } },\n                [\n                  _c(\n                    \"el-table\",\n                    {\n                      directives: [\n                        {\n                          name: \"loading\",\n                          rawName: \"v-loading\",\n                          value: _vm.reuseSteps.loading,\n                          expression: \"reuseSteps.loading\"\n                        }\n                      ],\n                      staticStyle: { width: \"100%\" },\n                      attrs: {\n                        data: _vm.reuseSteps.list,\n                        \"highlight-current-row\": \"\",\n                        \"show-header\": true,\n                        \"max-height\": \"400\"\n                      },\n                      on: { \"selection-change\": _vm.selStepsChange }\n                    },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { type: \"selection\", width: \"55\" }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"name\",\n                          label: \"名称\",\n                          \"min-width\": \"20%\",\n                          sortable: \"\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"params\",\n                          label: \"参数\",\n                          \"min-width\": \"50%\",\n                          sortable: \"\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"description\",\n                          label: \"描述\",\n                          \"min-width\": \"30%\",\n                          sortable: \"\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-col\",\n            { staticClass: \"toolbar\", attrs: { span: 24 } },\n            [\n              _c(\"el-pagination\", {\n                staticStyle: { float: \"right\" },\n                attrs: {\n                  layout: \"total, prev, pager, next\",\n                  \"current-page\": _vm.reuseSteps.page,\n                  total: _vm.reuseSteps.total,\n                  \"page-size\": 20,\n                  \"page-count\": _vm.reuseSteps.pages\n                },\n                on: {\n                  \"current-change\": _vm.handleCurrentChangeStep,\n                  \"update:currentPage\": function($event) {\n                    return _vm.$set(_vm.reuseSteps, \"page\", $event)\n                  },\n                  \"update:current-page\": function($event) {\n                    return _vm.$set(_vm.reuseSteps, \"page\", $event)\n                  }\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.reuseSteps.visible = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.addReuseSteps($event)\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"关联接口\",\n            visible: _vm.linkApi.visible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              return _vm.$set(_vm.linkApi, \"visible\", $event)\n            }\n          }\n        },\n        [\n          _c(\n            \"el-row\",\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"名称,分组\" },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.getApiList($event)\n                  }\n                },\n                model: {\n                  value: _vm.linkApi.name,\n                  callback: function($$v) {\n                    _vm.$set(\n                      _vm.linkApi,\n                      \"name\",\n                      typeof $$v === \"string\" ? $$v.trim() : $$v\n                    )\n                  },\n                  expression: \"linkApi.name\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 10 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 24 } },\n                [\n                  _c(\n                    \"el-table\",\n                    {\n                      directives: [\n                        {\n                          name: \"loading\",\n                          rawName: \"v-loading\",\n                          value: _vm.linkApi.loading,\n                          expression: \"linkApi.loading\"\n                        }\n                      ],\n                      staticStyle: { width: \"100%\" },\n                      attrs: {\n                        data: _vm.linkApi.list,\n                        \"highlight-current-row\": \"\",\n                        \"show-header\": true,\n                        \"max-height\": \"400\"\n                      },\n                      on: { \"selection-change\": _vm.selApisChange }\n                    },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { type: \"selection\", width: \"55\" }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"name\",\n                          label: \"名称\",\n                          \"min-width\": \"20%\",\n                          sortable: \"\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"params\",\n                          label: \"参数\",\n                          \"min-width\": \"50%\",\n                          sortable: \"\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"description\",\n                          label: \"描述\",\n                          \"min-width\": \"30%\",\n                          sortable: \"\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-col\",\n            { staticClass: \"toolbar\", attrs: { span: 24 } },\n            [\n              _c(\"el-pagination\", {\n                staticStyle: { float: \"right\" },\n                attrs: {\n                  layout: \"total, prev, pager, next\",\n                  \"current-page\": _vm.linkApi.page,\n                  total: _vm.linkApi.total,\n                  \"page-size\": 20,\n                  \"page-count\": _vm.linkApi.pages\n                },\n                on: {\n                  \"current-change\": _vm.handleCurrentChangeApi,\n                  \"update:currentPage\": function($event) {\n                    return _vm.$set(_vm.linkApi, \"page\", $event)\n                  },\n                  \"update:current-page\": function($event) {\n                    return _vm.$set(_vm.linkApi, \"page\", $event)\n                  }\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.linkApi.visible = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.linkApi.loading },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.linkApiSubmit($event)\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"关联用例\",\n            visible: _vm.linkAutomation.visible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              return _vm.$set(_vm.linkAutomation, \"visible\", $event)\n            }\n          }\n        },\n        [\n          _c(\n            \"el-row\",\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"名称,分组\" },\n                nativeOn: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.getAutomationList($event)\n                  }\n                },\n                model: {\n                  value: _vm.linkAutomation.name,\n                  callback: function($$v) {\n                    _vm.$set(\n                      _vm.linkAutomation,\n                      \"name\",\n                      typeof $$v === \"string\" ? $$v.trim() : $$v\n                    )\n                  },\n                  expression: \"linkAutomation.name\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 10 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 24 } },\n                [\n                  _c(\n                    \"el-table\",\n                    {\n                      directives: [\n                        {\n                          name: \"loading\",\n                          rawName: \"v-loading\",\n                          value: _vm.linkAutomation.loading,\n                          expression: \"linkAutomation.loading\"\n                        }\n                      ],\n                      staticStyle: { width: \"100%\" },\n                      attrs: {\n                        data: _vm.linkAutomation.list,\n                        \"highlight-current-row\": \"\",\n                        \"show-header\": true,\n                        \"max-height\": \"400\"\n                      },\n                      on: { \"selection-change\": _vm.selAutomationsChange }\n                    },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { type: \"selection\", width: \"55\" }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"name\",\n                          label: \"名称\",\n                          \"min-width\": \"20%\",\n                          sortable: \"\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"description\",\n                          label: \"描述\",\n                          \"min-width\": \"30%\",\n                          sortable: \"\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-col\",\n            { staticClass: \"toolbar\", attrs: { span: 24 } },\n            [\n              _c(\"el-pagination\", {\n                staticStyle: { float: \"right\" },\n                attrs: {\n                  layout: \"total, prev, pager, next\",\n                  \"current-page\": _vm.linkAutomation.page,\n                  total: _vm.linkAutomation.total,\n                  \"page-size\": 20,\n                  \"page-count\": _vm.linkAutomation.pages\n                },\n                on: {\n                  \"current-change\": _vm.handleCurrentChangeAutomation,\n                  \"update:currentPage\": function($event) {\n                    return _vm.$set(_vm.linkAutomation, \"page\", $event)\n                  },\n                  \"update:current-page\": function($event) {\n                    return _vm.$set(_vm.linkAutomation, \"page\", $event)\n                  }\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.linkAutomation.visible = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    type: \"primary\",\n                    loading: _vm.linkAutomation.loading\n                  },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.linkAutomationSubmit($event)\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-form\",\n        {\n          ref: \"automationForm\",\n          attrs: {\n            model: _vm.automationForm,\n            rules: _vm.editFormRules,\n            \"label-width\": \"80px\"\n          }\n        },\n        [\n          _c(\n            \"div\",\n            {\n              staticStyle: {\n                border: \"1px solid #e6e6e6\",\n                \"margin-bottom\": \"10px\",\n                padding: \"15px\"\n              }\n            },\n            [\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"名称\", prop: \"name\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              disabled: _vm.pageType !== \"update\",\n                              \"auto-complete\": \"off\"\n                            },\n                            model: {\n                              value: _vm.automationForm.name,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.automationForm,\n                                  \"name\",\n                                  typeof $$v === \"string\" ? $$v.trim() : $$v\n                                )\n                              },\n                              expression: \"automationForm.name\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 5 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: \"类型\",\n                            \"label-width\": \"83px\",\n                            prop: \"type\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: {\n                                disabled: _vm.pageType !== \"update\",\n                                placeholder: \"类型\"\n                              },\n                              model: {\n                                value: _vm.automationForm.type,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.automationForm, \"type\", $$v)\n                                },\n                                expression: \"automationForm.type\"\n                              }\n                            },\n                            _vm._l(_vm.automationType, function(item, index) {\n                              return _c(\"el-option\", {\n                                key: index + \"\",\n                                attrs: { label: item.label, value: item.value }\n                              })\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: \"分组\",\n                            \"label-width\": \"83px\",\n                            prop: \"group\"\n                          }\n                        },\n                        [\n                          _c(\"treeselect\", {\n                            attrs: {\n                              disabled: _vm.pageType !== \"update\",\n                              options: _vm.group,\n                              placeholder: \"请选择\"\n                            },\n                            model: {\n                              value: _vm.automationForm.group,\n                              callback: function($$v) {\n                                _vm.$set(_vm.automationForm, \"group\", $$v)\n                              },\n                              expression: \"automationForm.group\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"参数\", prop: \"params\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { type: \"textarea\", rows: 2 },\n                        model: {\n                          value: _vm.automationForm.params,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.automationForm,\n                              \"params\",\n                              typeof $$v === \"string\" ? $$v.trim() : $$v\n                            )\n                          },\n                          expression: \"automationForm.params\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 10 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"描述\", prop: \"description\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          disabled: _vm.pageType !== \"update\",\n                          type: \"textarea\",\n                          rows: 2\n                        },\n                        model: {\n                          value: _vm.automationForm.description,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.automationForm,\n                              \"description\",\n                              typeof $$v === \"string\" ? $$v.trim() : $$v\n                            )\n                          },\n                          expression: \"automationForm.description\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.listLoading,\n              expression: \"listLoading\"\n            }\n          ],\n          staticClass: \"steptable\",\n          staticStyle: { width: \"100%\" },\n          attrs: {\n            \"row-key\": \"index\",\n            data: _vm.StepList,\n            \"row-class-name\": _vm.getStepRowClass,\n            \"highlight-current-row\": \"\"\n          },\n          on: { \"selection-change\": _vm.selsChange }\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: { type: \"selection\", \"min-width\": \"5%\" }\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { type: \"index\", \"min-width\": \"5%\" }\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"name\",\n              label: \"名称\",\n              \"min-width\": \"30%\",\n              \"show-overflow-tooltip\": \"\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value:\n                              _vm.automationForm.type !== \"monitor\" &&\n                              scope.row.type !== \"case\" &&\n                              scope.row.type !== \"reuse\",\n                            expression:\n                              \"automationForm.type!=='monitor'&&scope.row.type!=='case'&&scope.row.type!=='reuse'\"\n                          }\n                        ],\n                        staticStyle: { \"font-size\": \"16px\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleEdit(scope.$index, scope.row)\n                          }\n                        }\n                      },\n                      [_vm._v(_vm._s(scope.row.name))]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"router-link\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value:\n                              scope.row.type === \"case\" ||\n                              scope.row.type === \"reuse\",\n                            expression:\n                              \"scope.row.type==='case'||scope.row.type==='reuse'\"\n                          }\n                        ],\n                        staticStyle: { \"text-decoration\": \"none\" },\n                        attrs: {\n                          to: {\n                            name: \"自动化步骤列表\",\n                            params: { automation_id: scope.row.stepId }\n                          }\n                        }\n                      },\n                      [_vm._v(_vm._s(scope.row.name))]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"router-link\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.automationForm.type === \"monitor\",\n                            expression: \"automationForm.type==='monitor'\"\n                          }\n                        ],\n                        staticStyle: { \"text-decoration\": \"none\" },\n                        attrs: {\n                          to: {\n                            name: \"基础信息\",\n                            params: { api_id: scope.row.id }\n                          }\n                        }\n                      },\n                      [_vm._v(_vm._s(scope.row.name))]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"description\",\n              label: \"描述\",\n              \"min-width\": \"30%\",\n              \"show-overflow-tooltip\": \"\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"span\", { staticStyle: { \"font-size\": \"16px\" } }, [\n                      _vm._v(_vm._s(scope.row.description))\n                    ])\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"result\", label: \"结果\", \"min-width\": \"10%\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value:\n                              !scope.row.result ||\n                              scope.row.result === \"RUNNING\",\n                            expression:\n                              \"!scope.row.result||scope.row.result==='RUNNING'\"\n                          }\n                        ]\n                      },\n                      [_vm._v(\"未执行\")]\n                    ),\n                    _vm._v(\" \"),\n                    (scope.row.type === \"case\" || scope.row.type === \"reuse\") &&\n                    scope.row.result\n                      ? _c(\n                          \"router-link\",\n                          {\n                            staticStyle: { \"text-decoration\": \"none\" },\n                            attrs: {\n                              to: {\n                                name: \"自动化执行详情\",\n                                params: {\n                                  project_id: _vm.project_id,\n                                  automation_id: scope.row.stepId,\n                                  trace: scope.row.trace\n                                }\n                              }\n                            }\n                          },\n                          [\n                            _c(\n                              \"span\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: scope.row.result === \"PASS\",\n                                    expression: \"scope.row.result==='PASS'\"\n                                  }\n                                ],\n                                staticStyle: {\n                                  color: \"#11b95c\",\n                                  cursor: \"pointer\"\n                                }\n                              },\n                              [_vm._v(\"通过\")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"span\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: scope.row.result === \"FAIL\",\n                                    expression: \"scope.row.result==='FAIL'\"\n                                  }\n                                ],\n                                staticStyle: {\n                                  color: \"#cc0000\",\n                                  cursor: \"pointer\"\n                                }\n                              },\n                              [_vm._v(\"失败\")]\n                            )\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value:\n                              scope.row.type !== \"case\" &&\n                              scope.row.type !== \"reuse\" &&\n                              scope.row.result === \"PASS\",\n                            expression:\n                              \"(scope.row.type!=='case'&&scope.row.type!=='reuse')&&scope.row.result==='PASS'\"\n                          }\n                        ],\n                        staticStyle: { color: \"#11b95c\", cursor: \"pointer\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.resultShow(scope.row)\n                          }\n                        }\n                      },\n                      [_vm._v(\"通过\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value:\n                              scope.row.type !== \"case\" &&\n                              scope.row.type !== \"reuse\" &&\n                              scope.row.result === \"FAIL\",\n                            expression:\n                              \"(scope.row.type!=='case'&&scope.row.type!=='reuse')&&scope.row.result==='FAIL'\"\n                          }\n                        ],\n                        staticStyle: { color: \"#cc0000\", cursor: \"pointer\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.resultShow(scope.row)\n                          }\n                        }\n                      },\n                      [_vm._v(\"失败\")]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"status\", label: \"启用\", \"min-width\": \"10%\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"img\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: scope.row.status,\n                          expression: \"scope.row.status\"\n                        }\n                      ],\n                      attrs: { src: require(\"@/assets/icon-yes.svg\") }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"img\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: !scope.row.status,\n                          expression: \"!scope.row.status\"\n                        }\n                      ],\n                      attrs: { src: require(\"@/assets/icon-no.svg\") }\n                    })\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"操作\", \"min-width\": \"30%\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-dropdown\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value:\n                              _vm.pageType === \"update\" &&\n                              (_vm.automationForm.type === \"case\" ||\n                                _vm.automationForm.type === \"reuse\"),\n                            expression:\n                              \"pageType==='update'&&(automationForm.type==='case'||automationForm.type==='reuse')\"\n                          }\n                        ]\n                      },\n                      [\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: {\n                              type: \"primary\",\n                              size: \"small\",\n                              plain: \"\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleEdit(scope.$index, scope.row)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\"修改\"),\n                            _c(\"i\", {\n                              staticClass: \"el-icon-arrow-down el-icon--right\"\n                            })\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-dropdown-menu\",\n                          { attrs: { slot: \"dropdown\" }, slot: \"dropdown\" },\n                          [\n                            _c(\n                              \"el-dropdown-item\",\n                              [\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    attrs: {\n                                      type: \"primary\",\n                                      size: \"small\",\n                                      plain: \"\"\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.handleCopy(\n                                          scope.$index,\n                                          scope.row\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"复制\")]\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-dropdown-item\",\n                              [\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    attrs: {\n                                      type: \"info\",\n                                      size: \"small\",\n                                      plain: \"\"\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.handleChangeStatus(\n                                          scope.$index,\n                                          scope.row\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        scope.row.status === false\n                                          ? \"启用\"\n                                          : \"禁用\"\n                                      )\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-dropdown-item\",\n                              [\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    attrs: {\n                                      type: \"danger\",\n                                      size: \"small\",\n                                      plain: \"\"\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.handleDel(\n                                          scope.$index,\n                                          scope.row\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"删除\")]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-button-group\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.pageType === \"update\",\n                            expression: \"pageType==='update'\"\n                          }\n                        ]\n                      },\n                      [\n                        _c(\n                          \"el-button\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.automationForm.type === \"list\",\n                                expression: \"automationForm.type==='list'\"\n                              }\n                            ],\n                            attrs: { type: \"info\", size: \"mini\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleChangeStatus(\n                                  scope.$index,\n                                  scope.row\n                                )\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              _vm._s(\n                                scope.row.status === false ? \"启用\" : \"禁用\"\n                              )\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-button\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.automationForm.type === \"monitor\",\n                                expression: \"automationForm.type==='monitor'\"\n                              }\n                            ],\n                            attrs: { type: \"primary\", size: \"mini\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleUnlinkApi(\n                                  scope.$index,\n                                  scope.row\n                                )\n                              }\n                            }\n                          },\n                          [_vm._v(\"取消关联\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-button\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.automationForm.type === \"list\",\n                                expression: \"automationForm.type==='list'\"\n                              }\n                            ],\n                            attrs: { type: \"primary\", size: \"mini\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.handleUnlinkAutomation(\n                                  scope.$index,\n                                  scope.row\n                                )\n                              }\n                            }\n                          },\n                          [_vm._v(\"取消关联\")]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.pageType === \"update\",\n              expression: \"pageType==='update'\"\n            }\n          ],\n          staticClass: \"return-list\",\n          staticStyle: { float: \"right\", \"margin-right\": \"15px\" },\n          attrs: { type: \"primary\", disabled: _vm.updateOrderStatus },\n          on: {\n            click: function($event) {\n              return _vm.updateOrder()\n            }\n          }\n        },\n        [_vm._v(\"\\n        编辑步骤顺序\\n    \")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          staticStyle: { width: \"100%\" },\n          attrs: {\n            width: \"80%\",\n            title: _vm.editFormTitle,\n            visible: _vm.editFormVisible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.editFormVisible = $event\n            },\n            open: _vm.actiontableshow\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"editForm\",\n              attrs: {\n                model: _vm.editForm,\n                rules: _vm.editFormRules,\n                \"label-width\": \"80px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"名称\", prop: \"name\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.editForm.name,\n                      callback: function($$v) {\n                        _vm.$set(\n                          _vm.editForm,\n                          \"name\",\n                          typeof $$v === \"string\" ? $$v.trim() : $$v\n                        )\n                      },\n                      expression: \"editForm.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: { label: \"类型:\", \"label-width\": \"83px\", prop: \"type\" }\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"类型\" },\n                      model: {\n                        value: _vm.editForm.type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.editForm, \"type\", $$v)\n                        },\n                        expression: \"editForm.type\"\n                      }\n                    },\n                    _vm._l(_vm.stepType, function(item, index) {\n                      return _c(\"el-option\", {\n                        key: index + \"\",\n                        attrs: { label: item.label, value: item.value }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"参数\", prop: \"params\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"textarea\", rows: 3 },\n                    model: {\n                      value: _vm.editForm.params,\n                      callback: function($$v) {\n                        _vm.$set(\n                          _vm.editForm,\n                          \"params\",\n                          typeof $$v === \"string\" ? $$v.trim() : $$v\n                        )\n                      },\n                      expression: \"editForm.params\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"描述\", prop: \"description\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"textarea\", rows: 4 },\n                    model: {\n                      value: _vm.editForm.description,\n                      callback: function($$v) {\n                        _vm.$set(\n                          _vm.editForm,\n                          \"description\",\n                          typeof $$v === \"string\" ? $$v.trim() : $$v\n                        )\n                      },\n                      expression: \"editForm.description\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"操作\", prop: \"steps\" } },\n                [\n                  _c(\"el-button\", {\n                    staticClass: \"el-icon-plus\",\n                    attrs: { size: \"mini\", title: \"添加\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.addCommand(0)\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-table\",\n                    {\n                      staticClass: \"actiontable\",\n                      attrs: {\n                        id: \"actiontable\",\n                        \"row-key\": \"name\",\n                        data: _vm.editForm.steps,\n                        \"highlight-current-row\": \"\"\n                      }\n                    },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { type: \"index\", \"min-width\": \"5%\" }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"name\",\n                          label: \"名称\",\n                          \"min-width\": \"30%\"\n                        },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                _c(\n                                  \"el-select\",\n                                  {\n                                    staticStyle: { width: \"100%\" },\n                                    attrs: {\n                                      placeholder: \"步骤名称\",\n                                      filterable: \"\"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.changeCommand(scope.$index)\n                                      }\n                                    },\n                                    model: {\n                                      value: scope.row.name,\n                                      callback: function($$v) {\n                                        _vm.$set(scope.row, \"name\", $$v)\n                                      },\n                                      expression: \"scope.row.name\"\n                                    }\n                                  },\n                                  _vm._l(_vm.commands, function(item, key) {\n                                    return _c(\"el-option\", {\n                                      key: key + \"\",\n                                      attrs: {\n                                        label: item.alias,\n                                        value: item.name\n                                      }\n                                    })\n                                  }),\n                                  1\n                                )\n                              ]\n                            }\n                          }\n                        ])\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"params\",\n                          label: \"参数\",\n                          \"min-width\": \"35%\"\n                        },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    type: \"textarea\",\n                                    rows: 2,\n                                    value: scope.row.params,\n                                    placeholder: \"请输入内容\"\n                                  },\n                                  model: {\n                                    value: scope.row.params,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        scope.row,\n                                        \"params\",\n                                        typeof $$v === \"string\"\n                                          ? $$v.trim()\n                                          : $$v\n                                      )\n                                    },\n                                    expression: \"scope.row.params\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ])\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: { label: \"描述\", \"min-width\": \"20%\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    type: \"textarea\",\n                                    rows: 2,\n                                    value: scope.row.description,\n                                    placeholder: \"请输入内容\"\n                                  },\n                                  model: {\n                                    value: scope.row.description,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        scope.row,\n                                        \"description\",\n                                        typeof $$v === \"string\"\n                                          ? $$v.trim()\n                                          : $$v\n                                      )\n                                    },\n                                    expression: \"scope.row.description\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ])\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"el-table-column\", {\n                        attrs: { label: \"操作\", \"min-width\": \"20%\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                _c(\n                                  \"el-button-group\",\n                                  [\n                                    _c(\"el-button\", {\n                                      staticClass: \"el-icon-minus\",\n                                      attrs: { size: \"mini\", title: \"删除\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.delCommand(scope.$index)\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"el-button\", {\n                                      staticClass: \"el-icon-plus\",\n                                      attrs: { size: \"mini\", title: \"添加\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.addCommand(scope.$index)\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"router-link\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"show\",\n                                            rawName: \"v-show\",\n                                            value: scope.row.type === \"api\",\n                                            expression: \"scope.row.type==='api'\"\n                                          }\n                                        ],\n                                        staticStyle: {\n                                          \"text-decoration\": \"none\"\n                                        },\n                                        attrs: {\n                                          to: {\n                                            name: \"基础信息\",\n                                            params: {\n                                              api_id: scope.row.actionId\n                                            }\n                                          }\n                                        }\n                                      },\n                                      [\n                                        _c(\"el-button\", {\n                                          staticClass: \"el-icon-view\",\n                                          attrs: {\n                                            title: \"查看接口\",\n                                            size: \"mini\"\n                                          }\n                                        })\n                                      ],\n                                      1\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"router-link\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"show\",\n                                            rawName: \"v-show\",\n                                            value:\n                                              scope.row.type === \"automation\",\n                                            expression:\n                                              \"scope.row.type==='automation'\"\n                                          }\n                                        ],\n                                        staticStyle: {\n                                          \"text-decoration\": \"none\"\n                                        },\n                                        attrs: {\n                                          to: {\n                                            name: \"自动化步骤列表\",\n                                            params: {\n                                              automation_id: scope.row.actionId\n                                            }\n                                          }\n                                        }\n                                      },\n                                      [\n                                        _c(\"el-button\", {\n                                          staticClass: \"el-icon-view\",\n                                          attrs: {\n                                            title: \"查看用例\",\n                                            size: \"mini\"\n                                          }\n                                        })\n                                      ],\n                                      1\n                                    )\n                                  ],\n                                  1\n                                )\n                              ]\n                            }\n                          }\n                        ])\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.editFormVisible = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.pageType === \"update\",\n                      expression: \"pageType==='update'\"\n                    }\n                  ],\n                  attrs: { type: \"primary\", loading: _vm.editLoading },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.editSubmit($event)\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            width: \"60%\",\n            title: _vm.StepResultName,\n            visible: _vm.AutomationResult,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.AutomationResult = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-table\",\n            {\n              directives: [\n                {\n                  name: \"loading\",\n                  rawName: \"v-loading\",\n                  value: _vm.listLoading,\n                  expression: \"listLoading\"\n                }\n              ],\n              staticStyle: { width: \"100%\" },\n              attrs: {\n                data: _vm.StepResultDetails,\n                \"max-height\": \"400\",\n                \"highlight-current-row\": \"\"\n              }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: { type: \"expand\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(props) {\n                      return [\n                        _c(\n                          \"el-form\",\n                          {\n                            staticClass: \"demo-table-expand\",\n                            attrs: { \"label-position\": \"left\", inline: \"\" }\n                          },\n                          [\n                            _c(\n                              \"el-table\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: props.row.type === \"automation\",\n                                    expression: \"props.row.type==='automation'\"\n                                  },\n                                  {\n                                    name: \"loading\",\n                                    rawName: \"v-loading\",\n                                    value: _vm.listLoading,\n                                    expression: \"listLoading\"\n                                  }\n                                ],\n                                staticStyle: { width: \"100%\" },\n                                attrs: {\n                                  data: props.row.details,\n                                  \"highlight-current-row\": \"\"\n                                }\n                              },\n                              [\n                                _c(\"el-table-column\", {\n                                  attrs: { type: \"index\", width: \"55\" }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"el-table-column\", {\n                                  attrs: {\n                                    prop: \"name\",\n                                    label: \"名称\",\n                                    \"min-width\": \"20%\",\n                                    \"show-overflow-tooltip\": \"\"\n                                  },\n                                  scopedSlots: _vm._u(\n                                    [\n                                      {\n                                        key: \"default\",\n                                        fn: function(scope) {\n                                          return [\n                                            _c(\n                                              \"span\",\n                                              {\n                                                staticStyle: {\n                                                  \"font-size\": \"16px\"\n                                                }\n                                              },\n                                              [_vm._v(_vm._s(scope.row.name))]\n                                            )\n                                          ]\n                                        }\n                                      }\n                                    ],\n                                    null,\n                                    true\n                                  )\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"el-table-column\", {\n                                  attrs: {\n                                    prop: \"result\",\n                                    label: \"结果\",\n                                    \"min-width\": \"40%\",\n                                    \"show-overflow-tooltip\": \"\"\n                                  },\n                                  scopedSlots: _vm._u(\n                                    [\n                                      {\n                                        key: \"default\",\n                                        fn: function(scope) {\n                                          return [\n                                            _c(\n                                              \"span\",\n                                              {\n                                                staticStyle: {\n                                                  \"font-size\": \"16px\"\n                                                }\n                                              },\n                                              [_vm._v(_vm._s(scope.row.result))]\n                                            )\n                                          ]\n                                        }\n                                      }\n                                    ],\n                                    null,\n                                    true\n                                  )\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"el-table-column\", {\n                                  attrs: {\n                                    prop: \"status\",\n                                    label: \"状态\",\n                                    \"min-width\": \"10%\",\n                                    \"show-overflow-tooltip\": \"\"\n                                  },\n                                  scopedSlots: _vm._u(\n                                    [\n                                      {\n                                        key: \"default\",\n                                        fn: function(scope) {\n                                          return [\n                                            _c(\n                                              \"span\",\n                                              {\n                                                directives: [\n                                                  {\n                                                    name: \"show\",\n                                                    rawName: \"v-show\",\n                                                    value:\n                                                      scope.row.status ===\n                                                      \"PASS\",\n                                                    expression:\n                                                      \"scope.row.status==='PASS'\"\n                                                  }\n                                                ],\n                                                staticStyle: {\n                                                  color: \"#11b95c\",\n                                                  cursor: \"pointer\"\n                                                }\n                                              },\n                                              [_vm._v(\"成功\")]\n                                            ),\n                                            _vm._v(\" \"),\n                                            _c(\n                                              \"span\",\n                                              {\n                                                directives: [\n                                                  {\n                                                    name: \"show\",\n                                                    rawName: \"v-show\",\n                                                    value:\n                                                      scope.row.status ===\n                                                      \"FAIL\",\n                                                    expression:\n                                                      \"scope.row.status==='FAIL'\"\n                                                  }\n                                                ],\n                                                staticStyle: {\n                                                  color: \"#cc0000\",\n                                                  cursor: \"pointer\"\n                                                }\n                                              },\n                                              [_vm._v(\"失败\")]\n                                            )\n                                          ]\n                                        }\n                                      }\n                                    ],\n                                    null,\n                                    true\n                                  )\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"el-table-column\", {\n                                  attrs: {\n                                    prop: \"description\",\n                                    label: \"描述\",\n                                    \"min-width\": \"30%\",\n                                    \"show-overflow-tooltip\": \"\"\n                                  },\n                                  scopedSlots: _vm._u(\n                                    [\n                                      {\n                                        key: \"default\",\n                                        fn: function(scope) {\n                                          return [\n                                            _c(\n                                              \"span\",\n                                              {\n                                                staticStyle: {\n                                                  \"font-size\": \"16px\"\n                                                }\n                                              },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(scope.row.description)\n                                                )\n                                              ]\n                                            )\n                                          ]\n                                        }\n                                      }\n                                    ],\n                                    null,\n                                    true\n                                  )\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-row\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: props.row.type === \"api\",\n                                    expression: \"props.row.type==='api'\"\n                                  }\n                                ],\n                                attrs: { gutter: 10 }\n                              },\n                              [\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { label: \"接口地址： \" } },\n                                  [_c(\"span\", [_vm._v(_vm._s(props.row.url))])]\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-row\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: props.row.type === \"api\",\n                                    expression: \"props.row.type==='api'\"\n                                  }\n                                ],\n                                attrs: { gutter: 10 }\n                              },\n                              [\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { label: \"请求方式： \" } },\n                                  [\n                                    _c(\"span\", [\n                                      _vm._v(_vm._s(props.row.method))\n                                    ])\n                                  ]\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-row\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: props.row.type === \"api\",\n                                    expression: \"props.row.type==='api'\"\n                                  }\n                                ],\n                                attrs: { gutter: 10 }\n                              },\n                              [\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { label: \"请求参数： \" } },\n                                  [\n                                    _c(\n                                      \"span\",\n                                      {\n                                        staticStyle: {\n                                          \"word-break\": \"break-all\",\n                                          overflow: \"auto\",\n                                          \"overflow-x\": \"hidden\"\n                                        }\n                                      },\n                                      [_vm._v(_vm._s(props.row.data))]\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-row\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: props.row.type !== \"automation\",\n                                    expression: \"props.row.type!=='automation'\"\n                                  }\n                                ],\n                                attrs: { gutter: 10 }\n                              },\n                              [\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { label: \"返回结果： \" } },\n                                  [\n                                    _c(\n                                      \"span\",\n                                      [\n                                        _c(\n                                          \"code\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"show\",\n                                                rawName: \"v-show\",\n                                                value: props.row.type !== \"api\",\n                                                expression:\n                                                  \"props.row.type!=='api'\"\n                                              }\n                                            ]\n                                          },\n                                          [_vm._v(_vm._s(props.row.result))]\n                                        ),\n                                        _vm._v(\" \"),\n                                        _c(\"json-viewer\", {\n                                          directives: [\n                                            {\n                                              name: \"show\",\n                                              rawName: \"v-show\",\n                                              value: props.row.type === \"api\",\n                                              expression:\n                                                \"props.row.type==='api'\"\n                                            }\n                                          ],\n                                          attrs: {\n                                            value: props.row.result,\n                                            \"expand-depth\": 5,\n                                            boxed: \"\",\n                                            copyable: \"\"\n                                          }\n                                        })\n                                      ],\n                                      1\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", { attrs: { type: \"index\", width: \"55\" } }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"name\",\n                  label: \"名称\",\n                  \"min-width\": \"20%\",\n                  \"show-overflow-tooltip\": \"\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"span\", { staticStyle: { \"font-size\": \"16px\" } }, [\n                          _vm._v(_vm._s(scope.row.name))\n                        ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"result\",\n                  label: \"结果\",\n                  \"min-width\": \"40%\",\n                  \"show-overflow-tooltip\": \"\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"span\", { staticStyle: { \"font-size\": \"16px\" } }, [\n                          _vm._v(_vm._s(scope.row.result))\n                        ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"status\",\n                  label: \"状态\",\n                  \"min-width\": \"10%\",\n                  \"show-overflow-tooltip\": \"\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: scope.row.status === \"PASS\",\n                                expression: \"scope.row.status==='PASS'\"\n                              }\n                            ],\n                            staticStyle: { color: \"#11b95c\", cursor: \"pointer\" }\n                          },\n                          [_vm._v(\"成功\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: scope.row.status === \"FAIL\",\n                                expression: \"scope.row.status==='FAIL'\"\n                              }\n                            ],\n                            staticStyle: { color: \"#cc0000\", cursor: \"pointer\" }\n                          },\n                          [_vm._v(\"失败\")]\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"description\",\n                  label: \"描述\",\n                  \"min-width\": \"30%\",\n                  \"show-overflow-tooltip\": \"\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"span\", { staticStyle: { \"font-size\": \"16px\" } }, [\n                          _vm._v(_vm._s(scope.row.description))\n                        ])\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}