{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectConfig.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectConfig.vue","mtime":1588821037198},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n//import NProgress from 'nprogress'\nimport { test } from '../../api/api';\nimport axios from 'axios';\nexport default {\n    data() {\n        return {\n            type: [{value: 'env', label: '环境'},\n                {value: 'data', label: '数据'},\n                {value: 'config', label: '配置'}],\n            filters: {\n                name: ''\n            },\n            project: [],\n            total: 0,\n            page: 1,\n            pages: 0,\n            listLoading: false,\n            sels: [],//列表选中列\n            editForm:{\n                //编辑界面数据\n                data: {\n                    id: '',\n                    name: '',\n                    type: 'env',\n                    value: '',\n                    description: ''\n                },\n                title: \"\",\n                visible: false,//编辑界面是否显示\n                loading: false,\n                rules: {\n                    name: [\n                        { required: true, message: '请输入名称', trigger: 'blur' },\n                        { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                    ],\n                    type : [\n                        { required: true, message: '请选择类型', trigger: 'blur'}\n                    ],\n                    value: [\n                        { required: true, message: '请输入值', trigger: 'blur' },\n                    ],\n                    description: [\n                        { required: false, message: '请输入描述', trigger: 'blur' },\n                        { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                    ]\n                },\n            },\n        }\n    },\n    methods: {\n        // IP格式验证\n        isValidIP(ip) {\n            var reg = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;\n            var regPort = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5]):([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$$/;\n\n            return regPort.test(ip) || reg.test(ip);\n        },\n        handleSearch(){\n            this.page=1;\n            this.getProjectConfig();\n        },\n        // 获取HOST列表\n        getProjectConfig() {\n            this.listLoading = true;\n            let self = this;\n            let params = {\n                project_id: this.$route.params.project_id,\n                page: self.page,\n                name: self.filters.name,\n                type: self.filters.type,\n            };\n            let headers = {\n                Authorization: 'Token '+sessionStorage.getItem('token')\n            };\n            axios.get(`${test}/api/project/config_list`, { params: params, headers:headers}).then(res => {\n                let { msg, code, data } = res.data;\n                self.listLoading = false;\n                if (code === '999999') {\n                    self.total = data.total;\n                    self.project = data.data;\n                    self.pages=data.pages;\n                }\n                else {\n                    self.$message.error({\n                        message: msg,\n                        center: true,\n                    })\n                }\n            });\n        },\n        //删除\n        handleDel: function (index, row) {\n            this.$confirm('确认删除配置[' + row.name + ']吗?', '提示', {\n                type: 'warning'\n            }).then(() => {\n                this.listLoading = true;\n                //NProgress.start();\n                let self = this;\n                let params = {\n                    project_id: Number(this.$route.params.project_id),\n                    ids: [row.id, ]\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.post(`${test}/api/project/del_config`, params, {headers}).then(res => {\n                    self.listLoading = false;\n                    let { msg, code, data } = res.data;\n                    if (code === '999999') {\n                        self.$message({\n                            message: '删除成功',\n                            center: true,\n                            type: 'success'\n                        })\n                    } else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                    self.getProjectConfig();\n                });\n            }).catch(() => {\n            });\n        },\n        handleChangeStatus: function(index, row) {\n            let self = this;\n            this.listLoading = true;\n            let params = {\n                project_id: Number(this.$route.params.project_id),\n                config_id: Number(row.id)\n            };\n            let headers = {\n                \"Content-Type\": \"application/json\",\n                Authorization: 'Token '+sessionStorage.getItem('token')\n            };\n            if (row.status) {\n                axios.post(`${test}/api/project/disable_config`, params, {headers}).then(res => {\n                    let {msg, code, data} = res.data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        self.$message({\n                            message: '禁用成功',\n                            center: true,\n                            type: 'success'\n                        });\n                        row.status = !row.status;\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                });\n            } else {\n                axios.post(`${test}/api/project/enable_config`, params, {headers}).then(res => {\n                    let {msg, code, data} = res.data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        self.$message({\n                            message: '启用成功',\n                            center: true,\n                            type: 'success'\n                        });\n                        row.status = !row.status;\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                });\n            }\n        },\n        handleCurrentChange(val) {\n            this.page = val;\n            this.getProjectConfig()\n        },\n        //显示编辑界面\n        handleEdit: function (index, row) {\n            this.editForm.title=\"编辑\";\n            this.editForm.visible = true;\n            this.editForm.data = Object.assign({}, row);\n        },\n        //显示新增界面\n        handleAdd: function () {\n            this.editForm.title=\"新增\";\n            this.editForm.visible = true;\n            this.editForm.data = {\n                    id: '',\n                    name: '',\n                    type: 'env',\n                    value: '',\n                    description: ''\n                };\n        },\n        //编辑\n        editSubmit: function () {\n            let self = this;\n            this.$refs.editForm.validate((valid) => {\n                if (valid) {\n                    this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                        self.editForm.loading = true;\n                        //NProgress.start();\n                        let params = {\n                            project_id: Number(this.$route.params.project_id),\n                            name: self.editForm.data.name,\n                            type: self.editForm.data.type,\n                            value: self.editForm.data.value,\n                            description: self.editForm.data.description\n                        };\n                        let url=`${test}/api/project/add_config`;\n                        if(self.editForm.data.id!=\"\"){\n                            url=`${test}/api/project/update_config`;\n                            params[\"id\"]=Number(self.editForm.data.id);\n                        }\n                        let headers = {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: 'Token '+sessionStorage.getItem('token')\n                        };\n                        axios.post(url, params, {headers}).then(res => {\n                            let {msg, code, data} = res.data;\n                            self.editForm.loading = false;\n                            if (code === '999999') {\n                                self.$message({\n                                    message: '执行成功',\n                                    center: true,\n                                    type: 'success'\n                                });\n                                self.$refs['editForm'].resetFields();\n                                self.editForm.visible = false;\n                                self.getProjectConfig();\n                            } else if (code === '999997'){\n                                self.$message.error({\n                                    message: msg,\n                                    center: true,\n                                })\n                            } else {\n                                self.$message.error({\n                                    message: msg,\n                                    center: true,\n                                })\n                            }\n                        })\n                    }).catch(() => {});\n                }\n            });\n        },\n        selsChange: function (sels) {\n            this.sels = sels;\n        },\n        //批量删除\n        batchRemove: function () {\n            let ids = this.sels.map(item => item.id);\n            let self = this;\n            this.$confirm('确认删除选中记录吗？', '提示', {\n                type: 'warning'\n            }).then(() => {\n                self.listLoading = true;\n                //NProgress.start();\n                let params = {\n                    project_id: Number(this.$route.params.project_id),\n                    ids: ids\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token ' + sessionStorage.getItem('token')\n                };\n                axios.post(`${test}/api/project/del_config`, params, {headers}).then(res => {\n                    let {msg, code, data} = res.data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        self.$message({\n                            message: '删除成功',\n                            center: true,\n                            type: 'success'\n                        })\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                    self.getProjectConfig();\n                })\n            }).catch(() => {});\n        }\n    },\n    mounted() {\n        this.getProjectConfig();\n    }\n}\n\n",null]}