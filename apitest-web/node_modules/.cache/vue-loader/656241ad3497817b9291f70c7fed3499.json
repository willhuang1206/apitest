{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/login/index.vue","mtime":1590739187741},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nexport default {\n    data () {\n        return {\n            loading: false,\n            loginForm: {\n              username: 'test',\n              password: '123456'\n            },\n            loginRules: {\n                username: [\n                  { required: true, message: '请输入账号', trigger: 'blur' }\n                ],\n                password: [\n                  { required: true, message: '请输入密码', trigger: 'blur' }\n                ]\n            },\n            checked: true,\n            redirect: undefined,\n            otherQuery: {}\n        }\n    },\n    methods: {\n        handleLogin() {\n            this.$refs.loginForm.validate(valid => {\n              if (valid) {\n                this.loading = true\n                this.$store.dispatch('user/login', this.loginForm)\n                  .then(() => {\n                    this.$router.push({ path: this.redirect || '/', query: this.otherQuery })\n                    this.loading = false\n                  })\n                  .catch(() => {\n                    this.loading = false\n                  })\n              } else {\n                console.log('error submit!!')\n                return false\n              }\n            })\n        },\n        getOtherQuery(query) {\n          return Object.keys(query).reduce((acc, cur) => {\n            if (cur !== 'redirect') {\n              acc[cur] = query[cur]\n            }\n            return acc\n          }, {})\n        }\n    },\n    mounted() {\n    },\n    watch: {\n      $route: {\n        handler: function(route) {\n          const query = route.query\n          if (query) {\n            this.redirect = query.redirect\n            this.otherQuery = this.getOtherQuery(query)\n          }\n        },\n        immediate: true\n      }\n    },\n}\n\n",null]}