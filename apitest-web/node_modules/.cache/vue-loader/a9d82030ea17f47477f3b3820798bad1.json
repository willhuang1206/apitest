{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/auto.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/auto.vue","mtime":1590475921461},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { test } from '@/api/api'\nimport NavMenu from \"@/components/navMenu.vue\";\nimport $ from 'jquery'\nimport axios from 'axios'\nexport default {\n    components: {\n      NavMenu\n    },\n    data() {\n        return {\n            project: \"\",\n            groupData: [],\n            GroupForm:{\n                title: '',\n                visible: false,\n                loading: false,\n                rules: {\n                    name: [\n                        { required: true, message: '请输入分组名称', trigger: 'blur' },\n                    ]\n                },\n                //新增界面数据\n                data: {\n                    name: '',\n                    id: '',\n                    parentId: '',\n                },\n            },\n            filters: {\n                name: ''\n            },\n            api: [],\n            total: 0,\n            page: 1,\n            listLoading: false,\n            sels: [],//列表选中列\n            apiView: true,\n        }\n    },\n    methods: {\n        // 获取自动化分组\n        getAutomationGroup() {\n            let self = this;\n            axios.get(test+\"/api/automation/group\", {params:{ project_id: Number(this.$route.params.project_id)},headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                let data=response.data;\n                if (data.code === '999999') {\n                    self.groupData = data.data;\n                }\n                else {\n                    self.$message.error({\n                        message: data.msg,\n                        center: true,\n                    })\n                }\n            }).catch(error=>{\n\n            });\n        },\n        // 添加分组弹窗显示\n        handleAddGroup(groupId) {\n            this.GroupForm.visible = true;\n            this.GroupForm.title=\"新增分组\";\n            this.GroupForm.data={\n                    name: '',\n                    id: '',\n                    parentId: groupId,\n                };\n        },\n        // 修改分组弹窗显示\n        handleEditGroup(groupId, name) {\n            this.GroupForm.visible = true;\n            this.GroupForm.title=\"修改分组\";\n            this.GroupForm.data.id = groupId;\n            this.GroupForm.data={\n                    name: name,\n                    id: groupId,\n                    parentId: '',\n                };\n        },\n        //删除分组\n        handleDelGroup: function (id) {\n            this.$confirm('确认删除该分组吗?', '提示', {\n                type: 'warning'\n            }).then(() => {\n                //NProgress.start();\n                let self = this;\n                let params = {\n                    id: Number(id),\n                    project_id: Number(this.$route.params.project_id)\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token ' + sessionStorage.getItem('token')\n                };\n                axios.post(`${test}/api/automation/del_group`, params, {headers}).then(res => {\n                    let {msg, code, data} = res.data;\n                    if (code === '999999') {\n                        self.$message({\n                            message: '删除成功',\n                            center: true,\n                            type: 'success'\n                        })\n                    } else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                    self.getAutomationGroup()\n                })\n            }).catch(() => {});\n        },\n        // 添加分组\n        GroupFormSubmit() {\n            this.$refs.GroupForm.validate((valid) => {\n                if (valid) {\n                    let self = this;\n                    this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                        self.GroupForm.loading = true;\n                        //NProgress.start();\n                        let params = {\n                            project_id: Number(this.$route.params.project_id),\n                            name: self.GroupForm.data.name\n                        };\n                        let url='';\n                        if(self.GroupForm.data.id!=''){\n                            url=`${test}/api/automation/update_name_group`;\n                            params[\"id\"]=self.GroupForm.data.id;\n                        }else{\n                            url=`${test}/api/automation/add_group`;\n                            params[\"parent_id\"]=self.GroupForm.data.parentId;\n                        }\n                        let headers = {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: 'Token '+sessionStorage.getItem('token')\n                        };\n                        axios.post(url, params, {headers}).then(res => {\n                            let {msg, code, data} = res.data;\n                            self.GroupForm.loading = false;\n                            if (code === '999999') {\n                                self.$message({\n                                    message: '执行成功',\n                                    center: true,\n                                    type: 'success'\n                                });\n                                self.$refs['GroupForm'].resetFields();\n                                self.GroupForm.visible = false;\n                                self.getAutomationGroup();\n                            } else if (code === '999997'){\n                                self.$message.error({\n                                    message: msg,\n                                    center: true,\n                                })\n                            } else {\n                                self.$message.error({\n                                    message: msg,\n                                    center: true,\n                                });\n                                self.$refs['GroupForm'].resetFields();\n                                self.GroupForm.visible = false;\n                                self.getAutomationGroup();\n                            }\n                        })\n                    }).catch(() => {});;\n                }\n            });\n        },\n    },\n    mounted() {\n        this.getAutomationGroup();\n        this.project = this.$route.params.project_id\n\n    }\n}\n",{"version":3,"sources":["auto.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"auto.vue","sourceRoot":"src/views/project/auto","sourcesContent":["<template>\n    <section>\n        <el-row :span=\"24\" class=\"row-title\">\n            <el-col :span=\"5\">\n                <el-button class=\"addGroup\" @click=\"handleAddGroup(0)\">新增分组</el-button>\n                <div class=\"api-title\"><strong>自动化分组</strong></div>\n                <div class=\"api-title\" style=\"cursor:pointer;\">\n                    <router-link :to=\"{ name: '自动化列表', params: {project_id: this.$route.params.project_id}}\" style='text-decoration: none;color: aliceblue;'>\n                        所有自动化\n                    </router-link>\n                </div>\n                <aside>\n                    <!--&lt;!&ndash;导航菜单&ndash;&gt;-->\n                    <!--<el-menu default-active=\"2\" class=\"el-menu-vertical-demo\" active-text-color=\"rgb(32, 160, 255)\" :unique-opened=\"true\">-->\n                        <!--<template v-for=\"(item,index) in groupData\">-->\n                            <!--<router-link :to=\"{ name: '分组自动化列表', params: {project_id: project, firstGroup: item.id}}\" style=\"text-decoration:none;\">-->\n                            <!--<el-menu-item :index=\"index+''\" :key=\"item.id\" class=\"group\">-->\n                                <!--<template slot=\"title\">{{item.name}}-->\n                                    <!--<el-dropdown trigger=\"hover\" class=\"editGroup\" style=\"margin-right:10%\">-->\n                                        <!--<i class=\"el-icon-more\"></i>-->\n                                        <!--<el-dropdown-menu slot=\"dropdown\">-->\n                                            <!--<el-dropdown-item @click.native=\"handleDelFirst(item.id)\">删除</el-dropdown-item>-->\n                                            <!--<el-dropdown-item @click.native=\"handleEditFirstGroup(item.id, item.name)\">修改</el-dropdown-item>-->\n                                        <!--</el-dropdown-menu>-->\n                                    <!--</el-dropdown>-->\n                                <!--</template>-->\n                            <!--</el-menu-item>-->\n                            <!--</router-link>-->\n                        <!--</template>-->\n                    <!--</el-menu>-->\n                    <el-menu\n                     default-active=\"0\"\n                     class=\"el-menu-vertical-demo\" router>\n                     <!--background-color=\"#F0F6F6\"-->\n                     <!--text-color=\"#3C3F41\"-->\n                     <!--active-text-color=\"black\">-->\n                     <NavMenu :navMenus=\"groupData\" @handleAdd=\"handleAddGroup\" @handleEdit=\"handleEditGroup\" @handleDel=\"handleDelGroup\"></NavMenu>\n                    </el-menu>\n                </aside>\n            </el-col>\n            <el-dialog :title=\"GroupForm.title\" :visible.sync=\"GroupForm.visible\" :close-on-click-modal=\"false\" style=\"width: 60%; left: 20%\">\n                <el-form :model=\"GroupForm.data\" label-width=\"80px\"  :rules=\"GroupForm.rules\" ref=\"GroupForm\">\n                    <el-form-item label=\"分组名称\" prop='name'>\n                        <el-input v-model.trim=\"GroupForm.data.name\" auto-complete=\"off\" style=\"width: 90%\"></el-input>\n                    </el-form-item>\n                </el-form>\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click.native=\"GroupForm.visible = false\">取消</el-button>\n                    <el-button type=\"primary\" @click.native=\"GroupFormSubmit\" :loading=\"GroupForm.loading\">提交</el-button>\n                </div>\n            </el-dialog>\n            <el-col :span=\"19\">\n                <div style=\"margin-left: 10px;margin-right: 20px\">\n                    <router-view></router-view>\n                </div>\n            </el-col>\n        </el-row>\n    </section>\n</template>\n\n<script>\n    import { test } from '@/api/api'\n    import NavMenu from \"@/components/navMenu.vue\";\n    import $ from 'jquery'\n    import axios from 'axios'\n    export default {\n        components: {\n          NavMenu\n        },\n        data() {\n            return {\n                project: \"\",\n                groupData: [],\n                GroupForm:{\n                    title: '',\n                    visible: false,\n                    loading: false,\n                    rules: {\n                        name: [\n                            { required: true, message: '请输入分组名称', trigger: 'blur' },\n                        ]\n                    },\n                    //新增界面数据\n                    data: {\n                        name: '',\n                        id: '',\n                        parentId: '',\n                    },\n                },\n                filters: {\n                    name: ''\n                },\n                api: [],\n                total: 0,\n                page: 1,\n                listLoading: false,\n                sels: [],//列表选中列\n                apiView: true,\n            }\n        },\n        methods: {\n            // 获取自动化分组\n            getAutomationGroup() {\n                let self = this;\n                axios.get(test+\"/api/automation/group\", {params:{ project_id: Number(this.$route.params.project_id)},headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === '999999') {\n                        self.groupData = data.data;\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            // 添加分组弹窗显示\n            handleAddGroup(groupId) {\n                this.GroupForm.visible = true;\n                this.GroupForm.title=\"新增分组\";\n                this.GroupForm.data={\n                        name: '',\n                        id: '',\n                        parentId: groupId,\n                    };\n            },\n            // 修改分组弹窗显示\n            handleEditGroup(groupId, name) {\n                this.GroupForm.visible = true;\n                this.GroupForm.title=\"修改分组\";\n                this.GroupForm.data.id = groupId;\n                this.GroupForm.data={\n                        name: name,\n                        id: groupId,\n                        parentId: '',\n                    };\n            },\n            //删除分组\n            handleDelGroup: function (id) {\n                this.$confirm('确认删除该分组吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    //NProgress.start();\n                    let self = this;\n                    let params = {\n                        id: Number(id),\n                        project_id: Number(this.$route.params.project_id)\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + sessionStorage.getItem('token')\n                    };\n                    axios.post(`${test}/api/automation/del_group`, params, {headers}).then(res => {\n                        let {msg, code, data} = res.data;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getAutomationGroup()\n                    })\n                }).catch(() => {});\n            },\n            // 添加分组\n            GroupFormSubmit() {\n                this.$refs.GroupForm.validate((valid) => {\n                    if (valid) {\n                        let self = this;\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.GroupForm.loading = true;\n                            //NProgress.start();\n                            let params = {\n                                project_id: Number(this.$route.params.project_id),\n                                name: self.GroupForm.data.name\n                            };\n                            let url='';\n                            if(self.GroupForm.data.id!=''){\n                                url=`${test}/api/automation/update_name_group`;\n                                params[\"id\"]=self.GroupForm.data.id;\n                            }else{\n                                url=`${test}/api/automation/add_group`;\n                                params[\"parent_id\"]=self.GroupForm.data.parentId;\n                            }\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+sessionStorage.getItem('token')\n                            };\n                            axios.post(url, params, {headers}).then(res => {\n                                let {msg, code, data} = res.data;\n                                self.GroupForm.loading = false;\n                                if (code === '999999') {\n                                    self.$message({\n                                        message: '执行成功',\n                                        center: true,\n                                        type: 'success'\n                                    });\n                                    self.$refs['GroupForm'].resetFields();\n                                    self.GroupForm.visible = false;\n                                    self.getAutomationGroup();\n                                } else if (code === '999997'){\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                } else {\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    });\n                                    self.$refs['GroupForm'].resetFields();\n                                    self.GroupForm.visible = false;\n                                    self.getAutomationGroup();\n                                }\n                            })\n                        }).catch(() => {});;\n                    }\n                });\n            },\n        },\n        mounted() {\n            this.getAutomationGroup();\n            this.project = this.$route.params.project_id\n\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .api-title {\n        padding: 15px;\n        margin: 0px;\n        text-align: center;\n        border-radius:5px;\n        font-size: 15px;\n        color: aliceblue;\n        background-color: rgb(32, 160, 255);\n        font-family: PingFang SC;\n    }\n    .group .editGroup {\n        float:right;\n    }\n    .row-title {\n        margin: 35px;\n    }\n    .addGroup {\n        margin-top: 0px;\n        margin-bottom: 10px;\n        border-radius: 25px;\n    }\n</style>\n"]}]}