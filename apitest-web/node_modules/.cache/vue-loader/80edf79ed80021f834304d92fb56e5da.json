{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-vue/src/views/project/api/addApi.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-vue/src/views/project/api/addApi.vue","mtime":1588815975502},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.selectInput{\n    input{\n        border-right: 0px;\n        border-radius: 4px 0px 0px 4px;\n    }\n}\n",{"version":3,"sources":["addApi.vue"],"names":[],"mappingsmvBA;AACA;AACA;AACA;AACA;AACA","file":"addApi.vue","sourceRoot":"src/views/project/api","sourcesContent":["<template>\n    <section>\n        <router-link :to=\"{ name: '接口列表', params: {project_id: this.$route.params.project_id}}\" style='text-decoration: none;color: aliceblue;'>\n            <el-button class=\"return-list\"><i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>接口列表</el-button>\n        </router-link>\n        <router-link :to=\"{ name: '接口列表', params: {project_id: this.$route.params.project_id}}\" style='text-decoration: none;color: aliceblue;'>\n            <el-button class=\"return-list\" style=\"float: right\">取消</el-button>\n        </router-link>\n        <el-button class=\"return-list\" type=\"primary\" style=\"float: right; margin-right: 15px\" @click.native=\"addApi\">保存</el-button>\n        <el-form :model=\"form\" ref=\"form\" :rules=\"FormRules\">\n            <div style=\"border: 1px solid #e6e6e6;margin-bottom: 10px;padding:15px\">\n                <el-row :gutter=\"10\">\n                    <el-col :span='8'>\n                        <el-form-item label=\"接口分组:\" label-width=\"83px\" prop=\"apiGroupLevelFirst_id\">\n                            <treeselect v-model=\"form.apiGroupLevelFirst_id\" :options=\"group\" placeholder=\"请选择\"/>\n                            <!--<SelectTree :options=\"group\" :filter=\"false\" :value=\"form.apiGroupLevelFirst_id\"/>-->\n                            <!--<el-select v-model=\"form.apiGroupLevelFirst_id\" placeholder=\"请选择分组\">-->\n                                <!--<el-option v-for=\"(item,index) in group\" :key=\"index+''\" :label=\"item.name\" :value=\"item.id\"></el-option>-->\n                            <!--</el-select>-->\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span='10'>\n                        <el-form-item label=\"接口类型:\" label-width=\"83px\" prop=\"type\">\n                            <el-select v-model=\"form.type\" placeholder=\"请选择类型\">\n                                <el-option v-for=\"(item,index) in type\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n                <el-row :gutter=\"10\">\n                    <el-col :span='8'>\n                        <el-form-item label=\"接口名称:\" label-width=\"83px\" prop=\"name\">\n                            <el-input v-model.trim=\"form.name\" placeholder=\"名称\" auto-complete></el-input>\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span=\"10\">\n                        <el-form-item label=\"状态:\" label-width=\"72px\">\n                            <el-select v-model=\"form.status\" placeholder=\"接口状态\">\n                                <el-option v-for=\"(item,index) in status\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n                <el-row :gutter=\"10\">\n                    <el-col :span=\"6\">\n                        <el-form-item label=\"URL:\" label-width=\"83px\">\n                            <el-select v-model=\"form.requestType\"  placeholder=\"请求方式\">\n                                <el-option v-for=\"(item,index) in request\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                    </el-col>\n                    <!--<el-col :span=\"2\">-->\n                        <!--<el-form-item>-->\n                            <!--<el-select v-model=\"form.httpType\" placeholder=\"HTTP协议\">-->\n                                <!--<el-option v-for=\"(item,index) in Http\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>-->\n                            <!--</el-select>-->\n                        <!--</el-form-item>-->\n                    <!--</el-col>-->\n                    <el-col :span='18'>\n                        <el-form-item prop=\"apiAddress\">\n                            <el-input v-model.trim=\"form.apiAddress\" placeholder=\"地址\" auto-complete></el-input>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n                <el-row :gutter=\"10\">\n                    <el-col :span=\"18\">\n                        <el-form-item label=\"接口描述:\" label-width=\"83px\">\n                            <el-input v-model.trim=\"form.description\" type=\"textarea\" :rows=\"3\" placeholder=\"接口描述\"></el-input>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n            </div>\n            <el-row :span=\"24\">\n                <el-collapse v-model=\"activeNames\" @change=\"handleChange\">\n                    <el-collapse-item title=\"请求头部\" name=\"1\">\n                        <el-table :data=\"form.headDict\" highlight-current-row>\n                            <el-table-column prop=\"name\" label=\"参数名\" min-width=\"20%\" sortable>\n                                <template slot-scope=\"scope\">\n                                    <el-select placeholder=\"head标签\" filterable v-model=\"scope.row.name\">\n                                        <el-option v-for=\"(item,index) in header\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                                    </el-select>\n                                    <el-input class=\"selectInput\" v-model.trim=\"scope.row.name\" :value=\"scope.row.name\" placeholder=\"请输入内容\"></el-input>\n                                </template>\n                            </el-table-column>\n                            <el-table-column prop=\"value\" label=\"参数值\" min-width=\"30%\" sortable>\n                                <template slot-scope=\"scope\">\n                                    <el-input v-model.trim=\"scope.row.value\" :value=\"scope.row.value\" placeholder=\"请输入内容\"></el-input>\n                                </template>\n                            </el-table-column>\n                            <el-table-column label=\"操作\" min-width=\"20%\">\n                                <template slot-scope=\"scope\">\n                                    <el-button class=\"el-icon-delete\" size=\"mini\" @click=\"delHead(scope.$index)\"></el-button>\n                                    <el-button v-if=\"scope.$index===(form.headDict.length-1)\" size=\"mini\" class=\"el-icon-plus\" @click=\"addHead\"></el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                    </el-collapse-item>\n                    <el-collapse-item title=\"请求参数\" name=\"2\">\n                        <div style=\"margin: 5px\">\n                            <el-row :span=\"24\">\n                                <el-col :span=\"4\"><el-radio v-model=\"requestParameterType\" label=\"application/x-www-form-urlencoded\">表单</el-radio></el-col>\n                                <el-col :span=\"4\"><el-radio v-model=\"requestParameterType\" label=\"application/json\">JSON</el-radio></el-col>\n                                <el-col :span=\"4\"><el-radio v-model=\"requestParameterType\" label=\"raw\">JSON源数据</el-radio><el-button v-show=\"form.type==='jyb'\" type=\"primary\" size=\"mini\" @click=\"jybDecodePost\">解密</el-button></el-col>\n                            </el-row>\n                        </div>\n                        <el-table :data=\"form.requestList\" highlight-current-row :class=\"ParameterType? 'parameter-a': 'parameter-b'\">\n                            <el-table-column prop=\"name\" label=\"参数名\" min-width=\"20%\">\n                                <template slot-scope=\"scope\">\n                                    <el-input v-model.trim=\"scope.row.name\" :value=\"scope.row.name\" placeholder=\"请输入参数值\"></el-input>\n                                </template>\n                            </el-table-column>\n                            <el-table-column prop=\"value\" label=\"参数值\" min-width=\"30%\">\n                                <template slot-scope=\"scope\">\n                                    <el-input type=\"textarea\" :rows=\"1\" v-model.trim=\"scope.row.value\" :value=\"scope.row.value\" placeholder=\"请输入参数值\"></el-input>\n                                </template>\n                            </el-table-column>\n                            <el-table-column prop=\"_type\" label=\"参数类型\" min-width=\"15%\">\n                                <template slot-scope=\"scope\">\n                                    <el-select v-model=\"scope.row._type\"  placeholder=\"请求方式\">\n                                        <el-option v-for=\"(item,index) in paramType\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                                    </el-select>\n                                </template>\n                            </el-table-column>\n                            <el-table-column label=\"必填?\" min-width=\"10%\" prop=\"required\">\n                                <template slot-scope=\"scope\">\n                                    <el-select v-model.trim=\"scope.row.required\" placeholder=\"必填？\">\n                                        <el-option v-for=\"(item,index) in required4\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                                    </el-select>\n                                </template>\n                            </el-table-column>\n                            <el-table-column prop=\"description\" label=\"参数说明\" min-width=\"15%\">\n                                <template slot-scope=\"scope\">\n                                    <el-input v-model.trim=\"scope.row.description\" :value=\"scope.row.desc\" placeholder=\"请输入参数说明\"></el-input>\n                                </template>\n                            </el-table-column>\n                            <el-table-column label=\"操作\" min-width=\"20%\">\n                                <template slot-scope=\"scope\">\n                                    <el-button class=\"el-icon-delete\" size=\"mini\" @click=\"delParameter(scope.$index)\"></el-button>\n                                    <el-button v-if=\"scope.$index===(form.requestList.length-1)\" size=\"mini\" class=\"el-icon-plus\" @click=\"addParameter\"></el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <template>\n                            <el-input :class=\"ParameterType? 'parameter-b': 'parameter-a'\" type=\"textarea\" :rows=\"5\" placeholder=\"请输入内容\" v-model.trim=\"parameterRaw\"></el-input>\n                        </template>\n                    </el-collapse-item>\n                    <el-collapse-item title=\"返回参数\" name=\"3\">\n                        <el-table :data=\"form.responseList\" highlight-current-row>\n                            <el-table-column prop=\"name\" label=\"参数名\" min-width=\"20%\">\n                                <template slot-scope=\"scope\">\n                                    <el-input v-model.trim=\"scope.row.name\" :value=\"scope.row.name\" placeholder=\"请输入参数值\"></el-input>\n                                </template>\n                            </el-table-column>\n                            <el-table-column prop=\"value\" label=\"预期值\" min-width=\"30%\">\n                                <template slot-scope=\"scope\">\n                                    <el-input v-model.trim=\"scope.row.value\" :value=\"scope.row.value\" placeholder=\"请输入参数值\"></el-input>\n                                </template>\n                            </el-table-column>\n                            <el-table-column prop=\"_type\" label=\"参数类型\" min-width=\"15%\">\n                                <template slot-scope=\"scope\">\n                                    <el-select v-model=\"scope.row._type\"  placeholder=\"请求方式\">\n                                        <el-option v-for=\"(item,index) in paramType\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                                    </el-select>\n                                </template>\n                            </el-table-column>\n                            <el-table-column label=\"必含?\" min-width=\"10%\" prop=\"required\">\n                                <template slot-scope=\"scope\">\n                                    <el-select v-model.trim=\"scope.row.required\" placeholder=\"必填？\">\n                                        <el-option v-for=\"(item,index) in required4\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                                    </el-select>\n                                </template>\n                            </el-table-column>\n                            <el-table-column prop=\"description\" label=\"参数说明\" min-width=\"15%\">\n                                <template slot-scope=\"scope\">\n                                    <el-input v-model.trim=\"scope.row.description\" :value=\"scope.row.desc\" placeholder=\"请输入参数说明\"></el-input>\n                                </template>\n                            </el-table-column>\n                            <el-table-column label=\"操作\" min-width=\"20%\">\n                                <template slot-scope=\"scope\">\n                                    <el-button class=\"el-icon-delete\" size=\"mini\" @click=\"delResponse(scope.$index)\"></el-button>\n                                    <el-button v-if=\"scope.$index===(form.responseList.length-1)\" size=\"mini\" class=\"el-icon-plus\" @click=\"addResponse\"></el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                    </el-collapse-item>\n                    <el-collapse-item title=\"返回样例\" name=\"4\">\n                        <div style=\"margin-bottom: 10px\">\n                            <el-button type=\"primary\" size=\"mini\" @click=\"formatResponse\">格式转换</el-button>\n                            <el-button type=\"primary\" size=\"mini\" @click=\"updateResponse\">生成返回参数</el-button>\n                        </div>\n                        <el-card class=\"box-card\">\n                            <!--<div slot=\"header\" class=\"clearfix\">-->\n                                <!--<span v-model=\"form.statusCode\" style=\"font-size: 25px\">{{form.statusCode}}</span>-->\n                            <!--</div>-->\n                            <div v-model=\"form.data\" v-show=\"!format\">\n                                <el-input v-model=\"form.data\" :value=\"form.data\" type=\"textarea\" :rows=\"5\" placeholder=\"返回样例\"></el-input>\n                                <!--<div style=\"word-break: break-all;overflow:auto;overflow-x:hidden\">{{form.data}}</div>-->\n                            </div>\n                            <div v-show=\"format\">\n                                <!--<pre id=\"formResult\" style=\"border: 1px solid #e6e6e6;word-break: break-all;overflow:auto;overflow-x:hidden\">{{form.resultData}}</pre>-->\n                                <json-viewer :value=\"form.jsonData\" :expand-depth=5 copyable></json-viewer>\n                            </div>\n                            <div v-show=\"!form.data\" class=\"raw\">暂无数据</div>\n                        </el-card>\n                    </el-collapse-item>\n                    <!--<el-collapse-item title=\"普通mock\" name=\"4\">-->\n                        <!--<el-card class=\"box-card\">-->\n                            <!--<div slot=\"header\" class=\"clearfix\">-->\n                                <!--<el-select v-model=\"form.mockCode\" placeholder=\"HTTP状态\">-->\n                                    <!--<el-option v-for=\"(item,index) in httpCode\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>-->\n                                <!--</el-select>-->\n                            <!--</div>-->\n                            <!--<el-input v-model.trim=\"form.data\" type=\"textarea\" :rows=\"8\" placeholder=\"请输入mock内容\"></el-input>-->\n                        <!--</el-card>-->\n                    <!--</el-collapse-item>-->\n                </el-collapse>\n            </el-row>\n        </el-form>\n    </section>\n</template>\n<script>\n    import Treeselect from '@riophae/vue-treeselect'\n    // import the styles\n    import '@riophae/vue-treeselect/dist/vue-treeselect.css'\n    import { test } from '@/api/api'\n    import axios from 'axios';\n    import $ from 'jquery';\n\n    export default {\n        components: {\n//          SelectTree,\n          Treeselect,\n        },\n        data() {\n            return {\n                type: [{value: 'http', label: '普通http'},\n                    {value: 'jyb', label: '加油宝app'},\n                    {value: 'service', label: '微服务'}],\n                request: [{value: 'GET', label: 'GET'},\n                    {value: 'POST', label: 'POST'},\n                    {value: 'PUT', label: 'PUT'},\n                    {value: 'DELETE', label: 'DELETE'}],\n                Http: [{value: 'HTTP', label: 'HTTP'},\n                    {value: 'HTTPS', label: 'HTTPS'}],\n                paramType: [{value: 'Int', label: 'Int'},\n                    {value: 'String', label: 'String'},\n                    {value: 'Object', label: 'Object'},\n                    {value: 'Array', label: 'Array'}],\n                checkHeadList: [],\n                checkParameterList: [],\n                ParameterType: true,\n                group: [],\n                requestParameterType: \"application/json\",\n                secondGroup: [],\n                status: [{value: true, label: '启用'},\n                    {value: false, label: '禁用'}],\n                header: [{value: 'Accept', label: 'Accept'},\n                    {value: 'Accept-Charset', label: 'Accept-Charset'},\n                    {value: 'Accept-Encoding', label: 'Accept-Encoding'},\n                    {value: 'Accept-Language', label: 'Accept-Language'},\n                    {value: 'Accept-Ranges', label: 'Accept-Ranges'},\n                    {value: 'Authorization', label: 'Authorization'},\n                    {value: 'Cache-Control', label: 'Cache-Control'},\n                    {value: 'Connection', label: 'Connection'},\n                    {value: 'Cookie', label: 'Cookie'},\n                    {value: 'Content-Length', label: 'Content-Length'},\n                    {value: 'Content-Type', label: 'Content-Type'},\n                    {value: 'Content-MD5', label: 'Content-MD5'},\n                    {value: 'Date', label: 'Date'},\n                    {value: 'Expect', label: 'Expect'},\n                    {value: 'From', label: 'From'},\n                    {value: 'Host', label: 'Host'},\n                    {value: 'If-Match', label: 'If-Match'},\n                    {value: 'If-Modified-Since', label: 'If-Modified-Since'},\n                    {value: 'If-None-Match', label: 'If-None-Match'},\n                    {value: 'If-Range', label: 'If-Range'},\n                    {value: 'If-Unmodified-Since', label: 'If-Unmodified-Since'},\n                    {value: 'Max-Forwards', label: 'Max-Forwards'},\n                    {value: 'Origin', label: 'Origin'},\n                    {value: 'Pragma', label: 'Pragma'},\n                    {value: 'Proxy-Authorization', label: 'Proxy-Authorization'},\n                    {value: 'Range', label: 'Range'},\n                    {value: 'Referer', label: 'Referer'},\n                    {value: 'TE', label: 'TE'},\n                    {value: 'Upgrade', label: 'Upgrade'},\n                    {value: 'User-Agent', label: 'User-Agent'},\n                    {value: 'Via', label: 'Via'},\n                    {value: 'Warning', label: 'Warning'}],\n                header4: \"\",\n                addParameterFormVisible: false,\n                addResponseFormVisible: false,\n                required4:[{value: true, label: '是'},\n                    {value: false, label: '否'}],\n                httpCode:[{value: '', label: ''},\n                    {value: '200', label: '200'},\n                    {value: '404', label: '404'},\n                    {value: '400', label: '400'},\n                    {value: '500', label: '500'},\n                    {value: '502', label: '502'},\n                    {value: '302', label: '302'}],\n                result: true,\n                activeNames: ['2', '3', '4'],\n                id: \"\",\n                parameterRaw: \"\",\n                form: {\n                    apiGroupLevelFirst_id: null,\n                    name: '',\n                    type: 'http',\n                    status: true,\n                    requestType: 'POST',\n                    httpType: 'HTTP',\n                    apiAddress: '',\n                    headDict: [{name: \"\", value: \"\"}],\n                    requestList: [{name: \"\", value: \"\", _type:\"String\", required: true, restrict: \"\", description: \"\"}],\n                    requestParameterType: \"application/json\",\n                    responseList: [{name: \"\", value: \"\", _type:\"String\", required:true, description: \"\"}],\n                    mockCode: '',\n                    data: '',\n                    jsonData: '',\n                },\n                FormRules: {\n                    name : [{ required: true, message: '请输入名称', trigger: 'blur' },\n                        { max: 50, message: '不能超过50个字', trigger: 'blur' }],\n                    type : [{ required: true, message: '请选择类型', trigger: 'blur'}],\n                    apiAddress : [{ required: true, message: '请输入地址', trigger: 'blur' }],\n                    required : [{ type: 'boolean', required: true, message: '请选择状态', trigger: 'blur' }],\n                    apiGroupLevelFirst_id : [{ type: 'number', required: true, message: '请选择分组', trigger: 'blur'}],\n                },\n                editForm: {\n                    name: \"\",\n                    value: \"\",\n                    required: \"\",\n                    restrict: \"\",\n                    description: \"\",\n                },\n                format: false,\n                // editLoading: false\n            }\n        },\n        methods: {\n            isJsonString(str) {\n                try {\n                    if (typeof JSON.parse(str) === \"object\") {\n                        return true;\n                    }\n                } catch(e) {\n                }\n                return false;\n            },\n            addApiInfo:function(){\n                if (this.form.data&&this.form.mockCode) {\n                    if (!this.isJsonString(this.form.data)) {\n                        this.$message({\n                            message: 'mock格式错误',\n                            center: true,\n                            type: 'error'\n                        })\n                    } else {\n                        this.addApi()\n                    }\n                } else if(this.form.data||this.form.mockCode){\n                    this.$message({\n                        message: 'HTTP状态或mock为空',\n                        center: true,\n                        type: 'warning'\n                    })\n                } else {\n                    this.addApi()\n                }\n            },\n            addApi: function () {\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        let self = this;\n                        console.log(this.form.requestList);\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.form.parameterType = self.requestParameterType;\n                            let _type = self.form.parameterType;\n                            let _parameter = {};\n                            let params={};\n                            if ( _type === 'application/x-www-form-urlencoded'||_type === 'application/json'||_type === 'text/plain') {\n                                _parameter = self.form.requestList;\n                                self.form.requestList.forEach((item) => {\n                                    if (item.required) {\n                                        if(item._type==\"Object\"||item._type==\"Array\"){\n                                            params[item.name] = JSON.parse(item.value);\n                                        }else{\n                                            params[item.name] = item.value;\n                                        }\n                                    }\n                                });\n                            } else {\n                                _parameter = self.parameterRaw\n                            }\n                            console.log(_parameter)\n                            let param = {\n                                project_id: Number(self.$route.params.project_id),\n                                apiGroupLevelFirst_id: Number(self.form.apiGroupLevelFirst_id),\n                                name: self.form.name,\n                                type: self.form.type,\n                                httpType: self.form.httpType,\n                                requestType: self.form.requestType,\n                                apiAddress: self.form.apiAddress,\n                                status: self.form.status,\n                                headDict: self.form.headDict,\n                                requestParameterType: _type,\n                                requestList: _parameter,\n                                responseList: self.form.responseList,\n                                mockCode: self.form.mockCode,\n                                data: self.form.data,\n                                description: self.form.description,\n                                params: JSON.stringify(params)\n                            };\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token ' + sessionStorage.getItem('token')\n\n                            };\n                            if (self.parameterRaw&&_type===\"raw\"&&!self.isJsonString(self.parameterRaw)){\n                                self.$message({\n                                    message: '源数据格式错误',\n                                    center: true,\n                                    type: 'error'\n                                })\n                            } else {\n                                axios.post(`${test}/api/api/add_api`, param, {headers}).then(res => {\n                                    let {msg, code, data} = res.data;\n                                    if (code === '999999') {\n                                        self.$router.push({name: '分组接口列表',\n                                            params: {\n                                                project_id: self.$route.params.project_id,\n                                                firstGroup: self.form.apiGroupLevelFirst_id\n                                            }\n                                        });\n                                        self.$message({\n                                            message: '保存成功',\n                                            center: true,\n                                            type: 'success'\n                                        })\n                                    }\n                                    else {\n                                        self.$message.error({\n                                            message: msg,\n                                            center: true,\n                                        })\n                                    }\n                                })\n                            }\n                        }).catch(() => {});\n                    }\n                })\n            },\n            editParameterSubmit: function () {\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.form.requestList[this.id] = this.editForm;\n                        this.addParameterFormVisible = false\n                    }\n                })\n            },\n            handleParameterEdit: function (index, row) {\n                this.addParameterFormVisible = true;\n                this.id = index;\n                this.editForm = Object.assign({}, row);\n            },\n            editResponseSubmit: function () {\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.form.responseList[this.id] = this.editForm;\n                        this.addResponseFormVisible = false\n                    }\n                })\n            },\n            handleResponseEdit: function (index, row) {\n                this.addResponseFormVisible = true;\n                this.id = index;\n                this.editForm = Object.assign({}, row);\n            },\n            // 获取api分组\n            getApiGroup() {\n                let self = this;\n                let params = {\n                    project_id: this.$route.params.project_id\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(`${test}/api/api/group`, { params: params, headers:headers}).then(res => {\n                    let {msg, code, data} = res.data;\n                    if (code === '999999') {\n                        self.group = data;\n                        if(sessionStorage.getItem(\"api_group\")!=null){\n                            this.form.apiGroupLevelFirst_id=Number(sessionStorage.getItem(\"api_group\"));\n                        }\n                    }else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            addHead() {\n                let headers = {name: \"\", value: \"\"};\n                this.form.headDict.push(headers)\n            },\n            delHead(index) {\n                this.form.headDict.splice(index, 1);\n                if (this.form.headDict.length === 0) {\n                    this.form.headDict.push({name: \"\", value: \"\"})\n                }\n            },\n            addParameter() {\n                let headers = {name: \"\", value: \"\", _type:\"String\", required:true, restrict: \"\", description: \"\"};\n                this.form.requestList.push(headers)\n            },\n            delParameter(index) {\n                this.form.requestList.splice(index, 1);\n                if (this.form.requestList.length === 0) {\n                    this.form.requestList.push({name: \"\", value: \"\", _type:\"String\", required:true, restrict: \"\", description: \"\"})\n                }\n            },\n            addResponse() {\n                let headers = {name: \"\", value: \"\", _type:\"String\", required:true, description: \"\"};\n                this.form.responseList.push(headers)\n            },\n            delResponse(index) {\n                this.form.responseList.splice(index, 1);\n                if (this.form.responseList.length === 0) {\n                    this.form.responseList.push({name: \"\", value: \"\", _type:\"String\", required:true, description: \"\"})\n                }\n            },\n            changeParameterType() {\n                if (this.requestParameterType === 'application/json') {\n                    this.ParameterType = true;\n                    if(this.parameterRaw!=\"\"&&(this.form.requestList.length==0||this.form.requestList[0][\"name\"]==\"\")){\n                        try{\n                            let self=this;\n                            this.form.requestList=[];\n                            let json=JSON.parse(this.parameterRaw);\n                            $.each(json, function (name, value) {\n                                let type=\"String\";\n                                if(typeof(value)=='object'){\n                                    if(value instanceof Array){\n                                        type= 'Array'\n                                    }else if( value instanceof Object ){\n                                        type= 'Object';\n                                    }\n                                    value=JSON.stringify(value);\n                                }else if(typeof(value)=='number'){\n                                    type= 'Int';\n                                }\n                                let parameter = {name: name, value: value, _type:type,required:\"True\", restrict: \"\", description: \"\"};\n                                self.form.requestList.push(parameter);\n                            });\n                        }catch(e){\n                          alert(e);\n                        }\n                    }\n                } else if (this.requestParameterType === 'application/x-www-form-urlencoded'||this.requestParameterType === 'text/plain') {\n                    this.ParameterType = true;\n                } else {\n                    this.ParameterType = false;\n                }\n            },\n            showData() {\n                this.result = true\n            },\n            showHead(){\n                this.result = false\n            },\n            handleChange(val) {\n            },\n            formatResponse(){\n                if(!this.format&&this.form.data!=\"\"){\n                    try{\n                        this.form.jsonData=JSON.parse(this.form.data);\n                    }catch(e){}\n                }\n                this.format = !this.format;\n            },\n            getDataType(value){\n                let type=\"String\";\n                try{\n                    if(value instanceof Array){\n                        type = 'Array';\n                    }else if(value instanceof Object){\n                        type = 'Object';\n                    }else if(typeof(value)=='number'){\n                        type = 'Int';\n                    }\n                }catch(Exception){}\n                return type;\n            },\n            updateResponse(){\n                this.$confirm('确认根据返回样例生成返回参数吗？', '提示', {}).then(() => {\n                    this.form.responseList=[];\n                    try{\n                        let data=JSON.parse(this.form.data);\n                        if(typeof(data)!='number'){\n                            this.convertResponse('',data,2);\n                        }\n                    }catch(err){\n                        alert(err);\n                    }\n                }).catch(() => {});\n            },\n            convertResponse(parent,data,depth){\n                let self=this;\n                $.each(data,function(name,value){\n                    let item={required:true, description: \"\"};\n                    try{\n                        if(parent!=''){\n                            item['name']=parent + '.' + name;\n                        }else{\n                            item['name']=name;\n                        }\n                        let type=self.getDataType(value);\n                        if(type=='String'||type=='Int'){\n                            item['_type']=type;\n                            item['value']=value;\n                            self.form.responseList.push(item);\n                        }else if(type=='Array'){\n                            item['_type']=type;\n                            let childType=self.getDataType(value[0]);\n                            if(childType=='String'||childType=='Int'){\n                                item['value']=JSON.stringify(value);\n                                self.form.responseList.push(item);\n                            }else if(childType=='Object'){\n                                item['value']='[]';\n                                self.form.responseList.push(item);\n                                if(depth>0){\n                                    self.convertResponse(item['name']+\"[*]\",value[0],depth-1);\n                                }\n                            }\n                        }else if(type=='Object'){\n                            item['_type']=type;\n                            item['value']='{}';\n                            self.form.responseList.push(item);\n                            if(depth>0){\n                                self.convertResponse(item['name'],value,depth-1);\n                            }\n                        }\n                    }catch(err){\n                        alert(err.message);\n                    }\n                })\n            },\n            jybDecodePost() {\n                var encodePost=this.parameterRaw.trim();\n                if(encodePost==\"\")return;\n                var apiUrl=this.form.apiAddress.trim();\n                var pos=0;\n                var reg = new RegExp(\"(^|&)_pos=([^&]*)(&|$)\", \"i\");\n                var r = apiUrl.match(reg);\n                if (r != null) {\n                    pos=unescape(r[2]);\n                }\n                var version=\"\";\n                reg = new RegExp(\"(^|&)ver=([^&]*)(&|$)\", \"i\");\n                r = apiUrl.match(reg);\n                if (r != null) {\n                    version=unescape(r[2]);\n                }\n                let params = {\n                    pos: pos,\n                    post:encodePost,\n                    version:version\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                let self=this;\n                axios.post(test + '/api/api/jybdecode', params,{headers:headers}).then(res => {\n                    let {msg, code, data} = res.data;\n                    if (code === '999999') {\n                        self.parameterRaw=JSON.stringify(data);\n                    }else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            fastAdd() {\n                let form = this.$route.params.addForm;\n                if (form) {\n                    this.form.requestList = [];\n                    this.form.requestType = form.method.toUpperCase();\n                    this.form.type = form.type;\n                    this.form.httpType = form.http;\n                    this.form.apiAddress = form.addr;\n                    if(form.headers.length>0){\n                        this.form.headDict = form.headers;\n                    }\n                    this.form.parameterRaw = form.parameter;\n                    form.parameters.forEach((item) => {\n                        item['_type']=this.getDataType(item[\"value\"]);\n                        item['required'] = true;\n                        item['restrict'] = '';\n                        item['description'] = '';\n                        this.form.requestList.push(item)\n                    });\n                    // this.form.parameter = form.parameter;\n                    this.form.mockCode = form.statusCode;\n                    this.form.jsonData = form.resultData;\n                    this.form.data = JSON.stringify(form.resultData);\n                    if (form.contentType) {\n                        this.form.requestParameterType = form.contentType;\n                    }\n                }\n            },\n        },\n        watch: {\n            requestParameterType() {\n                this.changeParameterType();\n            },\n        },\n        mounted() {\n            this.getApiGroup();\n            this.fastAdd();\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .return-list {\n        margin-top: 0px;\n        margin-bottom: 10px;\n        border-radius: 25px;\n    }\n    .head-class {\n        font-size: 17px\n    }\n    .parameter-a {\n        display: block;\n    }\n    .parameter-b {\n        display: none;\n    }\n    .selectInput {\n        position: absolute;\n        /*margin-left: 7px;*/\n        padding-left: 9px;\n        width: 180px;\n        /*border-radius:0px;*/\n        /*height: 38px;*/\n        left: 1px;\n        border-right: 0px;\n    }\n</style>\n<style lang=\"scss\">\n    .selectInput{\n        input{\n            border-right: 0px;\n            border-radius: 4px 0px 0px 4px;\n        }\n    }\n</style>\n"]}]}