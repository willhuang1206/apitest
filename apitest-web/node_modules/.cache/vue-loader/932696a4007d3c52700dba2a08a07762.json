{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-vue/src/views/config/config-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-vue/src/views/config/config-list.vue","mtime":1588136833681},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n//import NProgress from 'nprogress'\n  import { test} from '../../api/api';\n  import axios from \"axios\";\n  export default {\n      data() {\n          return {\n              globalConfig:[],\n              type: [{value: 'config', label: '配置'},\n                  {value: 'tag', label: '标签'}],\n              filters: {\n                  name: ''\n              },\n              total: 0,\n              page: 1,\n              pages: 0,\n              listLoading: false,\n              sels: [],//列表选中列\n              editForm:{\n                  data: {\n                      id: '',\n                      name: '',\n                      type: 'config',\n                      value: '',\n                      description: ''\n                  },\n                  visible: false,\n                  loading: false,\n                  rules: {\n                      name: [\n                          { required: true, message: '请输入名称', trigger: 'blur' },\n                          { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                      ],\n                      type : [\n                          { required: true, message: '请选择类型', trigger: 'blur'}\n                      ],\n                      value: [\n                          { required: true, message: '请输入值', trigger: 'blur' },\n                      ],\n                      description: [\n                          { required: false, message: '请输入描述', trigger: 'blur' },\n                          { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                      ]\n                  },\n              },\n          }\n      },\n      methods: {\n          // 获取HOST列表\n          getGlobalConfig() {\n              this.listLoading = true;\n              let self = this;\n              let params = {\n                  page: self.page,\n                  name: self.filters.name,\n                  type: self.filters.type,\n              };\n              let headers = {\n                  Authorization: 'Token '+sessionStorage.getItem('token')\n              };\n              axios.get(`${test}/api/global/config_list`, { params: params, headers:headers}).then(res => {\n                  let { msg, code, data } = res.data;\n                  self.listLoading = false;\n                  if (code === '999999') {\n                      self.total = data.total;\n                      self.globalConfig = data.data;\n                      self.pages=data.pages;\n                  }\n                  else {\n                      self.$message.error({\n                          message: msg,\n                          center: true,\n                      })\n                  }\n              });\n          },\n          handleSearch(){\n              this.page=1;\n              this.getGlobalConfig();\n          },\n          //删除\n          handleDel: function (index, row) {\n              this.$confirm('确认删除配置[' + row.name + ']吗?', '提示', {\n                  type: 'warning'\n              }).then(() => {\n                  this.listLoading = true;\n                  //NProgress.start();\n                  let self = this;\n                  let params = {\n                      ids: [row.id, ]\n                  };\n                  let headers = {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                  };\n                  axios.post(`${test}/api/global/del_config`, params, {headers}).then(res => {\n                      let { msg, code, data } = res.data;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '删除成功',\n                              center: true,\n                              type: 'success'\n                          })\n                      } else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                      self.getGlobalConfig()\n                  });\n              }).catch(() => {\n              });\n          },\n          handleChangeStatus: function(index, row) {\n              let self = this;\n              this.listLoading = true;\n              let params = {\n                  config_id: Number(row.id)\n              };\n              let headers = {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n              };\n              if (row.status) {\n                  axios.post(`${test}/api/global/disable_config`, params, {headers}).then(res => {\n                      let {msg, code, data} = res.data;\n                      self.listLoading = false;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '禁用成功',\n                              center: true,\n                              type: 'success'\n                          });\n                          row.status = !row.status;\n                      }\n                      else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                  });\n              } else {\n                  axios.post(`${test}/api/global/enable_config`, params, {headers}).then(res => {\n                      let {msg, code, data} = res.data;\n                      self.listLoading = false;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '启用成功',\n                              center: true,\n                              type: 'success'\n                          });\n                          row.status = !row.status;\n                      }\n                      else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                  });\n              }\n          },\n          handleCurrentChange(val) {\n              this.page = val;\n              this.getGlobalConfig()\n          },\n          //显示编辑界面\n          handleEdit: function (index, row) {\n              this.editForm.title=\"编辑\";\n              this.editForm.visible = true;\n              this.editForm.data = Object.assign({}, row);\n          },\n          //显示新增界面\n          handleAdd: function () {\n              this.editForm.title=\"新增\";\n              this.editForm.visible = true;\n              this.editForm.data = {\n                      id: '',\n                      name: '',\n                      type: 'config',\n                      value: '',\n                      description: ''\n                  };\n          },\n          //编辑\n          editSubmit: function () {\n              let self = this;\n              this.$refs.editForm.validate((valid) => {\n                  if (valid) {\n                      this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                          self.editForm.loading = true;\n                          //NProgress.start();\n                          let params = {\n                              name: self.editForm.data.name,\n                              type: self.editForm.data.type,\n                              value: self.editForm.data.value,\n                              description: self.editForm.data.description\n                          };\n                          let url=`${test}/api/global/add_config`;\n                          if(self.editForm.data.id!=\"\"){\n                              params[\"id\"]=Number(self.editForm.data.id);\n                              url=`${test}/api/global/update_config`;\n                          }\n                          let headers = {\n                              \"Content-Type\": \"application/json\",\n                              Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                          };\n                          axios.post(url, params, {headers}).then(res => {\n                              let {msg, code, data} = res.data;\n                              self.editForm.loading = false;\n                              if (code === '999999') {\n                                  self.$message({\n                                      message: '执行成功',\n                                      center: true,\n                                      type: 'success'\n                                  });\n                                  self.$refs['editForm'].resetFields();\n                                  self.editForm.visible = false;\n                                  self.getGlobalConfig()\n                              } else if (code === '999997'){\n                                  self.$message.error({\n                                      message: msg,\n                                      center: true,\n                                  })\n                              } else {\n                                  self.$message.error({\n                                      message: msg,\n                                      center: true,\n                                  })\n                              }\n                          })\n                      }).catch(() => {});\n                  }\n              });\n          },\n          selsChange: function (sels) {\n              this.sels = sels;\n          },\n          //批量删除\n          batchRemove: function () {\n              let ids = this.sels.map(item => item.id);\n              let self = this;\n              this.$confirm('确认删除选中记录吗？', '提示', {\n                  type: 'warning'\n              }).then(() => {\n                  self.listLoading = true;\n                  //NProgress.start();\n                  let params = {\n                      ids: ids\n                  };\n                  let headers = {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n                  };\n                  axios.post(`${test}/api/global/del_config`, params, {headers}).then(res => {\n                      let {msg, code, data} = res.data;\n                      self.listLoading = false;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '删除成功',\n                              center: true,\n                              type: 'success'\n                          })\n                      }\n                      else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                      self.getGlobalConfig()\n                  })\n              }).catch(() => {});\n          }\n      },\n      mounted() {\n          this.getGlobalConfig();\n      }\n  }\n",{"version":3,"sources":["config-list.vue"],"names":[],"mappingsfile":"config-list.vue","sourceRoot":"src/views/config","sourcesContent":["<template>\n  <div class=\"app-container\">\n      <div class=\"filter-container\">\n        <el-input v-model.trim=\"filters.name\" style=\"width: 200px;\" placeholder=\"名称\" @keyup.enter.native=\"handleSearch\"></el-input>\n        <el-select v-model=\"filters.type\"  clearable style=\"width: 200px\" placeholder=\"类型\">\n            <el-option v-for=\"(item,index) in type\" :label=\"item.label\" :value=\"item.value\"></el-option>\n        </el-select>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">查询</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"handleAdd\">新增</el-button>\n      </div>\n      <el-table :data=\"globalConfig\" stripe border highlight-current-row v-loading=\"listLoading\" @selection-change=\"selsChange\" style=\"width: 100%;\">\n            <el-table-column type=\"selection\" min-width=\"5%\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"名称\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"type\" label=\"类型\" min-width=\"10%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"value\" label=\"值\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"description\" label=\"描述\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\" min-width=\"5%\">\n                <template slot-scope=\"scope\">\n                    <img v-show=\"scope.row.status\" src=\"@/assets/icon-yes.svg\"/>\n                    <img v-show=\"!scope.row.status\" src=\"@/assets/icon-no.svg\"/>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" min-width=\"20%\">\n                <template slot-scope=\"scope\">\n                  <!--<el-button-group>-->\n                    <!--<el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>-->\n                    <!--<el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>-->\n                    <!--<el-button type=\"info\" size=\"small\" @click=\"handleChangeStatus(scope.$index, scope.row)\">{{scope.row.status===false?'启用':'禁用'}}</el-button>-->\n                  <!--</el-button-group>-->\n                  <el-dropdown>\n                    <el-button size=\"small\" type=\"primary\" @click=\"handleEdit(scope.$index, scope.row)\" plain>编辑<i class=\"el-icon-arrow-down el-icon--right\"></i></el-button>\n                    <el-dropdown-menu slot=\"dropdown\">\n                      <el-dropdown-item><el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\" plain>删除</el-button></el-dropdown-item>\n                      <el-dropdown-item><el-button type=\"info\" size=\"small\" @click=\"handleChangeStatus(scope.$index, scope.row)\" plain>{{scope.row.status===false?'启用':'禁用'}}</el-button></el-dropdown-item>\n                    </el-dropdown-menu>\n                  </el-dropdown>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\">\n            <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n            <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChange\" :current-page.sync=\"page\" :total=\"total\" :page-size=\"20\" :page-count=\"pages\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n\n        <!--编辑界面-->\n        <el-dialog width=\"40%\" :title=\"editForm.title\" :visible.sync=\"editForm.visible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"editForm.data\"  :rules=\"editForm.rules\" ref=\"editForm\" label-width=\"80px\">\n                <el-form-item label=\"名称\" prop=\"name\">\n                    <el-input v-model.trim=\"editForm.data.name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"类型\" prop=\"type\">\n                    <el-select v-model=\"editForm.data.type\"  placeholder=\"类型\">\n                        <el-option v-for=\"(item,index) in type\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"值\" prop='value'>\n                    <el-input type=\"textarea\" :rows=\"5\" v-model.trim=\"editForm.data.value\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"描述\" prop='description'>\n                    <el-input type=\"textarea\" :rows=\"5\" v-model.trim=\"editForm.data.description\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"editForm.visible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editForm.loading\">提交</el-button>\n            </div>\n        </el-dialog>\n  </div>\n</template>\n\n<script>\n  //import NProgress from 'nprogress'\n    import { test} from '../../api/api';\n    import axios from \"axios\";\n    export default {\n        data() {\n            return {\n                globalConfig:[],\n                type: [{value: 'config', label: '配置'},\n                    {value: 'tag', label: '标签'}],\n                filters: {\n                    name: ''\n                },\n                total: 0,\n                page: 1,\n                pages: 0,\n                listLoading: false,\n                sels: [],//列表选中列\n                editForm:{\n                    data: {\n                        id: '',\n                        name: '',\n                        type: 'config',\n                        value: '',\n                        description: ''\n                    },\n                    visible: false,\n                    loading: false,\n                    rules: {\n                        name: [\n                            { required: true, message: '请输入名称', trigger: 'blur' },\n                            { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                        ],\n                        type : [\n                            { required: true, message: '请选择类型', trigger: 'blur'}\n                        ],\n                        value: [\n                            { required: true, message: '请输入值', trigger: 'blur' },\n                        ],\n                        description: [\n                            { required: false, message: '请输入描述', trigger: 'blur' },\n                            { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                        ]\n                    },\n                },\n            }\n        },\n        methods: {\n            // 获取HOST列表\n            getGlobalConfig() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    page: self.page,\n                    name: self.filters.name,\n                    type: self.filters.type,\n                };\n                let headers = {\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(`${test}/api/global/config_list`, { params: params, headers:headers}).then(res => {\n                    let { msg, code, data } = res.data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        self.total = data.total;\n                        self.globalConfig = data.data;\n                        self.pages=data.pages;\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                });\n            },\n            handleSearch(){\n                this.page=1;\n                this.getGlobalConfig();\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除配置[' + row.name + ']吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let params = {\n                        ids: [row.id, ]\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    };\n                    axios.post(`${test}/api/global/del_config`, params, {headers}).then(res => {\n                        let { msg, code, data } = res.data;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalConfig()\n                    });\n                }).catch(() => {\n                });\n            },\n            handleChangeStatus: function(index, row) {\n                let self = this;\n                this.listLoading = true;\n                let params = {\n                    config_id: Number(row.id)\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                };\n                if (row.status) {\n                    axios.post(`${test}/api/global/disable_config`, params, {headers}).then(res => {\n                        let {msg, code, data} = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '禁用成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            row.status = !row.status;\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                    });\n                } else {\n                    axios.post(`${test}/api/global/enable_config`, params, {headers}).then(res => {\n                        let {msg, code, data} = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '启用成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            row.status = !row.status;\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                    });\n                }\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getGlobalConfig()\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.editForm.title=\"编辑\";\n                this.editForm.visible = true;\n                this.editForm.data = Object.assign({}, row);\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.editForm.title=\"新增\";\n                this.editForm.visible = true;\n                this.editForm.data = {\n                        id: '',\n                        name: '',\n                        type: 'config',\n                        value: '',\n                        description: ''\n                    };\n            },\n            //编辑\n            editSubmit: function () {\n                let self = this;\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.editForm.loading = true;\n                            //NProgress.start();\n                            let params = {\n                                name: self.editForm.data.name,\n                                type: self.editForm.data.type,\n                                value: self.editForm.data.value,\n                                description: self.editForm.data.description\n                            };\n                            let url=`${test}/api/global/add_config`;\n                            if(self.editForm.data.id!=\"\"){\n                                params[\"id\"]=Number(self.editForm.data.id);\n                                url=`${test}/api/global/update_config`;\n                            }\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                            };\n                            axios.post(url, params, {headers}).then(res => {\n                                let {msg, code, data} = res.data;\n                                self.editForm.loading = false;\n                                if (code === '999999') {\n                                    self.$message({\n                                        message: '执行成功',\n                                        center: true,\n                                        type: 'success'\n                                    });\n                                    self.$refs['editForm'].resetFields();\n                                    self.editForm.visible = false;\n                                    self.getGlobalConfig()\n                                } else if (code === '999997'){\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                } else {\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                }\n                            })\n                        }).catch(() => {});\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认删除选中记录吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    let params = {\n                        ids: ids\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n                    };\n                    axios.post(`${test}/api/global/del_config`, params, {headers}).then(res => {\n                        let {msg, code, data} = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalConfig()\n                    })\n                }).catch(() => {});\n            }\n        },\n        mounted() {\n            this.getGlobalConfig();\n        }\n    }\n</script>\n"]}]}