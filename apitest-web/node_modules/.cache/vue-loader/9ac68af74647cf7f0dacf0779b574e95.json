{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectList.vue","mtime":1588749633783},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n//import NProgress from 'nprogress'\n  import { test} from '../../api/api';\n  import axios from \"axios\";\n  export default {\n      // components: {ElRow},\n      data() {\n          return {\n              filters: {\n                  name: '',\n                  businessline: ''\n              },\n              project: [],\n              total: 0,\n              page: 1,\n              pages: 0,\n              listLoading: false,\n              sels: [],//列表选中列\n              form: {\n                  data: {\n                      id: '',\n                      name: '',\n                      version: '',\n                      type: '',\n                      description: '',\n                      businessline: ''\n                  },\n                  visible: false,\n                  loading: false,\n                  rules: {\n                      name: [\n                          { required: true, message: '请输入名称', trigger: 'blur' },\n                          { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                      ],\n                      type: [\n                          { required: true, message: '请选择类型', trigger: 'blur' }\n                      ],\n                      version: [\n                          { required: true, message: '请输入版本号', trigger: 'blur' },\n                          { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n                      ],\n                      description: [\n                          { required: false, message: '请输入描述', trigger: 'blur' },\n                          { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                      ]\n                  },\n              },\n              options: [{ label: \"Web\", value: \"Web\"}, { label: \"App\", value: \"App\"}],\n              businesslinelist: [{name: \"集团科技\"},{name: \"加油宝科技\"},{name: \"物流科技\"},{name: \"金融科技\"},{name: \"其他\"}]\n          }\n      },\n      methods: {\n          // 获取项目列表\n          getProjectList() {\n              this.listLoading = true;\n              let self = this;\n              sessionStorage.setItem(\"businessline\",self.filters.businessline);\n              let params = { page: self.page, name: self.filters.name, businessline: self.filters.businessline};\n              let headers = {Authorization: 'Token '+sessionStorage.getItem('token')};\n              axios.get(`${test}/api/project/project_list`, { params: params, headers:headers}).then((res) => {\n                  self.listLoading = false;\n                  let { msg, code, data } = res.data;\n                  if (code === '999999') {\n                      self.total = data.total;\n                      self.project = data.data;\n                      self.pages=data.pages;\n                  }\n                  else {\n                      self.$message.error({\n                          message: msg,\n                          center: true,\n                      })\n                  }\n              })\n          },\n          handleSearch(){\n              this.page=1;\n              this.getProjectList();\n          },\n          //删除\n          handleDel: function (index, row) {\n              this.$confirm('确认删除项目[' + row.name + ']吗?', '提示', {\n                  type: 'warning'\n              }).then(() => {\n                  this.listLoading = true;\n                  //NProgress.start();\n                  let self = this;\n                  let params = {ids: [row.id, ]};\n                  let header = {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: 'Token '+sessionStorage.getItem('token')\n                  };\n                  axios.post(`${test}/api/project/del_project`, params, {header}).then(res => {\n                      let { msg, code, data } = res.data;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '删除成功',\n                              center: true,\n                              type: 'success'\n                          })\n                      } else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                      self.getProjectList()\n                  });\n              }).catch(() => {\n              });\n          },\n          // 改变项目状态\n          handleChangeStatus: function(index, row) {\n              let self = this;\n              this.listLoading = true;\n              let params = { project_id: row.id};\n              let headers = {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: 'Token '+sessionStorage.getItem('token')\n              };\n              if (row.status) {\n                  axios.post(`${test}/api/project/disable_project`, params, {headers}).then(res => {\n                      let { msg, code, data } = res.data;\n                      self.listLoading = false;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '禁用成功',\n                              center: true,\n                              type: 'success'\n                          });\n                          row.status = !row.status;\n                      }\n                      else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                  });\n              } else {\n                  axios.post(`${test}/api/project/enable_project`, params, {headers}).then(res => {\n                      let { msg, code, data } = res.data;\n                      self.listLoading = false;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '启用成功',\n                              center: true,\n                              type: 'success'\n                          });\n                          row.status = !row.status;\n                      }\n                      else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                  });\n              }\n          },\n          handleCurrentChange(val) {\n              this.page = val;\n              this.getProjectList()\n          },\n          //显示编辑界面\n          handleEdit: function (index, row) {\n              this.form.title=\"编辑\";\n              this.form.visible = true;\n              this.form.data = Object.assign({}, row);\n          },\n          //显示新增界面\n          handleAdd: function () {\n              this.form.title=\"新增\";\n              this.form.visible = true;\n              this.form.data={\n                      id: '',\n                      name: '',\n                      version: '',\n                      type: '',\n                      description: '',\n                      businessline: ''\n                  };\n          },\n          //编辑\n          editSubmit: function () {\n              let self = this;\n              this.$refs.form.validate((valid) => {\n                  if (valid) {\n                      this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                          self.form.loading = true;\n                          //NProgress.start();\n                          let params = {\n                              name: self.form.data.name,\n                              type: self.form.data.type,\n                              version: self.form.data.version,\n                              description: self.form.data.description,\n                              businessline: self.form.data.businessline\n                          };\n                          let url=`${test}/api/project/add_project`;\n                          if(self.form.data.id!=''){\n                              url=`${test}/api/project/update_project`;\n                              params[\"project_id\"]=self.form.data.id;\n                          }\n                          let header = {\n                              \"Content-Type\": \"application/json\",\n                              Authorization: 'Token '+sessionStorage.getItem('token')\n                          };\n                          axios.post(url, params,{headers:header}).then(response => {\n                              let {msg, code, data} = response.data;\n                              self.form.loading = false;\n                              if (code === '999999') {\n                                  self.$message({\n                                      message: '执行成功',\n                                      center: true,\n                                      type: 'success'\n                                  });\n                                  self.$refs['form'].resetFields();\n                                  self.form.visible = false;\n                                  self.getProjectList()\n                              } else if (code === '999997'){\n                                  self.$message.error({\n                                      message: msg,\n                                      center: true,\n                                  })\n                              } else {\n                                  self.$message.error({\n                                      message: msg,\n                                      center: true,\n                                  })\n                              }\n                          }).catch(error=>{\n\n                          });\n                      }).catch(() => {});\n                  }\n              });\n          },\n          selsChange: function (sels) {\n              this.sels = sels;\n          },\n          //批量删除\n          batchRemove: function () {\n              let ids = this.sels.map(item => item.id);\n              let self = this;\n              this.$confirm('确认删除选中记录吗？', '提示', {\n                  type: 'warning'\n              }).then(() => {\n                  this.listLoading = true;\n                  //NProgress.start();\n                  let self = this;\n                  let params = {ids: ids};\n                  let header = {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: 'Token ' + sessionStorage.getItem('token')\n                  };\n                  axios.post(`${test}/api/project/del_project`, params, {header}).then(res => {\n                      let {msg, code, data} = res.data;\n                      if (code === '999999') {\n                          self.$message({\n                              message: '删除成功',\n                              center: true,\n                              type: 'success'\n                          })\n                      } else {\n                          self.$message.error({\n                              message: msg,\n                              center: true,\n                          })\n                      }\n                      self.getProjectList()\n                  });\n              }).catch(() => {});\n          }\n      },\n      mounted() {\n          if(sessionStorage.getItem(\"businessline\")!=null){\n              this.filters.businessline=sessionStorage.getItem(\"businessline\");\n              this.form.data.businessline=sessionStorage.getItem(\"businessline\");\n          }\n          this.getProjectList();\n      }\n  }\n",null]}