{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/api/apiForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/api/apiForm.vue","mtime":1588815825161},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { test } from '@/api/api'\nimport $ from 'jquery'\nimport axios from 'axios'\nexport default {\n    name: \"api-form\",\n    data() {\n        return {\n            radio: \"\",\n        }\n    },\n    methods: {\n        handleDelApi: function () {\n            this.$confirm('确认删除该接口吗?', '提示', {type: 'warning'}).then(() => {\n                //NProgress.start();\n                let self = this;\n                let params=JSON.stringify({ project_id: Number(this.$route.params.project_id), ids: [this.$route.params.api_id] });\n                let headers={\"Content-Type\": \"application/json\",\"Authorization\": 'Token '+JSON.parse(sessionStorage.getItem('token'))};\n                axios.post(test+\"/api/api/del_api\", params,{headers:headers}).then(response => {\n                    if(response.data.code === '999999'){\n                        self.$message({\n                            message: '删除成功',\n                            center: true,\n                            type: 'success'\n                        });\n                        self.$router.push({ name: '接口列表', params: { project_id: self.$route.params.project_id}});\n                    }else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            }).catch(() => {});\n        },\n        showNavi(title) {\n            this.radio = title\n        }\n    },\n    mounted() {\n        this.radio = this.$route.name\n    }\n}\n\n",null]}