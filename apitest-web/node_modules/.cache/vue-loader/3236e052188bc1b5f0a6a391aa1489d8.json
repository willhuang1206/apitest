{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-vue/src/views/project/api/fastTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-vue/src/views/project/api/fastTest.vue","mtime":1588815975519},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import $ from 'jquery'\n    import VuePopper from \"element-ui/src/utils/vue-popper\";\n    import { test } from '@/api/api'\n    import ApiRequest from './apiRequest.vue'\n    import axios from 'axios'\n    export default {\n        components: {VuePopper,ApiRequest},\n        data() {\n            return {\n                type: [{value: 'http', label: '普通http'},\n                    {value: 'jyb', label: '加油宝app'},\n                    {value: 'service', label: '微服务'}],\n                request: [{value: 'get', label: 'GET'},\n                    {value: 'post', label: 'POST'},\n                    {value: 'put', label: 'PUT'},\n                    {value: 'delete', label: 'DELETE'}],\n                Http: [{value: 'http', label: 'HTTP'},\n                    {value: 'https', label: 'HTTPS'}],\n                loadingSend: false,\n                result: true,\n                activeNames: ['2', '3', '4'],\n                Host: [{name: \"\", host: \"\"}],\n                id: \"\",\n                form: {\n                    url:\"\",\n                    method: 'POST',\n                    http: 'HTTP',\n                    type: 'http',\n                    addr: '',\n                    contentType: \"\",\n                    statusCode: \"\",\n                    resultData: \"\",\n                    resultHead: \"\",\n                    parameters: [],\n                    parameter: {},\n                    headDic: {},\n                    headers: [],\n                },\n                formRules: {\n                    env: [\n                        { required: false, message: '请选择测试环境', trigger: 'blur'}\n                    ],\n                    addr: [\n                        { required: true, message: '请输入地址', trigger: 'blur' },\n                    ]\n                },\n                resultShow: true,\n                format: false,\n            }\n        },\n        methods: {\n            isJsonString(str) {\n                try {\n                    if (typeof JSON.parse(str) === \"object\") {\n                        return true;\n                    }\n                } catch(e) {\n                }\n                return false;\n            },\n            getHost() {\n                let self = this;\n                axios.get(test+\"/api/project/config_list\", {params:{ project_id: this.$route.params.project_id, page: this.page, type:'env'},headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === '999999') {\n                        data.data.data.forEach((item) => {\n                            if (item.status) {\n                                self.Host.push(item)\n                            }\n                        })\n                    }else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            fastTest: function() {\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.loadingSend = true;\n                        let self = this;\n                        let head=this.$refs.apiRequest.head;\n                        self.form.statusCode = '';\n                        self.form.resultData = '';\n                        self.form.resultHead = '';\n                        self.form.headDic={};\n                        self.form.headers=[];\n                        for (let i = 0; i < head.length; i++) {\n                            var a = head[i][\"name\"];\n                            if (a) {\n                                self.form.headDic[a] = head[i][\"value\"];\n                                self.form.headers.push({\"name\":a,\"value\":head[i][\"value\"]});\n                            }\n                        }\n                        let address = self.form.addr;\n                        let url=\"\";\n                        let env=\"\";\n                        if (address.indexOf(\"http://\") ===0||address.indexOf(\"https://\") ===0){\n                            url=address;\n                            if(self.form.env!=\"\")env=self.form.env;\n                        }else{\n                            url = self.form.http + \"://\" + self.form.env + address;\n                        }\n                        self.form.contentType = self.$refs.apiRequest.requestParameterType;\n                        self.form.parameter=self.$refs.apiRequest.getParameters();\n                        self.form.parameters=self.$refs.apiRequest.parameters;\n                        let param = {project_id:self.$route.params.project_id,type:self.form.type,method:self.form.method,contentType:self.form.contentType,url:url,headers:self.form.headDic,data:self.form.parameter};\n                        axios.post(test+\"/api/api/run_api\", param,{headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                            let data=response.data;\n                            self.loadingSend = false;\n                            self.form.statusCode = data[\"data\"][\"result\"][0];\n                            self.form.resultData = data[\"data\"][\"result\"][1];\n                            self.form.resultHead = data[\"data\"][\"result\"][2];\n//                            $(\"#formResult\").text(JSON.stringify(self.form.resultData));\n                        }).catch(error=>{\n                            self.loadingSend = false;\n                            self.$message.error({\n                                message: \"执行失败,请重试.\",\n                                center: true,\n                            })\n                        });\n                    }\n                })\n            },\n            showBody() {\n                this.resultShow = true\n            },\n            showHeader() {\n                this.resultShow = false\n            },\n            handleChange(val) {\n            },\n            typeChanged(){\n                this.$refs.apiRequest.form.type=this.form.type;\n            },\n            addrChanged(){\n                this.$refs.apiRequest.form.addr=this.form.addr;\n            }\n        },\n        mounted() {\n            this.$refs.apiRequest.addEmptyHead();\n            this.$refs.apiRequest.addEmptyParameter();\n            this.getHost();\n        },\n    }\n",{"version":3,"sources":["fastTest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fastTest.vue","sourceRoot":"src/views/project/api","sourcesContent":["<template>\n    <section>\n        <router-link :to=\"{ name: '新增接口', params: {project_id: this.$route.params.project_id, addForm: this.form}}\" style='text-decoration: none;color: aliceblue;'>\n            <el-button class=\"return-list\">快速新建API</el-button>\n        </router-link>\n        <el-form :model=\"form\" ref=\"form\" :rules=\"formRules\">\n            <el-col :span=\"3\" class=\"HOST\">\n                <el-form-item prop=\"env\">\n                    <el-select v-model=\"form.env\"  placeholder=\"测试环境\">\n                        <el-option v-for=\"(item,index) in Host\" :key=\"index+''\" :label=\"item.name\" :value=\"item.host\"></el-option>\n                    </el-select>\n                </el-form-item>\n            </el-col>\n            <div style=\"border: 1px solid #e6e6e6;margin-bottom: 10px;padding:15px;padding-bottom: 0px\">\n                <el-row :gutter=\"10\">\n                    <el-col :span='3'>\n                        <el-form-item>\n                            <el-select v-model=\"form.type\" @change=\"typeChanged\" placeholder=\"请选择类型\">\n                                <el-option v-for=\"(item,index) in type\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span=\"3\">\n                        <el-form-item>\n                            <el-select v-model=\"form.method\" placeholder=\"请求方式\">\n                                <el-option v-for=\"(item,index) in request\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                    </el-col>\n                    <!--<el-col :span=\"3\">-->\n                        <!--<el-form-item>-->\n                            <!--<el-select v-model=\"form.http\" placeholder=\"HTTP协议\">-->\n                                <!--<el-option v-for=\"(item,index) in Http\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>-->\n                            <!--</el-select>-->\n                        <!--</el-form-item>-->\n                    <!--</el-col>-->\n                    <el-col :span='15'>\n                        <el-form-item prop=\"addr\">\n                            <el-input v-model.trim=\"form.addr\" @change=\"addrChanged\" placeholder=\"地址\" auto-complete></el-input>\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span='2'>\n                        <el-button type=\"primary\" @click=\"fastTest\" :loading=\"loadingSend\">执行</el-button>\n                    </el-col>\n                </el-row>\n            </div>\n            <el-row :span=\"24\">\n                <el-collapse v-model=\"activeNames\" @change=\"handleChange\">\n                    <ApiRequest ref=\"apiRequest\"/>\n                    <el-collapse-item title=\"响应结果\" name=\"4\">\n                        <div style=\"margin-bottom: 10px\">\n                            <el-button @click=\"showBody\">Body</el-button>\n                            <el-button @click=\"showHeader\">Head</el-button>\n                            <el-button type=\"primary\" @click=\"format = !format\">格式转换</el-button>\n                        </div>\n                        <el-card class=\"box-card\">\n                            <!--<div slot=\"header\" class=\"clearfix\">-->\n                                <!--<span v-model=\"form.statusCode\" style=\"font-size: 25px\">{{form.statusCode}}</span>-->\n                            <!--</div>-->\n                            <div v-model=\"form.resultData\" :class=\"resultShow? 'parameter-a': 'parameter-b'\" v-show=\"!format\">\n                                <div style=\"word-break: break-all;overflow:auto;overflow-x:hidden\">{{form.resultData}}</div>\n                            </div>\n                            <div v-model=\"form.resultHead\" :class=\"resultShow? 'parameter-b': 'parameter-a'\">{{form.resultHead}}</div>\n                            <div :class=\"resultShow? 'parameter-a': 'parameter-b'\" v-show=\"format && form.resultData\">\n                                <!--<pre id=\"formResult\" style=\"border: 1px solid #e6e6e6;word-break: break-all;overflow:auto;overflow-x:hidden\">{{form.resultData}}</pre>-->\n                                <json-viewer :value=\"form.resultData\" :expand-depth=5 copyable></json-viewer>\n                            </div>\n                            <div v-show=\"!form.resultData&&!form.resultHead\" class=\"raw\">暂无数据</div>\n                        </el-card>\n                    </el-collapse-item>\n                </el-collapse>\n            </el-row>\n        </el-form>\n    </section>\n</template>\n<script>\n    import $ from 'jquery'\n    import VuePopper from \"element-ui/src/utils/vue-popper\";\n    import { test } from '@/api/api'\n    import ApiRequest from './apiRequest.vue'\n    import axios from 'axios'\n    export default {\n        components: {VuePopper,ApiRequest},\n        data() {\n            return {\n                type: [{value: 'http', label: '普通http'},\n                    {value: 'jyb', label: '加油宝app'},\n                    {value: 'service', label: '微服务'}],\n                request: [{value: 'get', label: 'GET'},\n                    {value: 'post', label: 'POST'},\n                    {value: 'put', label: 'PUT'},\n                    {value: 'delete', label: 'DELETE'}],\n                Http: [{value: 'http', label: 'HTTP'},\n                    {value: 'https', label: 'HTTPS'}],\n                loadingSend: false,\n                result: true,\n                activeNames: ['2', '3', '4'],\n                Host: [{name: \"\", host: \"\"}],\n                id: \"\",\n                form: {\n                    url:\"\",\n                    method: 'POST',\n                    http: 'HTTP',\n                    type: 'http',\n                    addr: '',\n                    contentType: \"\",\n                    statusCode: \"\",\n                    resultData: \"\",\n                    resultHead: \"\",\n                    parameters: [],\n                    parameter: {},\n                    headDic: {},\n                    headers: [],\n                },\n                formRules: {\n                    env: [\n                        { required: false, message: '请选择测试环境', trigger: 'blur'}\n                    ],\n                    addr: [\n                        { required: true, message: '请输入地址', trigger: 'blur' },\n                    ]\n                },\n                resultShow: true,\n                format: false,\n            }\n        },\n        methods: {\n            isJsonString(str) {\n                try {\n                    if (typeof JSON.parse(str) === \"object\") {\n                        return true;\n                    }\n                } catch(e) {\n                }\n                return false;\n            },\n            getHost() {\n                let self = this;\n                axios.get(test+\"/api/project/config_list\", {params:{ project_id: this.$route.params.project_id, page: this.page, type:'env'},headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === '999999') {\n                        data.data.data.forEach((item) => {\n                            if (item.status) {\n                                self.Host.push(item)\n                            }\n                        })\n                    }else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            fastTest: function() {\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.loadingSend = true;\n                        let self = this;\n                        let head=this.$refs.apiRequest.head;\n                        self.form.statusCode = '';\n                        self.form.resultData = '';\n                        self.form.resultHead = '';\n                        self.form.headDic={};\n                        self.form.headers=[];\n                        for (let i = 0; i < head.length; i++) {\n                            var a = head[i][\"name\"];\n                            if (a) {\n                                self.form.headDic[a] = head[i][\"value\"];\n                                self.form.headers.push({\"name\":a,\"value\":head[i][\"value\"]});\n                            }\n                        }\n                        let address = self.form.addr;\n                        let url=\"\";\n                        let env=\"\";\n                        if (address.indexOf(\"http://\") ===0||address.indexOf(\"https://\") ===0){\n                            url=address;\n                            if(self.form.env!=\"\")env=self.form.env;\n                        }else{\n                            url = self.form.http + \"://\" + self.form.env + address;\n                        }\n                        self.form.contentType = self.$refs.apiRequest.requestParameterType;\n                        self.form.parameter=self.$refs.apiRequest.getParameters();\n                        self.form.parameters=self.$refs.apiRequest.parameters;\n                        let param = {project_id:self.$route.params.project_id,type:self.form.type,method:self.form.method,contentType:self.form.contentType,url:url,headers:self.form.headDic,data:self.form.parameter};\n                        axios.post(test+\"/api/api/run_api\", param,{headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                            let data=response.data;\n                            self.loadingSend = false;\n                            self.form.statusCode = data[\"data\"][\"result\"][0];\n                            self.form.resultData = data[\"data\"][\"result\"][1];\n                            self.form.resultHead = data[\"data\"][\"result\"][2];\n//                            $(\"#formResult\").text(JSON.stringify(self.form.resultData));\n                        }).catch(error=>{\n                            self.loadingSend = false;\n                            self.$message.error({\n                                message: \"执行失败,请重试.\",\n                                center: true,\n                            })\n                        });\n                    }\n                })\n            },\n            showBody() {\n                this.resultShow = true\n            },\n            showHeader() {\n                this.resultShow = false\n            },\n            handleChange(val) {\n            },\n            typeChanged(){\n                this.$refs.apiRequest.form.type=this.form.type;\n            },\n            addrChanged(){\n                this.$refs.apiRequest.form.addr=this.form.addr;\n            }\n        },\n        mounted() {\n            this.$refs.apiRequest.addEmptyHead();\n            this.$refs.apiRequest.addEmptyParameter();\n            this.getHost();\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .return-list {\n        margin-top: 0px;\n        margin-bottom: 10px;\n        border-radius: 25px;\n    }\n    .head-class {\n        font-size: 17px\n    }\n    .parameter-a {\n        display: block;\n    }\n    .parameter-b {\n        display: none;\n    }\n    .selectInput {\n        /*position:absolute;*/\n        /*margin-left:7px;*/\n        /*padding-left:10px;*/\n        /*width: 63%;*/\n        /*height:25px;*/\n        /*left:1px;*/\n        /*top:1px;*/\n        /*border-bottom:0px;*/\n        /*border-right:0px;*/\n        /*border-left:0px;*/\n        /*border-top:0px;*/\n        position: absolute;\n        /*margin-left: 7px;*/\n        padding-left: 9px;\n        width: 180px;\n        /*border-radius:0px;*/\n        /*height: 38px;*/\n        left: 1px;\n        border-right: 0px;\n    }\n    .raw {\n        border: 1px solid #e6e6e6;\n        margin-bottom: 10px;\n        padding:15px;\n        text-align: center\n    }\n    .HOST {\n        position: absolute;\n        right: 10px;\n        top: 0px;\n    }\n</style>\n<style lang=\"scss\">\n    .selectInput{\n        input{\n            border-right: 0px;\n            border-radius: 4px 0px 0px 4px;\n        }\n    }\n</style>\n"]}]}