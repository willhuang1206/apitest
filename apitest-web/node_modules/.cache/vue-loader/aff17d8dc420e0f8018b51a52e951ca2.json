{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-vue/src/views/project/projectMember.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-vue/src/views/project/projectMember.vue","mtime":1588749633794},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { test} from \"../../api/api\";\nimport axios from 'axios';\nexport default {\n    data() {\n        return {\n            groups: [{value: '1', label: '管理员'},\n                {value: '2', label: '测试经理'},\n                {value: '3', label: '测试成员'},\n                {value: '4', label: '项目成员'},\n                {value: '0', label: '无权限'}],\n            memberData: [],\n            total: 0,\n            page: 1,\n            pages: 0,\n            listLoading: false,\n            reportFrom: \"\",\n            editFormVisible: false,//编辑界面是否显示\n            editLoading: false,\n            editFormRules: {\n                reportFrom: [\n                    { required: true, message: '请输入发送人', trigger: 'blur' },\n                    { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                ],\n                mailUser: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                ],\n                mailPass: [\n                    { required: true, message: '请输入口令', trigger: 'blur' },\n                    { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                ],\n                mailSmtp: [\n                    { required: false, message: '请输入邮件服务器', trigger: 'blur' },\n                    { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                ]\n            },\n            //编辑界面数据\n            editForm: {\n            },\n            users: {\n                visible: false,\n                loading: false,\n                list: [],\n                total: 0,\n                selUsers: [],\n                page: 1,\n                pages: 0\n            },\n        }\n    },\n    methods: {\n        handleCurrentChange(val) {\n            this.page = val;\n            this.getProjectMember();\n        },\n        // 获取成员列表\n        getProjectMember() {\n            this.listLoading = true;\n            let self = this;\n            let params = {\n                project_id: this.$route.params.project_id,\n                page: self.page\n            };\n            let headers = {\n                \"Content-Type\": \"application/json\",\n                Authorization: 'Token '+sessionStorage.getItem('token')\n            };\n            axios.get(`${test}/api/member/project_member`, { params: params, headers:headers}).then(res => {\n                let {msg, code, data} = res.data;\n                self.listLoading = false;\n                if (code === '999999') {\n                    self.total = data.total;\n                    self.pages=data.pages;\n                    self.memberData = data.data\n                }\n                else {\n                    self.$message.error({\n                        message: msg,\n                        center: true,\n                    })\n                }\n            })\n        },\n        handleCurrentChangeUser(val) {\n            this.users.page = val;\n            this.getGlobalUser();\n        },\n        getGlobalUser() {\n            this.users.loading = true;\n            let self = this;\n            let params = {\n                page: self.users.page,\n            };\n            let headers = {\n                Authorization: 'Token '+sessionStorage.getItem('token')\n            };\n            axios.get(test+\"/api/global/user_list\", { params: params}).then(response => {\n                self.users.loading = false;\n                if (response.data.code === '999999') {\n                    self.users.total = response.data.data.total;\n                    self.users.pages = response.data.data.pages;\n                    self.users.list=[];\n                    response.data.data.data.forEach((item) =>{\n                        self.users.list.push(item);\n                    });\n                }\n                else {\n                    self.$message.error({\n                        message: response.data.msg,\n                        center: true,\n                    })\n                }\n            }).catch(error=>{\n\n            });\n        },\n        //显示新增界面\n        handleUpdate: function () {\n            this.users.visible = true;\n        },\n        selUsersChange(sels){\n            this.users.selUsers = sels;\n        },\n        updateUsersSubmit: function () {\n            let ids = this.users.selUsers.map(item => item.id);\n            let self = this;\n            this.$confirm('确认更新选中的用户吗？', '提示', {\n                type: 'warning'\n            }).then(() => {\n                self.users.loading = true;\n                //NProgress.start();\n                let params=JSON.stringify({\n                    project_id: this.$route.params.project_id,\n                    group: self.users.group,\n                    ids: ids\n                });\n                let headers={\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.post(test+\"/api/member/update\", params,{headers:headers}).then(response => {\n                    self.users.loading = false;\n                    if (response.data.code === '999999') {\n                        self.$message({\n                            message: '更新成功',\n                            center: true,\n                            type: 'success'\n                        })\n                    }else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                    self.users.visible = false;\n                    self.getProjectMember();\n                }).catch(error=>{\n                });\n            }).catch(() => {\n\n            });\n        }\n    },\n    mounted() {\n        this.getProjectMember();\n        this.getGlobalUser();\n    }\n}\n",{"version":3,"sources":["projectMember.vue"],"names":[],"mappingsfile":"projectMember.vue","sourceRoot":"src/views/project","sourcesContent":["<template>\n    <!--列表-->\n    <el-row class=\"member-manage\">\n        <p style=\"color:#999\"><strong>项目成员</strong></p>\n\n        <el-dialog width=\"50%\" title=\"更新成员权限\" :visible.sync=\"users.visible\" :close-on-click-modal=\"false\" >\n            <el-select filterable v-model=\"users.group\" placeholder=\"请选择权限\">\n                <el-option v-for=\"(item,index) in groups\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\">\n                </el-option>\n            </el-select>\n            <el-row :gutter=\"10\">\n                <el-col :span=\"18\">\n                    <el-table :data=\"users.list\" highlight-current-row v-loading=\"users.loading\"\n                              style=\"width: 100%;\" :show-header=\"true\" max-height=\"400\" @selection-change=\"selUsersChange\">\n                        <el-table-column type=\"selection\" width=\"55\">\n                        </el-table-column>\n                        <el-table-column prop=\"id\" label=\"ID\" min-width=\"10%\">\n                        </el-table-column>\n                        <el-table-column prop=\"username\" label=\"用户名\" min-width=\"20%\">\n                        </el-table-column>\n                        <el-table-column prop=\"name\" label=\"姓名\" min-width=\"20%\">\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n            <el-col :span=\"24\" class=\"toolbar\">\n                <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChangeUser\" :current-page.sync=\"users.page\" :total=\"users.total\" :page-size=\"20\" :page-count=\"users.pages\" style=\"float:right;\">\n                </el-pagination>\n            </el-col>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"users.visible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"updateUsersSubmit\" :loading=\"users.loading\">提交</el-button>\n            </div>\n        </el-dialog>\n\n        <el-col :span=\"24\">\n            <el-table :data=\"memberData\" highlight-current-row v-loading=\"listLoading\" style=\"width: 100%;\">\n                <el-table-column prop=\"username\" label=\"姓名\" min-width=\"30%\">\n                </el-table-column>\n                <el-table-column prop=\"group\" label=\"权限\" min-width=\"30%\">\n                </el-table-column>\n                <el-table-column prop=\"userPhone\" label=\"手机号\" min-width=\"20%\">\n                </el-table-column>\n                <el-table-column prop=\"userEmail\" label=\"邮箱地址\" min-width=\"20%\">\n                </el-table-column>\n            </el-table>\n            <!--工具条-->\n            <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChange\" :current-page.sync=\"page\" :total=\"total\" :page-size=\"20\" :page-count=\"pages\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px;\">\n            <el-form :inline=\"true\" @submit.native.prevent>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"handleUpdate\">更新</el-button>\n                </el-form-item>\n            </el-form>\n        </el-col>\n    </el-row>\n</template>\n\n<script>\n    import { test} from \"../../api/api\";\n    import axios from 'axios';\n    export default {\n        data() {\n            return {\n                groups: [{value: '1', label: '管理员'},\n                    {value: '2', label: '测试经理'},\n                    {value: '3', label: '测试成员'},\n                    {value: '4', label: '项目成员'},\n                    {value: '0', label: '无权限'}],\n                memberData: [],\n                total: 0,\n                page: 1,\n                pages: 0,\n                listLoading: false,\n                reportFrom: \"\",\n                editFormVisible: false,//编辑界面是否显示\n                editLoading: false,\n                editFormRules: {\n                    reportFrom: [\n                        { required: true, message: '请输入发送人', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ],\n                    mailUser: [\n                        { required: true, message: '请输入用户名', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ],\n                    mailPass: [\n                        { required: true, message: '请输入口令', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ],\n                    mailSmtp: [\n                        { required: false, message: '请输入邮件服务器', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ]\n                },\n                //编辑界面数据\n                editForm: {\n                },\n                users: {\n                    visible: false,\n                    loading: false,\n                    list: [],\n                    total: 0,\n                    selUsers: [],\n                    page: 1,\n                    pages: 0\n                },\n            }\n        },\n        methods: {\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getProjectMember();\n            },\n            // 获取成员列表\n            getProjectMember() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    project_id: this.$route.params.project_id,\n                    page: self.page\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(`${test}/api/member/project_member`, { params: params, headers:headers}).then(res => {\n                    let {msg, code, data} = res.data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        self.total = data.total;\n                        self.pages=data.pages;\n                        self.memberData = data.data\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            handleCurrentChangeUser(val) {\n                this.users.page = val;\n                this.getGlobalUser();\n            },\n            getGlobalUser() {\n                this.users.loading = true;\n                let self = this;\n                let params = {\n                    page: self.users.page,\n                };\n                let headers = {\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(test+\"/api/global/user_list\", { params: params}).then(response => {\n                    self.users.loading = false;\n                    if (response.data.code === '999999') {\n                        self.users.total = response.data.data.total;\n                        self.users.pages = response.data.data.pages;\n                        self.users.list=[];\n                        response.data.data.data.forEach((item) =>{\n                            self.users.list.push(item);\n                        });\n                    }\n                    else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            //显示新增界面\n            handleUpdate: function () {\n                this.users.visible = true;\n            },\n            selUsersChange(sels){\n                this.users.selUsers = sels;\n            },\n            updateUsersSubmit: function () {\n                let ids = this.users.selUsers.map(item => item.id);\n                let self = this;\n                this.$confirm('确认更新选中的用户吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.users.loading = true;\n                    //NProgress.start();\n                    let params=JSON.stringify({\n                        project_id: this.$route.params.project_id,\n                        group: self.users.group,\n                        ids: ids\n                    });\n                    let headers={\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/member/update\", params,{headers:headers}).then(response => {\n                        self.users.loading = false;\n                        if (response.data.code === '999999') {\n                            self.$message({\n                                message: '更新成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        }else {\n                            self.$message.error({\n                                message: response.data.msg,\n                                center: true,\n                            })\n                        }\n                        self.users.visible = false;\n                        self.getProjectMember();\n                    }).catch(error=>{\n                    });\n                }).catch(() => {\n\n                });\n            }\n        },\n        mounted() {\n            this.getProjectMember();\n            this.getGlobalUser();\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .member-manage {\n        margin: 35px;\n    }\n</style>\n"]}]}