{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-vue/src/views/user/userList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-vue/src/views/user/userList.vue","mtime":1588749633820},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    //import NProgress from 'nprogress'\n    import { test} from '../../api/api';\n    import axios from 'axios'\n    import md5 from 'js-md5'\n    export default {\n        data() {\n            return {\n                filters: {\n                    name: ''\n                },\n                total: 0,\n                page: 1,\n                pages: 0,\n                users: [],\n                userlist: [],\n                listLoading: false,\n                sels: [],//列表选中列\n\n                editForm:{\n                    id: \"\",\n                    visible: false,\n                    loading: false,\n                    title: \"新增\",\n                    username: \"\",\n                    name: \"\",\n                    password: \"\",\n                    checkPass: \"\",\n                    email: \"\",\n                    phone: \"\",\n                    rules: {\n                        username: [\n                            { required: true, message: '请输入用户名', trigger: 'blur' },\n                            { min: 4, max: 10, message: '长度在 4 到 10 个字符', trigger: 'blur' }\n                        ],\n                        name: [\n                            { required: true, message: '请输入姓名', trigger: 'blur' },\n                            { min: 2, max: 4, message: '长度在 2 到 4 个字符', trigger: 'blur' }\n                        ],\n                        password : [\n                            { required: true, message: '请输入密码', trigger: 'blur'},\n                            { min: 6, max: 50, message: '长度至少为6', trigger: 'blur' }\n                        ],\n                        checkPass : [\n                            { required: true, message: '请再次输入密码', trigger: 'blur'},\n                            { min: 6, max: 50, message: '长度至少为6', trigger: 'blur' }\n                        ],\n                        email: [\n                            { required: true, message: '请输入邮箱', trigger: 'blur' },\n                        ]\n                    },\n                },\n\n                users: {\n                    visible: false,\n                    loading: false,\n                    list: [],\n                    total: 0,\n                    page: 1,\n                    pages: 0,\n                    selUsers: []\n                },\n\n            }\n        },\n        methods: {\n            handleSearch(){\n                this.page=1;\n                this.getGlobalUser();\n            },\n            getGlobalUser() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    page: self.page,\n                    name: self.filters.name,\n                };\n                let headers = {\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(test+\"/api/global/user_list\", { params: params}).then(response => {\n                    self.listLoading = false;\n                    if (response.data.code === '999999') {\n                        self.total = response.data.data.total;\n                        self.pages=response.data.data.pages;\n                        self.userlist=[];\n                        response.data.data.data.forEach((item) =>{\n                            self.userlist.push(item)\n                        });\n                    }\n                    else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            getUsers() {\n                let self=this;\n                self.users.loading = true;\n                let params={\n                    page: self.users.page\n                };\n                axios.get(test+\"/api/global/get_users\", {params:params}).then(response => {\n                    self.users.loading = false;\n                    if (response.data.code === '999999') {\n                        self.users.list = response.data.data.data;\n                        self.users.total = response.data.data.total;\n                        self.users.pages = response.data.data.pages;\n                    }\n                    else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除用户[' + row.name + ']吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let params = {\n                        ids: [row.id, ]\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/global/del_user\", params,{headers:headers}).then(response => {\n                        let data = response.data;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalUser()\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {\n                });\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getGlobalUser();\n            },\n            handleCurrentChangeUser(val) {\n                this.users.page = val;\n                this.getUsers();\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.editForm.visible = true;\n                this.editForm.title = \"编辑\";\n                try{\n                    this.editForm.id=row.id;\n                    this.editForm.username=row.username;\n                    this.editForm.name=row.name;\n                    this.editForm.password=row.password;\n                    this.editForm.checkPass=row.password;\n                    this.editForm.email=row.email;\n                    this.editForm.phone=row.phone;\n//                    this.editForm = {\"id\":row.id,\"username\":row.username,\"name\":row.name,\"password\":row.password,\"checkPass\":row.password,\"email\":row.email,\"phone\":row.phone};\n                }catch(err){\n                    alert(err);\n                }\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.editForm.id=\"\";\n                this.editForm.username=\"\";\n                this.editForm.name=\"\";\n                this.editForm.password=\"\";\n                this.editForm.checkPass=\"\";\n                this.editForm.email=\"\";\n                this.editForm.phone=\"\";\n                this.editForm.visible = true;\n                this.editForm.title = \"新增\";\n            },\n            handleLink: function () {\n                this.users.visible = true;\n                this.users.page=1;\n                this.getUsers();\n            },\n            linkUsersSubmit: function () {\n                let ids = this.users.selUsers.map(item => item.user_id);\n                let self = this;\n                this.$confirm('确认关联选中的用户吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    let params=JSON.stringify({\n                        ids: ids\n                    });\n                    let headers={\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/global/link_users\", params,{headers:headers}).then(response => {\n                        self.listLoading = false;\n                        if (response.data.code === '999999') {\n                            self.$message({\n                                message: '关联成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        }else {\n                            self.$message.error({\n                                message: response.data.msg,\n                                center: true,\n                            })\n                        }\n                        self.users.visible = false;\n                        self.getGlobalUser()\n                    }).catch(error=>{\n                    });\n                }).catch(() => {\n\n                });\n            },\n            //编辑\n            editFormSubmit: function () {\n                if(this.editForm.password!=this.editForm.checkPass){\n                    this.$message.error({\n                        message: \"两次输入的密码不一致,请重新输入!\",\n                        center: true,\n                    })\n                    return;\n                }\n                let self = this;\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.editForm.loading = true;\n                            //NProgress.start();\n                            let params = {\n                                id: Number(self.editForm.id),\n                                username: self.editForm.username,\n                                name: self.editForm.name,\n                                password: md5(self.editForm.password),\n                                email: self.editForm.email,\n                                phone: self.editForm.phone\n                            };\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+sessionStorage.getItem('token')\n                            };\n                            let url=test+\"/api/global/add_user\";\n                            if(self.editForm.id!=\"\"){\n                                url=test+\"/api/global/update_user\";\n                            }\n                            axios.post(url, params,{headers:headers}).then(response => {\n                                self.editForm.loading = false;\n                                if (response.data.code === '999999') {\n                                    self.$message({\n                                        message: '成功',\n                                        center: true,\n                                        type: 'success'\n                                    })\n                                    self.editForm.visible = false;\n                                    self.getGlobalUser();\n                                }else {\n                                    self.$message.error({\n                                        message: response.data.msg,\n                                        center: true,\n                                    })\n                                }\n                            }).catch(error=>{\n                            });\n                        }).catch(() => {});\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            selUsersChange(sels){\n                this.users.selUsers = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认删除选中的用户吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    let params = {\n                        ids: ids\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/global/del_user\", params,{headers:headers}).then(response => {\n                        let data = response.data;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalUser()\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {});\n            }\n        },\n        mounted() {\n            this.getGlobalUser();\n        }\n    }\n\n",{"version":3,"sources":["userList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"userList.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <!--工具条-->\n        <div class=\"filter-container\">\n            <el-input v-model.trim=\"filters.name\" style=\"width: 200px;\" placeholder=\"名称\" @keyup.enter.native=\"handleSearch\"></el-input>\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">查询</el-button>\n            <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"handleAdd\">新增</el-button>\n            <el-button type=\"primary\" @click=\"handleLink\">关联</el-button>\n        </div>\n        <!--列表-->\n        <el-table :data=\"userlist\" stripe border highlight-current-row v-loading=\"listLoading\" @selection-change=\"selsChange\" style=\"width: 100%;\">\n            <el-table-column type=\"selection\" min-width=\"5%\">\n            </el-table-column>\n            <el-table-column prop=\"username\" label=\"用户名\" min-width=\"15%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"姓名\" min-width=\"10%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column v-if=false prop=\"password\" label=\"密码\" min-width=\"\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"email\" label=\"邮箱\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"phone\" label=\"手机号\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"type\" label=\"类型\" min-width=\"10%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column label=\"操作\" min-width=\"20%\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"primary\" v-show=\"scope.row.type==='local'\" size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\" plain>编辑</el-button>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\" plain>删除</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\">\n            <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n            <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChange\" :current-page.sync=\"page\" :total=\"total\" :page-size=\"20\" :page-count=\"pages\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n\n        <!--编辑界面-->\n        <el-dialog width=\"40%\" :title=\"editForm.title\" :visible.sync=\"editForm.visible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"editForm\"  :rules=\"editForm.rules\" ref=\"editForm\" label-width=\"80px\">\n                <el-form-item label=\"用户名\" prop=\"username\">\n                    <el-input v-model.trim=\"editForm.username\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"姓名\" prop='name'>\n                    <el-input v-model.trim=\"editForm.name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"password\">\n                    <el-input type=\"password\" v-model.trim=\"editForm.password\" auto-complete=\"off\" placeholder=\"密码\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"验证密码\" prop=\"checkPass\">\n                    <el-input type=\"password\" v-model.trim=\"editForm.checkPass\" auto-complete=\"off\" placeholder=\"密码\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\" prop='email'>\n                    <el-input v-model.trim=\"editForm.email\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"手机号\" prop='phone'>\n                    <el-input v-model.trim=\"editForm.phone\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"editForm.visible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"editFormSubmit\" :loading=\"editForm.loading\">提交</el-button>\n            </div>\n        </el-dialog>\n\n        <el-dialog width=\"50%\" title=\"关联用户\" :visible.sync=\"users.visible\" :close-on-click-modal=\"false\" >\n            <el-row :gutter=\"10\">\n                <el-col :span=\"24\">\n                    <el-table :data=\"users.list\" highlight-current-row v-loading=\"users.loading\"\n                              style=\"width: 100%;\" :show-header=\"true\" max-height=\"400\" @selection-change=\"selUsersChange\">\n                        <el-table-column type=\"selection\" min-width=\"5%\">\n                        </el-table-column>\n                        <el-table-column prop=\"user_id\" label=\"ID\" min-width=\"10%\">\n                        </el-table-column>\n                        <el-table-column prop=\"user_name\" label=\"用户名\" min-width=\"20%\">\n                        </el-table-column>\n                        <el-table-column prop=\"name\" label=\"姓名\" min-width=\"20%\">\n                        </el-table-column>\n                        <el-table-column prop=\"phone\" label=\"手机\" min-width=\"20%\">\n                        </el-table-column>\n                        <el-table-column prop=\"email\" label=\"邮箱\" min-width=\"25%\">\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n            <el-col :span=\"24\" class=\"toolbar\">\n                <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChangeUser\" :current-page.sync=\"users.page\" :total=\"users.total\" :page-size=\"20\" :page-count=\"users.pages\" style=\"float:right;\">\n                </el-pagination>\n            </el-col>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"users.visible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"linkUsersSubmit\" :loading=\"users.loading\">提交</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    //import NProgress from 'nprogress'\n    import { test} from '../../api/api';\n    import axios from 'axios'\n    import md5 from 'js-md5'\n    export default {\n        data() {\n            return {\n                filters: {\n                    name: ''\n                },\n                total: 0,\n                page: 1,\n                pages: 0,\n                users: [],\n                userlist: [],\n                listLoading: false,\n                sels: [],//列表选中列\n\n                editForm:{\n                    id: \"\",\n                    visible: false,\n                    loading: false,\n                    title: \"新增\",\n                    username: \"\",\n                    name: \"\",\n                    password: \"\",\n                    checkPass: \"\",\n                    email: \"\",\n                    phone: \"\",\n                    rules: {\n                        username: [\n                            { required: true, message: '请输入用户名', trigger: 'blur' },\n                            { min: 4, max: 10, message: '长度在 4 到 10 个字符', trigger: 'blur' }\n                        ],\n                        name: [\n                            { required: true, message: '请输入姓名', trigger: 'blur' },\n                            { min: 2, max: 4, message: '长度在 2 到 4 个字符', trigger: 'blur' }\n                        ],\n                        password : [\n                            { required: true, message: '请输入密码', trigger: 'blur'},\n                            { min: 6, max: 50, message: '长度至少为6', trigger: 'blur' }\n                        ],\n                        checkPass : [\n                            { required: true, message: '请再次输入密码', trigger: 'blur'},\n                            { min: 6, max: 50, message: '长度至少为6', trigger: 'blur' }\n                        ],\n                        email: [\n                            { required: true, message: '请输入邮箱', trigger: 'blur' },\n                        ]\n                    },\n                },\n\n                users: {\n                    visible: false,\n                    loading: false,\n                    list: [],\n                    total: 0,\n                    page: 1,\n                    pages: 0,\n                    selUsers: []\n                },\n\n            }\n        },\n        methods: {\n            handleSearch(){\n                this.page=1;\n                this.getGlobalUser();\n            },\n            getGlobalUser() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    page: self.page,\n                    name: self.filters.name,\n                };\n                let headers = {\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(test+\"/api/global/user_list\", { params: params}).then(response => {\n                    self.listLoading = false;\n                    if (response.data.code === '999999') {\n                        self.total = response.data.data.total;\n                        self.pages=response.data.data.pages;\n                        self.userlist=[];\n                        response.data.data.data.forEach((item) =>{\n                            self.userlist.push(item)\n                        });\n                    }\n                    else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            getUsers() {\n                let self=this;\n                self.users.loading = true;\n                let params={\n                    page: self.users.page\n                };\n                axios.get(test+\"/api/global/get_users\", {params:params}).then(response => {\n                    self.users.loading = false;\n                    if (response.data.code === '999999') {\n                        self.users.list = response.data.data.data;\n                        self.users.total = response.data.data.total;\n                        self.users.pages = response.data.data.pages;\n                    }\n                    else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除用户[' + row.name + ']吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let params = {\n                        ids: [row.id, ]\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/global/del_user\", params,{headers:headers}).then(response => {\n                        let data = response.data;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalUser()\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {\n                });\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getGlobalUser();\n            },\n            handleCurrentChangeUser(val) {\n                this.users.page = val;\n                this.getUsers();\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.editForm.visible = true;\n                this.editForm.title = \"编辑\";\n                try{\n                    this.editForm.id=row.id;\n                    this.editForm.username=row.username;\n                    this.editForm.name=row.name;\n                    this.editForm.password=row.password;\n                    this.editForm.checkPass=row.password;\n                    this.editForm.email=row.email;\n                    this.editForm.phone=row.phone;\n//                    this.editForm = {\"id\":row.id,\"username\":row.username,\"name\":row.name,\"password\":row.password,\"checkPass\":row.password,\"email\":row.email,\"phone\":row.phone};\n                }catch(err){\n                    alert(err);\n                }\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.editForm.id=\"\";\n                this.editForm.username=\"\";\n                this.editForm.name=\"\";\n                this.editForm.password=\"\";\n                this.editForm.checkPass=\"\";\n                this.editForm.email=\"\";\n                this.editForm.phone=\"\";\n                this.editForm.visible = true;\n                this.editForm.title = \"新增\";\n            },\n            handleLink: function () {\n                this.users.visible = true;\n                this.users.page=1;\n                this.getUsers();\n            },\n            linkUsersSubmit: function () {\n                let ids = this.users.selUsers.map(item => item.user_id);\n                let self = this;\n                this.$confirm('确认关联选中的用户吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    let params=JSON.stringify({\n                        ids: ids\n                    });\n                    let headers={\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/global/link_users\", params,{headers:headers}).then(response => {\n                        self.listLoading = false;\n                        if (response.data.code === '999999') {\n                            self.$message({\n                                message: '关联成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        }else {\n                            self.$message.error({\n                                message: response.data.msg,\n                                center: true,\n                            })\n                        }\n                        self.users.visible = false;\n                        self.getGlobalUser()\n                    }).catch(error=>{\n                    });\n                }).catch(() => {\n\n                });\n            },\n            //编辑\n            editFormSubmit: function () {\n                if(this.editForm.password!=this.editForm.checkPass){\n                    this.$message.error({\n                        message: \"两次输入的密码不一致,请重新输入!\",\n                        center: true,\n                    })\n                    return;\n                }\n                let self = this;\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.editForm.loading = true;\n                            //NProgress.start();\n                            let params = {\n                                id: Number(self.editForm.id),\n                                username: self.editForm.username,\n                                name: self.editForm.name,\n                                password: md5(self.editForm.password),\n                                email: self.editForm.email,\n                                phone: self.editForm.phone\n                            };\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+sessionStorage.getItem('token')\n                            };\n                            let url=test+\"/api/global/add_user\";\n                            if(self.editForm.id!=\"\"){\n                                url=test+\"/api/global/update_user\";\n                            }\n                            axios.post(url, params,{headers:headers}).then(response => {\n                                self.editForm.loading = false;\n                                if (response.data.code === '999999') {\n                                    self.$message({\n                                        message: '成功',\n                                        center: true,\n                                        type: 'success'\n                                    })\n                                    self.editForm.visible = false;\n                                    self.getGlobalUser();\n                                }else {\n                                    self.$message.error({\n                                        message: response.data.msg,\n                                        center: true,\n                                    })\n                                }\n                            }).catch(error=>{\n                            });\n                        }).catch(() => {});\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            selUsersChange(sels){\n                this.users.selUsers = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认删除选中的用户吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    let params = {\n                        ids: ids\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/global/del_user\", params,{headers:headers}).then(response => {\n                        let data = response.data;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalUser()\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {});\n            }\n        },\n        mounted() {\n            this.getGlobalUser();\n        }\n    }\n\n</script>\n<style>\n</style>\n"]}]}