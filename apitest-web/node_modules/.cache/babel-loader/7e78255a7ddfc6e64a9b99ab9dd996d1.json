{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/huangrong/workspace/apitest/apitest-vue/src/store/modules/user.js","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-vue/src/store/modules/user.js","mtime":1588214777837},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _user = require(\"@/api/user\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = _interopRequireWildcard(require(\"@/router\"));\n\nvar _api = require(\"@/api/api\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\n\nvar _jsMd = _interopRequireDefault(require(\"js-md5\"));\n\nvar state = {\n  token: (0, _auth.getToken)(),\n  name: '',\n  avatar: '',\n  introduction: '',\n  roles: []\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n    state.introduction = introduction;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      (0, _user.login)({\n        username: username.trim(),\n        password: (0, _jsMd.default)(password)\n      }).then(function (res) {\n        var msg = res.msg,\n            code = res.code,\n            data = res.data;\n\n        if (code === '999999') {\n          var token = data.role + '-token';\n          sessionStorage.setItem('username', data.username);\n          sessionStorage.setItem('token', data.ticket);\n          sessionStorage.setItem('name', data.name);\n          sessionStorage.setItem('role', data.role);\n          var expire = new Date(new Date().getTime() + data.expire * 1000);\n\n          _jsCookie.default.set(\"ticket\", data.ticket, {\n            expires: expire\n          });\n\n          _jsCookie.default.set(\"username\", data.username, {\n            expires: expire\n          });\n\n          _jsCookie.default.set(\"userid\", data.userid, {\n            expires: expire\n          });\n\n          _jsCookie.default.set(\"name\", data.name, {\n            expires: expire\n          });\n\n          _jsCookie.default.set(\"role\", data.role, {\n            expires: expire\n          });\n\n          commit('SET_TOKEN', token);\n          (0, _auth.setToken)(token);\n          resolve();\n        } else {//reject();\n          //this.loading = false;\n          //_this.$message.error({\n          //    message: msg,\n          //    center: true\n          //})\n        }\n      }).catch(function (error) {\n        reject(error);\n      }); //var loginParams = { username: username.trim(), password: md5(password) }\n      //axios.post(`${test}/api/user/login`, loginParams).then(res => {\n      //    console.log(3);\n      //    let { msg, code, data } = res.data;\n      //    if (code === '999999') {\n      //        sessionStorage.setItem('username', JSON.stringify(data.username));\n      //        sessionStorage.setItem('token', JSON.stringify(data.ticket));\n      //        sessionStorage.setItem('name', JSON.stringify(data.name));\n      //        sessionStorage.setItem('role', JSON.stringify(data.role));\n      //        var expire = new Date(new Date().getTime() + data.expire * 1000);\n      //        Cookies.set(\"ticket\",data.ticket,{expires: expire});\n      //        Cookies.set(\"username\",data.username,{expires: expire});\n      //        Cookies.set(\"userid\",data.userid,{expires: expire});\n      //        Cookies.set(\"name\",data.name,{expires: expire});\n      //        Cookies.set(\"role\",data.role,{expires: expire});\n      //        commit('SET_TOKEN', JSON.stringify(data.ticket));\n      //        setToken(JSON.stringify(data.ticket));\n      //        console.log(4);\n      //        //resolve();\n      //    }else {\n      //        //reject();\n      //        //this.loading = false;\n      //        //_this.$message.error({\n      //        //    message: msg,\n      //        //    center: true\n      //        //})\n      //    }\n      //});\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getInfo)(state.token).then(function (response) {\n        var data = response.data;\n\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n\n        var roles = data.roles,\n            name = data.name,\n            avatar = data.avatar,\n            introduction = data.introduction; // roles must be a non-empty array\n\n        if (!roles || roles.length <= 0) {\n          reject('getInfo: roles must be a non-null array!');\n        }\n\n        commit('SET_ROLES', roles);\n        commit('SET_NAME', name);\n        commit('SET_AVATAR', avatar);\n        commit('SET_INTRODUCTION', introduction);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state,\n        dispatch = _ref3.dispatch;\n    return new Promise(function (resolve, reject) {\n      (0, _user.logout)(state.token).then(function () {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        (0, _auth.removeToken)();\n        (0, _router.resetRouter)(); // reset visited views and cached views\n        // to fixed https://github.com/PanJiaChen/vue-element-admin/issues/2485\n\n        dispatch('tagsView/delAllViews', null, {\n          root: true\n        });\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      (0, _auth.removeToken)();\n      resolve();\n    });\n  },\n  // dynamically modify permissions\n  changeRoles: function changeRoles(_ref5, role) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref6 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve) {\n        var token, _yield$dispatch, roles, accessRoutes;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = role + '-token';\n                commit('SET_TOKEN', token);\n                (0, _auth.setToken)(token);\n                _context.next = 5;\n                return dispatch('getInfo');\n\n              case 5:\n                _yield$dispatch = _context.sent;\n                roles = _yield$dispatch.roles;\n                (0, _router.resetRouter)(); // generate accessible routes map based on roles\n\n                _context.next = 10;\n                return dispatch('permission/generateRoutes', roles, {\n                  root: true\n                });\n\n              case 10:\n                accessRoutes = _context.sent;\n\n                // dynamically add accessible routes\n                _router.default.addRoutes(accessRoutes); // reset visited views and cached views\n\n\n                dispatch('tagsView/delAllViews', null, {\n                  root: true\n                });\n                resolve();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",{"version":3,"sources":["/Users/huangrong/workspace/apitest/apitest-vue/src/store/modules/user.js"],"names":["state","token","name","avatar","introduction","roles","mutations","SET_TOKEN","SET_INTRODUCTION","SET_NAME","SET_AVATAR","SET_ROLES","actions","login","userInfo","commit","username","password","Promise","resolve","reject","trim","then","res","msg","code","data","role","sessionStorage","setItem","ticket","expire","Date","getTime","Cookies","set","expires","userid","catch","error","getInfo","response","length","logout","dispatch","root","resetToken","changeRoles","accessRoutes","router","addRoutes","namespaced"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,qBADK;AAEZC,EAAAA,IAAI,EAAE,EAFM;AAGZC,EAAAA,MAAM,EAAE,EAHI;AAIZC,EAAAA,YAAY,EAAE,EAJF;AAKZC,EAAAA,KAAK,EAAE;AALK,CAAd;AAQA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,mBAACP,KAAD,EAAQC,KAAR,EAAkB;AAC3BD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD,GAHe;AAIhBO,EAAAA,gBAAgB,EAAE,0BAACR,KAAD,EAAQI,YAAR,EAAyB;AACzCJ,IAAAA,KAAK,CAACI,YAAN,GAAqBA,YAArB;AACD,GANe;AAOhBK,EAAAA,QAAQ,EAAE,kBAACT,KAAD,EAAQE,IAAR,EAAiB;AACzBF,IAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACD,GATe;AAUhBQ,EAAAA,UAAU,EAAE,oBAACV,KAAD,EAAQG,MAAR,EAAmB;AAC7BH,IAAAA,KAAK,CAACG,MAAN,GAAeA,MAAf;AACD,GAZe;AAahBQ,EAAAA,SAAS,EAAE,mBAACX,KAAD,EAAQK,KAAR,EAAkB;AAC3BL,IAAAA,KAAK,CAACK,KAAN,GAAcA,KAAd;AACD;AAfe,CAAlB;AAkBA,IAAMO,OAAO,GAAG;AACd;AACAC,EAAAA,KAFc,uBAEIC,QAFJ,EAEc;AAAA,QAApBC,MAAoB,QAApBA,MAAoB;AAAA,QAClBC,QADkB,GACKF,QADL,CAClBE,QADkB;AAAA,QACRC,QADQ,GACKH,QADL,CACRG,QADQ;AAE1B,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,uBAAM;AAAEJ,QAAAA,QAAQ,EAAEA,QAAQ,CAACK,IAAT,EAAZ;AAA6BJ,QAAAA,QAAQ,EAAE,mBAAIA,QAAJ;AAAvC,OAAN,EAA8DK,IAA9D,CAAmE,UAAAC,GAAG,EAAI;AAAA,YAChEC,GADgE,GAC5CD,GAD4C,CAChEC,GADgE;AAAA,YAC3DC,IAD2D,GAC5CF,GAD4C,CAC3DE,IAD2D;AAAA,YACrDC,IADqD,GAC5CH,GAD4C,CACrDG,IADqD;;AAExE,YAAID,IAAI,KAAK,QAAb,EAAuB;AACnB,cAAMxB,KAAK,GAAGyB,IAAI,CAACC,IAAL,GAAY,QAA1B;AACAC,UAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCH,IAAI,CAACV,QAAxC;AACAY,UAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCH,IAAI,CAACI,MAArC;AACAF,UAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BH,IAAI,CAACxB,IAApC;AACA0B,UAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BH,IAAI,CAACC,IAApC;AACA,cAAII,MAAM,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuBP,IAAI,CAACK,MAAL,GAAc,IAA9C,CAAb;;AACAG,4BAAQC,GAAR,CAAY,QAAZ,EAAqBT,IAAI,CAACI,MAA1B,EAAiC;AAACM,YAAAA,OAAO,EAAEL;AAAV,WAAjC;;AACAG,4BAAQC,GAAR,CAAY,UAAZ,EAAuBT,IAAI,CAACV,QAA5B,EAAqC;AAACoB,YAAAA,OAAO,EAAEL;AAAV,WAArC;;AACAG,4BAAQC,GAAR,CAAY,QAAZ,EAAqBT,IAAI,CAACW,MAA1B,EAAiC;AAACD,YAAAA,OAAO,EAAEL;AAAV,WAAjC;;AACAG,4BAAQC,GAAR,CAAY,MAAZ,EAAmBT,IAAI,CAACxB,IAAxB,EAA6B;AAACkC,YAAAA,OAAO,EAAEL;AAAV,WAA7B;;AACAG,4BAAQC,GAAR,CAAY,MAAZ,EAAmBT,IAAI,CAACC,IAAxB,EAA6B;AAACS,YAAAA,OAAO,EAAEL;AAAV,WAA7B;;AACAhB,UAAAA,MAAM,CAAC,WAAD,EAAcd,KAAd,CAAN;AACA,8BAASA,KAAT;AACAkB,UAAAA,OAAO;AACV,SAfD,MAeM,CACF;AACA;AACA;AACA;AACA;AACA;AACH;AACF,OAzBD,EAyBGmB,KAzBH,CAyBS,UAAAC,KAAK,EAAI;AAChBnB,QAAAA,MAAM,CAACmB,KAAD,CAAN;AACD,OA3BD,EADsC,CA8BtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA1DM,CAAP;AA2DD,GA/Da;AAiEd;AACAC,EAAAA,OAlEc,0BAkEa;AAAA,QAAjBzB,MAAiB,SAAjBA,MAAiB;AAAA,QAATf,KAAS,SAATA,KAAS;AACzB,WAAO,IAAIkB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,yBAAQpB,KAAK,CAACC,KAAd,EAAqBqB,IAArB,CAA0B,UAAAmB,QAAQ,EAAI;AAAA,YAC5Bf,IAD4B,GACnBe,QADmB,CAC5Bf,IAD4B;;AAGpC,YAAI,CAACA,IAAL,EAAW;AACTN,UAAAA,MAAM,CAAC,0CAAD,CAAN;AACD;;AALmC,YAO5Bf,KAP4B,GAOUqB,IAPV,CAO5BrB,KAP4B;AAAA,YAOrBH,IAPqB,GAOUwB,IAPV,CAOrBxB,IAPqB;AAAA,YAOfC,MAPe,GAOUuB,IAPV,CAOfvB,MAPe;AAAA,YAOPC,YAPO,GAOUsB,IAPV,CAOPtB,YAPO,EASpC;;AACA,YAAI,CAACC,KAAD,IAAUA,KAAK,CAACqC,MAAN,IAAgB,CAA9B,EAAiC;AAC/BtB,UAAAA,MAAM,CAAC,0CAAD,CAAN;AACD;;AAEDL,QAAAA,MAAM,CAAC,WAAD,EAAcV,KAAd,CAAN;AACAU,QAAAA,MAAM,CAAC,UAAD,EAAab,IAAb,CAAN;AACAa,QAAAA,MAAM,CAAC,YAAD,EAAeZ,MAAf,CAAN;AACAY,QAAAA,MAAM,CAAC,kBAAD,EAAqBX,YAArB,CAAN;AACAe,QAAAA,OAAO,CAACO,IAAD,CAAP;AACD,OAnBD,EAmBGY,KAnBH,CAmBS,UAAAC,KAAK,EAAI;AAChBnB,QAAAA,MAAM,CAACmB,KAAD,CAAN;AACD,OArBD;AAsBD,KAvBM,CAAP;AAwBD,GA3Fa;AA6Fd;AACAI,EAAAA,MA9Fc,yBA8FsB;AAAA,QAA3B5B,MAA2B,SAA3BA,MAA2B;AAAA,QAAnBf,KAAmB,SAAnBA,KAAmB;AAAA,QAAZ4C,QAAY,SAAZA,QAAY;AAClC,WAAO,IAAI1B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,wBAAOpB,KAAK,CAACC,KAAb,EAAoBqB,IAApB,CAAyB,YAAM;AAC7BP,QAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACAA,QAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACA;AACA,mCAJ6B,CAM7B;AACA;;AACA6B,QAAAA,QAAQ,CAAC,sBAAD,EAAyB,IAAzB,EAA+B;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAA/B,CAAR;AAEA1B,QAAAA,OAAO;AACR,OAXD,EAWGmB,KAXH,CAWS,UAAAC,KAAK,EAAI;AAChBnB,QAAAA,MAAM,CAACmB,KAAD,CAAN;AACD,OAbD;AAcD,KAfM,CAAP;AAgBD,GA/Ga;AAiHd;AACAO,EAAAA,UAlHc,6BAkHS;AAAA,QAAV/B,MAAU,SAAVA,MAAU;AACrB,WAAO,IAAIG,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BJ,MAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACAA,MAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACA;AACAI,MAAAA,OAAO;AACR,KALM,CAAP;AAMD,GAzHa;AA2Hd;AACA4B,EAAAA,WA5Hc,8BA4HoBpB,IA5HpB,EA4H0B;AAAA,QAA1BZ,MAA0B,SAA1BA,MAA0B;AAAA,QAAlB6B,QAAkB,SAAlBA,QAAkB;AACtC,WAAO,IAAI1B,OAAJ;AAAA,wFAAY,iBAAMC,OAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACXlB,gBAAAA,KADW,GACH0B,IAAI,GAAG,QADJ;AAGjBZ,gBAAAA,MAAM,CAAC,WAAD,EAAcd,KAAd,CAAN;AACA,oCAASA,KAAT;AAJiB;AAAA,uBAMO2C,QAAQ,CAAC,SAAD,CANf;;AAAA;AAAA;AAMTvC,gBAAAA,KANS,mBAMTA,KANS;AAQjB,2CARiB,CAUjB;;AAViB;AAAA,uBAWUuC,QAAQ,CAAC,2BAAD,EAA8BvC,KAA9B,EAAqC;AAAEwC,kBAAAA,IAAI,EAAE;AAAR,iBAArC,CAXlB;;AAAA;AAWXG,gBAAAA,YAXW;;AAajB;AACAC,gCAAOC,SAAP,CAAiBF,YAAjB,EAdiB,CAgBjB;;;AACAJ,gBAAAA,QAAQ,CAAC,sBAAD,EAAyB,IAAzB,EAA+B;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAA/B,CAAR;AAEA1B,gBAAAA,OAAO;;AAnBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAZ;;AAAA;AAAA;AAAA;AAAA,QAAP;AAqBD;AAlJa,CAAhB;eAqJe;AACbgC,EAAAA,UAAU,EAAE,IADC;AAEbnD,EAAAA,KAAK,EAALA,KAFa;AAGbM,EAAAA,SAAS,EAATA,SAHa;AAIbM,EAAAA,OAAO,EAAPA;AAJa,C","sourcesContent":["import { login, logout, getInfo } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\nimport router, { resetRouter } from '@/router'\nimport { test } from '@/api/api';\nimport axios from 'axios'\nimport Cookies from 'js-cookie'\nimport md5 from 'js-md5'\n\nconst state = {\n  token: getToken(),\n  name: '',\n  avatar: '',\n  introduction: '',\n  roles: []\n}\n\nconst mutations = {\n  SET_TOKEN: (state, token) => {\n    state.token = token\n  },\n  SET_INTRODUCTION: (state, introduction) => {\n    state.introduction = introduction\n  },\n  SET_NAME: (state, name) => {\n    state.name = name\n  },\n  SET_AVATAR: (state, avatar) => {\n    state.avatar = avatar\n  },\n  SET_ROLES: (state, roles) => {\n    state.roles = roles\n  }\n}\n\nconst actions = {\n  // user login\n  login({ commit }, userInfo) {\n    const { username, password } = userInfo\n    return new Promise((resolve, reject) => {\n      login({ username: username.trim(), password: md5(password) }).then(res => {\n        const { msg, code, data } = res\n        if (code === '999999') {\n            const token = data.role + '-token'\n            sessionStorage.setItem('username', data.username);\n            sessionStorage.setItem('token', data.ticket);\n            sessionStorage.setItem('name', data.name);\n            sessionStorage.setItem('role', data.role);\n            var expire = new Date(new Date().getTime() + data.expire * 1000);\n            Cookies.set(\"ticket\",data.ticket,{expires: expire});\n            Cookies.set(\"username\",data.username,{expires: expire});\n            Cookies.set(\"userid\",data.userid,{expires: expire});\n            Cookies.set(\"name\",data.name,{expires: expire});\n            Cookies.set(\"role\",data.role,{expires: expire});\n            commit('SET_TOKEN', token);\n            setToken(token);\n            resolve();\n        }else {\n            //reject();\n            //this.loading = false;\n            //_this.$message.error({\n            //    message: msg,\n            //    center: true\n            //})\n        }\n      }).catch(error => {\n        reject(error)\n      })\n\n      //var loginParams = { username: username.trim(), password: md5(password) }\n      //axios.post(`${test}/api/user/login`, loginParams).then(res => {\n      //    console.log(3);\n      //    let { msg, code, data } = res.data;\n      //    if (code === '999999') {\n      //        sessionStorage.setItem('username', JSON.stringify(data.username));\n      //        sessionStorage.setItem('token', JSON.stringify(data.ticket));\n      //        sessionStorage.setItem('name', JSON.stringify(data.name));\n      //        sessionStorage.setItem('role', JSON.stringify(data.role));\n      //        var expire = new Date(new Date().getTime() + data.expire * 1000);\n      //        Cookies.set(\"ticket\",data.ticket,{expires: expire});\n      //        Cookies.set(\"username\",data.username,{expires: expire});\n      //        Cookies.set(\"userid\",data.userid,{expires: expire});\n      //        Cookies.set(\"name\",data.name,{expires: expire});\n      //        Cookies.set(\"role\",data.role,{expires: expire});\n      //        commit('SET_TOKEN', JSON.stringify(data.ticket));\n      //        setToken(JSON.stringify(data.ticket));\n      //        console.log(4);\n      //        //resolve();\n      //    }else {\n      //        //reject();\n      //        //this.loading = false;\n      //        //_this.$message.error({\n      //        //    message: msg,\n      //        //    center: true\n      //        //})\n      //    }\n      //});\n    })\n  },\n\n  // get user info\n  getInfo({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      getInfo(state.token).then(response => {\n        const { data } = response\n\n        if (!data) {\n          reject('Verification failed, please Login again.')\n        }\n\n        const { roles, name, avatar, introduction } = data\n\n        // roles must be a non-empty array\n        if (!roles || roles.length <= 0) {\n          reject('getInfo: roles must be a non-null array!')\n        }\n\n        commit('SET_ROLES', roles)\n        commit('SET_NAME', name)\n        commit('SET_AVATAR', avatar)\n        commit('SET_INTRODUCTION', introduction)\n        resolve(data)\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // user logout\n  logout({ commit, state, dispatch }) {\n    return new Promise((resolve, reject) => {\n      logout(state.token).then(() => {\n        commit('SET_TOKEN', '')\n        commit('SET_ROLES', [])\n        removeToken()\n        resetRouter()\n\n        // reset visited views and cached views\n        // to fixed https://github.com/PanJiaChen/vue-element-admin/issues/2485\n        dispatch('tagsView/delAllViews', null, { root: true })\n\n        resolve()\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // remove token\n  resetToken({ commit }) {\n    return new Promise(resolve => {\n      commit('SET_TOKEN', '')\n      commit('SET_ROLES', [])\n      removeToken()\n      resolve()\n    })\n  },\n\n  // dynamically modify permissions\n  changeRoles({ commit, dispatch }, role) {\n    return new Promise(async resolve => {\n      const token = role + '-token'\n\n      commit('SET_TOKEN', token)\n      setToken(token)\n\n      const { roles } = await dispatch('getInfo')\n\n      resetRouter()\n\n      // generate accessible routes map based on roles\n      const accessRoutes = await dispatch('permission/generateRoutes', roles, { root: true })\n\n      // dynamically add accessible routes\n      router.addRoutes(accessRoutes)\n\n      // reset visited views and cached views\n      dispatch('tagsView/delAllViews', null, { root: true })\n\n      resolve()\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n"]}]}