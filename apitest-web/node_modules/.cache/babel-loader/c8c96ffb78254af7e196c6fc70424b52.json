{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/user/userList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/user/userList.vue","mtime":1588749633820},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/huangrong/workspace/apitest/apitest-web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import NProgress from 'nprogress'\nimport { test } from \"../../api/api\";\nimport axios from 'axios';\nimport md5 from 'js-md5';\nexport default {\n  data: function data() {\n    return _defineProperty({\n      filters: {\n        name: ''\n      },\n      total: 0,\n      page: 1,\n      pages: 0,\n      users: [],\n      userlist: [],\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      editForm: {\n        id: \"\",\n        visible: false,\n        loading: false,\n        title: \"新增\",\n        username: \"\",\n        name: \"\",\n        password: \"\",\n        checkPass: \"\",\n        email: \"\",\n        phone: \"\",\n        rules: {\n          username: [{\n            required: true,\n            message: '请输入用户名',\n            trigger: 'blur'\n          }, {\n            min: 4,\n            max: 10,\n            message: '长度在 4 到 10 个字符',\n            trigger: 'blur'\n          }],\n          name: [{\n            required: true,\n            message: '请输入姓名',\n            trigger: 'blur'\n          }, {\n            min: 2,\n            max: 4,\n            message: '长度在 2 到 4 个字符',\n            trigger: 'blur'\n          }],\n          password: [{\n            required: true,\n            message: '请输入密码',\n            trigger: 'blur'\n          }, {\n            min: 6,\n            max: 50,\n            message: '长度至少为6',\n            trigger: 'blur'\n          }],\n          checkPass: [{\n            required: true,\n            message: '请再次输入密码',\n            trigger: 'blur'\n          }, {\n            min: 6,\n            max: 50,\n            message: '长度至少为6',\n            trigger: 'blur'\n          }],\n          email: [{\n            required: true,\n            message: '请输入邮箱',\n            trigger: 'blur'\n          }]\n        }\n      }\n    }, \"users\", {\n      visible: false,\n      loading: false,\n      list: [],\n      total: 0,\n      page: 1,\n      pages: 0,\n      selUsers: []\n    });\n  },\n  methods: {\n    handleSearch: function handleSearch() {\n      this.page = 1;\n      this.getGlobalUser();\n    },\n    getGlobalUser: function getGlobalUser() {\n      this.listLoading = true;\n      var self = this;\n      var params = {\n        page: self.page,\n        name: self.filters.name\n      };\n      var headers = {\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get(test + \"/api/global/user_list\", {\n        params: params\n      }).then(function (response) {\n        self.listLoading = false;\n\n        if (response.data.code === '999999') {\n          self.total = response.data.data.total;\n          self.pages = response.data.data.pages;\n          self.userlist = [];\n          response.data.data.data.forEach(function (item) {\n            self.userlist.push(item);\n          });\n        } else {\n          self.$message.error({\n            message: response.data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    getUsers: function getUsers() {\n      var self = this;\n      self.users.loading = true;\n      var params = {\n        page: self.users.page\n      };\n      axios.get(test + \"/api/global/get_users\", {\n        params: params\n      }).then(function (response) {\n        self.users.loading = false;\n\n        if (response.data.code === '999999') {\n          self.users.list = response.data.data.data;\n          self.users.total = response.data.data.total;\n          self.users.pages = response.data.data.pages;\n        } else {\n          self.$message.error({\n            message: response.data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    //删除\n    handleDel: function handleDel(index, row) {\n      var _this = this;\n\n      this.$confirm('确认删除用户[' + row.name + ']吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this.listLoading = true; //NProgress.start();\n\n        var self = _this;\n        var params = {\n          ids: [row.id]\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(test + \"/api/global/del_user\", params, {\n          headers: headers\n        }).then(function (response) {\n          var data = response.data;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            });\n          }\n\n          self.getGlobalUser();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getGlobalUser();\n    },\n    handleCurrentChangeUser: function handleCurrentChangeUser(val) {\n      this.users.page = val;\n      this.getUsers();\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit(index, row) {\n      this.editForm.visible = true;\n      this.editForm.title = \"编辑\";\n\n      try {\n        this.editForm.id = row.id;\n        this.editForm.username = row.username;\n        this.editForm.name = row.name;\n        this.editForm.password = row.password;\n        this.editForm.checkPass = row.password;\n        this.editForm.email = row.email;\n        this.editForm.phone = row.phone; //                    this.editForm = {\"id\":row.id,\"username\":row.username,\"name\":row.name,\"password\":row.password,\"checkPass\":row.password,\"email\":row.email,\"phone\":row.phone};\n      } catch (err) {\n        alert(err);\n      }\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.editForm.id = \"\";\n      this.editForm.username = \"\";\n      this.editForm.name = \"\";\n      this.editForm.password = \"\";\n      this.editForm.checkPass = \"\";\n      this.editForm.email = \"\";\n      this.editForm.phone = \"\";\n      this.editForm.visible = true;\n      this.editForm.title = \"新增\";\n    },\n    handleLink: function handleLink() {\n      this.users.visible = true;\n      this.users.page = 1;\n      this.getUsers();\n    },\n    linkUsersSubmit: function linkUsersSubmit() {\n      var ids = this.users.selUsers.map(function (item) {\n        return item.user_id;\n      });\n      var self = this;\n      this.$confirm('确认关联选中的用户吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.listLoading = true; //NProgress.start();\n\n        var params = JSON.stringify({\n          ids: ids\n        });\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(test + \"/api/global/link_users\", params, {\n          headers: headers\n        }).then(function (response) {\n          self.listLoading = false;\n\n          if (response.data.code === '999999') {\n            self.$message({\n              message: '关联成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: response.data.msg,\n              center: true\n            });\n          }\n\n          self.users.visible = false;\n          self.getGlobalUser();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    },\n    //编辑\n    editFormSubmit: function editFormSubmit() {\n      var _this2 = this;\n\n      if (this.editForm.password != this.editForm.checkPass) {\n        this.$message.error({\n          message: \"两次输入的密码不一致,请重新输入!\",\n          center: true\n        });\n        return;\n      }\n\n      var self = this;\n      this.$refs.editForm.validate(function (valid) {\n        if (valid) {\n          _this2.$confirm('确认提交吗？', '提示', {}).then(function () {\n            self.editForm.loading = true; //NProgress.start();\n\n            var params = {\n              id: Number(self.editForm.id),\n              username: self.editForm.username,\n              name: self.editForm.name,\n              password: md5(self.editForm.password),\n              email: self.editForm.email,\n              phone: self.editForm.phone\n            };\n            var headers = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + sessionStorage.getItem('token')\n            };\n            var url = test + \"/api/global/add_user\";\n\n            if (self.editForm.id != \"\") {\n              url = test + \"/api/global/update_user\";\n            }\n\n            axios.post(url, params, {\n              headers: headers\n            }).then(function (response) {\n              self.editForm.loading = false;\n\n              if (response.data.code === '999999') {\n                self.$message({\n                  message: '成功',\n                  center: true,\n                  type: 'success'\n                });\n                self.editForm.visible = false;\n                self.getGlobalUser();\n              } else {\n                self.$message.error({\n                  message: response.data.msg,\n                  center: true\n                });\n              }\n            }).catch(function (error) {});\n          }).catch(function () {});\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    selUsersChange: function selUsersChange(sels) {\n      this.users.selUsers = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      var ids = this.sels.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认删除选中的用户吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.listLoading = true; //NProgress.start();\n\n        var params = {\n          ids: ids\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(test + \"/api/global/del_user\", params, {\n          headers: headers\n        }).then(function (response) {\n          var data = response.data;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            });\n          }\n\n          self.getGlobalUser();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    }\n  },\n  mounted: function mounted() {\n    this.getGlobalUser();\n  }\n};",{"version":3,"sources":["userList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <!--工具条-->\n        <div class=\"filter-container\">\n            <el-input v-model.trim=\"filters.name\" style=\"width: 200px;\" placeholder=\"名称\" @keyup.enter.native=\"handleSearch\"></el-input>\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">查询</el-button>\n            <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"handleAdd\">新增</el-button>\n            <el-button type=\"primary\" @click=\"handleLink\">关联</el-button>\n        </div>\n        <!--列表-->\n        <el-table :data=\"userlist\" stripe border highlight-current-row v-loading=\"listLoading\" @selection-change=\"selsChange\" style=\"width: 100%;\">\n            <el-table-column type=\"selection\" min-width=\"5%\">\n            </el-table-column>\n            <el-table-column prop=\"username\" label=\"用户名\" min-width=\"15%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"姓名\" min-width=\"10%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column v-if=false prop=\"password\" label=\"密码\" min-width=\"\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"email\" label=\"邮箱\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"phone\" label=\"手机号\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"type\" label=\"类型\" min-width=\"10%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column label=\"操作\" min-width=\"20%\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"primary\" v-show=\"scope.row.type==='local'\" size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\" plain>编辑</el-button>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\" plain>删除</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\">\n            <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n            <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChange\" :current-page.sync=\"page\" :total=\"total\" :page-size=\"20\" :page-count=\"pages\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n\n        <!--编辑界面-->\n        <el-dialog width=\"40%\" :title=\"editForm.title\" :visible.sync=\"editForm.visible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"editForm\"  :rules=\"editForm.rules\" ref=\"editForm\" label-width=\"80px\">\n                <el-form-item label=\"用户名\" prop=\"username\">\n                    <el-input v-model.trim=\"editForm.username\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"姓名\" prop='name'>\n                    <el-input v-model.trim=\"editForm.name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"password\">\n                    <el-input type=\"password\" v-model.trim=\"editForm.password\" auto-complete=\"off\" placeholder=\"密码\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"验证密码\" prop=\"checkPass\">\n                    <el-input type=\"password\" v-model.trim=\"editForm.checkPass\" auto-complete=\"off\" placeholder=\"密码\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\" prop='email'>\n                    <el-input v-model.trim=\"editForm.email\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"手机号\" prop='phone'>\n                    <el-input v-model.trim=\"editForm.phone\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"editForm.visible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"editFormSubmit\" :loading=\"editForm.loading\">提交</el-button>\n            </div>\n        </el-dialog>\n\n        <el-dialog width=\"50%\" title=\"关联用户\" :visible.sync=\"users.visible\" :close-on-click-modal=\"false\" >\n            <el-row :gutter=\"10\">\n                <el-col :span=\"24\">\n                    <el-table :data=\"users.list\" highlight-current-row v-loading=\"users.loading\"\n                              style=\"width: 100%;\" :show-header=\"true\" max-height=\"400\" @selection-change=\"selUsersChange\">\n                        <el-table-column type=\"selection\" min-width=\"5%\">\n                        </el-table-column>\n                        <el-table-column prop=\"user_id\" label=\"ID\" min-width=\"10%\">\n                        </el-table-column>\n                        <el-table-column prop=\"user_name\" label=\"用户名\" min-width=\"20%\">\n                        </el-table-column>\n                        <el-table-column prop=\"name\" label=\"姓名\" min-width=\"20%\">\n                        </el-table-column>\n                        <el-table-column prop=\"phone\" label=\"手机\" min-width=\"20%\">\n                        </el-table-column>\n                        <el-table-column prop=\"email\" label=\"邮箱\" min-width=\"25%\">\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n            <el-col :span=\"24\" class=\"toolbar\">\n                <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChangeUser\" :current-page.sync=\"users.page\" :total=\"users.total\" :page-size=\"20\" :page-count=\"users.pages\" style=\"float:right;\">\n                </el-pagination>\n            </el-col>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"users.visible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"linkUsersSubmit\" :loading=\"users.loading\">提交</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    //import NProgress from 'nprogress'\n    import { test} from '../../api/api';\n    import axios from 'axios'\n    import md5 from 'js-md5'\n    export default {\n        data() {\n            return {\n                filters: {\n                    name: ''\n                },\n                total: 0,\n                page: 1,\n                pages: 0,\n                users: [],\n                userlist: [],\n                listLoading: false,\n                sels: [],//列表选中列\n\n                editForm:{\n                    id: \"\",\n                    visible: false,\n                    loading: false,\n                    title: \"新增\",\n                    username: \"\",\n                    name: \"\",\n                    password: \"\",\n                    checkPass: \"\",\n                    email: \"\",\n                    phone: \"\",\n                    rules: {\n                        username: [\n                            { required: true, message: '请输入用户名', trigger: 'blur' },\n                            { min: 4, max: 10, message: '长度在 4 到 10 个字符', trigger: 'blur' }\n                        ],\n                        name: [\n                            { required: true, message: '请输入姓名', trigger: 'blur' },\n                            { min: 2, max: 4, message: '长度在 2 到 4 个字符', trigger: 'blur' }\n                        ],\n                        password : [\n                            { required: true, message: '请输入密码', trigger: 'blur'},\n                            { min: 6, max: 50, message: '长度至少为6', trigger: 'blur' }\n                        ],\n                        checkPass : [\n                            { required: true, message: '请再次输入密码', trigger: 'blur'},\n                            { min: 6, max: 50, message: '长度至少为6', trigger: 'blur' }\n                        ],\n                        email: [\n                            { required: true, message: '请输入邮箱', trigger: 'blur' },\n                        ]\n                    },\n                },\n\n                users: {\n                    visible: false,\n                    loading: false,\n                    list: [],\n                    total: 0,\n                    page: 1,\n                    pages: 0,\n                    selUsers: []\n                },\n\n            }\n        },\n        methods: {\n            handleSearch(){\n                this.page=1;\n                this.getGlobalUser();\n            },\n            getGlobalUser() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    page: self.page,\n                    name: self.filters.name,\n                };\n                let headers = {\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(test+\"/api/global/user_list\", { params: params}).then(response => {\n                    self.listLoading = false;\n                    if (response.data.code === '999999') {\n                        self.total = response.data.data.total;\n                        self.pages=response.data.data.pages;\n                        self.userlist=[];\n                        response.data.data.data.forEach((item) =>{\n                            self.userlist.push(item)\n                        });\n                    }\n                    else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            getUsers() {\n                let self=this;\n                self.users.loading = true;\n                let params={\n                    page: self.users.page\n                };\n                axios.get(test+\"/api/global/get_users\", {params:params}).then(response => {\n                    self.users.loading = false;\n                    if (response.data.code === '999999') {\n                        self.users.list = response.data.data.data;\n                        self.users.total = response.data.data.total;\n                        self.users.pages = response.data.data.pages;\n                    }\n                    else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除用户[' + row.name + ']吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let params = {\n                        ids: [row.id, ]\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/global/del_user\", params,{headers:headers}).then(response => {\n                        let data = response.data;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalUser()\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {\n                });\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getGlobalUser();\n            },\n            handleCurrentChangeUser(val) {\n                this.users.page = val;\n                this.getUsers();\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.editForm.visible = true;\n                this.editForm.title = \"编辑\";\n                try{\n                    this.editForm.id=row.id;\n                    this.editForm.username=row.username;\n                    this.editForm.name=row.name;\n                    this.editForm.password=row.password;\n                    this.editForm.checkPass=row.password;\n                    this.editForm.email=row.email;\n                    this.editForm.phone=row.phone;\n//                    this.editForm = {\"id\":row.id,\"username\":row.username,\"name\":row.name,\"password\":row.password,\"checkPass\":row.password,\"email\":row.email,\"phone\":row.phone};\n                }catch(err){\n                    alert(err);\n                }\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.editForm.id=\"\";\n                this.editForm.username=\"\";\n                this.editForm.name=\"\";\n                this.editForm.password=\"\";\n                this.editForm.checkPass=\"\";\n                this.editForm.email=\"\";\n                this.editForm.phone=\"\";\n                this.editForm.visible = true;\n                this.editForm.title = \"新增\";\n            },\n            handleLink: function () {\n                this.users.visible = true;\n                this.users.page=1;\n                this.getUsers();\n            },\n            linkUsersSubmit: function () {\n                let ids = this.users.selUsers.map(item => item.user_id);\n                let self = this;\n                this.$confirm('确认关联选中的用户吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    let params=JSON.stringify({\n                        ids: ids\n                    });\n                    let headers={\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/global/link_users\", params,{headers:headers}).then(response => {\n                        self.listLoading = false;\n                        if (response.data.code === '999999') {\n                            self.$message({\n                                message: '关联成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        }else {\n                            self.$message.error({\n                                message: response.data.msg,\n                                center: true,\n                            })\n                        }\n                        self.users.visible = false;\n                        self.getGlobalUser()\n                    }).catch(error=>{\n                    });\n                }).catch(() => {\n\n                });\n            },\n            //编辑\n            editFormSubmit: function () {\n                if(this.editForm.password!=this.editForm.checkPass){\n                    this.$message.error({\n                        message: \"两次输入的密码不一致,请重新输入!\",\n                        center: true,\n                    })\n                    return;\n                }\n                let self = this;\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.editForm.loading = true;\n                            //NProgress.start();\n                            let params = {\n                                id: Number(self.editForm.id),\n                                username: self.editForm.username,\n                                name: self.editForm.name,\n                                password: md5(self.editForm.password),\n                                email: self.editForm.email,\n                                phone: self.editForm.phone\n                            };\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+sessionStorage.getItem('token')\n                            };\n                            let url=test+\"/api/global/add_user\";\n                            if(self.editForm.id!=\"\"){\n                                url=test+\"/api/global/update_user\";\n                            }\n                            axios.post(url, params,{headers:headers}).then(response => {\n                                self.editForm.loading = false;\n                                if (response.data.code === '999999') {\n                                    self.$message({\n                                        message: '成功',\n                                        center: true,\n                                        type: 'success'\n                                    })\n                                    self.editForm.visible = false;\n                                    self.getGlobalUser();\n                                }else {\n                                    self.$message.error({\n                                        message: response.data.msg,\n                                        center: true,\n                                    })\n                                }\n                            }).catch(error=>{\n                            });\n                        }).catch(() => {});\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            selUsersChange(sels){\n                this.users.selUsers = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认删除选中的用户吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    let params = {\n                        ids: ids\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/global/del_user\", params,{headers:headers}).then(response => {\n                        let data = response.data;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalUser()\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {});\n            }\n        },\n        mounted() {\n            this.getGlobalUser();\n        }\n    }\n\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/views/user"}]}