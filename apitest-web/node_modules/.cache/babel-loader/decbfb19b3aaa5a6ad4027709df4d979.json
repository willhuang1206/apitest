{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/src/vendor/Export2Zip.js","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/vendor/Export2Zip.js","mtime":1587528109435},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\n\n/* eslint-disable */\nimport { saveAs } from 'file-saver';\nimport JSZip from 'jszip';\nexport function export_txt_to_zip(th, jsonData, txtName, zipName) {\n  var zip = new JSZip();\n  var txt_name = txtName || 'file';\n  var zip_name = zipName || 'file';\n  var data = jsonData;\n  var txtData = \"\".concat(th, \"\\r\\n\");\n  data.forEach(function (row) {\n    var tempStr = '';\n    tempStr = row.toString();\n    txtData += \"\".concat(tempStr, \"\\r\\n\");\n  });\n  zip.file(\"\".concat(txt_name, \".txt\"), txtData);\n  zip.generateAsync({\n    type: \"blob\"\n  }).then(function (blob) {\n    saveAs(blob, \"\".concat(zip_name, \".zip\"));\n  }, function (err) {\n    alert('导出失败');\n  });\n}",{"version":3,"sources":["/Users/huangrong/workspace/apitest/apitest-web/src/vendor/Export2Zip.js"],"names":["saveAs","JSZip","export_txt_to_zip","th","jsonData","txtName","zipName","zip","txt_name","zip_name","data","txtData","forEach","row","tempStr","toString","file","generateAsync","type","then","blob","err","alert"],"mappings":";;;AAAA;AACA,SAASA,MAAT,QAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,QAA/B,EAAyCC,OAAzC,EAAkDC,OAAlD,EAA2D;AAChE,MAAMC,GAAG,GAAG,IAAIN,KAAJ,EAAZ;AACA,MAAMO,QAAQ,GAAGH,OAAO,IAAI,MAA5B;AACA,MAAMI,QAAQ,GAAGH,OAAO,IAAI,MAA5B;AACA,MAAMI,IAAI,GAAGN,QAAb;AACA,MAAIO,OAAO,aAAMR,EAAN,SAAX;AACAO,EAAAA,IAAI,CAACE,OAAL,CAAa,UAACC,GAAD,EAAS;AACpB,QAAIC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,GAAGD,GAAG,CAACE,QAAJ,EAAV;AACAJ,IAAAA,OAAO,cAAOG,OAAP,SAAP;AACD,GAJD;AAKAP,EAAAA,GAAG,CAACS,IAAJ,WAAYR,QAAZ,WAA4BG,OAA5B;AACAJ,EAAAA,GAAG,CAACU,aAAJ,CAAkB;AAChBC,IAAAA,IAAI,EAAE;AADU,GAAlB,EAEGC,IAFH,CAEQ,UAACC,IAAD,EAAU;AAChBpB,IAAAA,MAAM,CAACoB,IAAD,YAAUX,QAAV,UAAN;AACD,GAJD,EAIG,UAACY,GAAD,EAAS;AACVC,IAAAA,KAAK,CAAC,MAAD,CAAL;AACD,GAND;AAOD","sourcesContent":["/* eslint-disable */\nimport { saveAs } from 'file-saver'\nimport JSZip from 'jszip'\n\nexport function export_txt_to_zip(th, jsonData, txtName, zipName) {\n  const zip = new JSZip()\n  const txt_name = txtName || 'file'\n  const zip_name = zipName || 'file'\n  const data = jsonData\n  let txtData = `${th}\\r\\n`\n  data.forEach((row) => {\n    let tempStr = ''\n    tempStr = row.toString()\n    txtData += `${tempStr}\\r\\n`\n  })\n  zip.file(`${txt_name}.txt`, txtData)\n  zip.generateAsync({\n    type: \"blob\"\n  }).then((blob) => {\n    saveAs(blob, `${zip_name}.zip`)\n  }, (err) => {\n    alert('导出失败')\n  })\n}\n"]}]}