{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectList.vue","mtime":1588749633783},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import NProgress from 'nprogress'\nimport { test } from \"../../api/api\";\nimport axios from \"axios\";\nexport default {\n  // components: {ElRow},\n  data: function data() {\n    return {\n      filters: {\n        name: '',\n        businessline: ''\n      },\n      project: [],\n      total: 0,\n      page: 1,\n      pages: 0,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      form: {\n        data: {\n          id: '',\n          name: '',\n          version: '',\n          type: '',\n          description: '',\n          businessline: ''\n        },\n        visible: false,\n        loading: false,\n        rules: {\n          name: [{\n            required: true,\n            message: '请输入名称',\n            trigger: 'blur'\n          }, {\n            min: 1,\n            max: 50,\n            message: '长度在 1 到 50 个字符',\n            trigger: 'blur'\n          }],\n          type: [{\n            required: true,\n            message: '请选择类型',\n            trigger: 'blur'\n          }],\n          version: [{\n            required: true,\n            message: '请输入版本号',\n            trigger: 'blur'\n          }, {\n            min: 1,\n            max: 20,\n            message: '长度在 1 到 20 个字符',\n            trigger: 'blur'\n          }],\n          description: [{\n            required: false,\n            message: '请输入描述',\n            trigger: 'blur'\n          }, {\n            max: 1024,\n            message: '不能超过1024个字符',\n            trigger: 'blur'\n          }]\n        }\n      },\n      options: [{\n        label: \"Web\",\n        value: \"Web\"\n      }, {\n        label: \"App\",\n        value: \"App\"\n      }],\n      businesslinelist: [{\n        name: \"集团科技\"\n      }, {\n        name: \"加油宝科技\"\n      }, {\n        name: \"物流科技\"\n      }, {\n        name: \"金融科技\"\n      }, {\n        name: \"其他\"\n      }]\n    };\n  },\n  methods: {\n    // 获取项目列表\n    getProjectList: function getProjectList() {\n      this.listLoading = true;\n      var self = this;\n      sessionStorage.setItem(\"businessline\", self.filters.businessline);\n      var params = {\n        page: self.page,\n        name: self.filters.name,\n        businessline: self.filters.businessline\n      };\n      var headers = {\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get(\"\".concat(test, \"/api/project/project_list\"), {\n        params: params,\n        headers: headers\n      }).then(function (res) {\n        self.listLoading = false;\n        var _res$data = res.data,\n            msg = _res$data.msg,\n            code = _res$data.code,\n            data = _res$data.data;\n\n        if (code === '999999') {\n          self.total = data.total;\n          self.project = data.data;\n          self.pages = data.pages;\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    },\n    handleSearch: function handleSearch() {\n      this.page = 1;\n      this.getProjectList();\n    },\n    //删除\n    handleDel: function handleDel(index, row) {\n      var _this = this;\n\n      this.$confirm('确认删除项目[' + row.name + ']吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this.listLoading = true; //NProgress.start();\n\n        var self = _this;\n        var params = {\n          ids: [row.id]\n        };\n        var header = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(\"\".concat(test, \"/api/project/del_project\"), params, {\n          header: header\n        }).then(function (res) {\n          var _res$data2 = res.data,\n              msg = _res$data2.msg,\n              code = _res$data2.code,\n              data = _res$data2.data;\n\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.getProjectList();\n        });\n      }).catch(function () {});\n    },\n    // 改变项目状态\n    handleChangeStatus: function handleChangeStatus(index, row) {\n      var self = this;\n      this.listLoading = true;\n      var params = {\n        project_id: row.id\n      };\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n\n      if (row.status) {\n        axios.post(\"\".concat(test, \"/api/project/disable_project\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data3 = res.data,\n              msg = _res$data3.msg,\n              code = _res$data3.code,\n              data = _res$data3.data;\n          self.listLoading = false;\n\n          if (code === '999999') {\n            self.$message({\n              message: '禁用成功',\n              center: true,\n              type: 'success'\n            });\n            row.status = !row.status;\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n        });\n      } else {\n        axios.post(\"\".concat(test, \"/api/project/enable_project\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data4 = res.data,\n              msg = _res$data4.msg,\n              code = _res$data4.code,\n              data = _res$data4.data;\n          self.listLoading = false;\n\n          if (code === '999999') {\n            self.$message({\n              message: '启用成功',\n              center: true,\n              type: 'success'\n            });\n            row.status = !row.status;\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n        });\n      }\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getProjectList();\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit(index, row) {\n      this.form.title = \"编辑\";\n      this.form.visible = true;\n      this.form.data = Object.assign({}, row);\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.form.title = \"新增\";\n      this.form.visible = true;\n      this.form.data = {\n        id: '',\n        name: '',\n        version: '',\n        type: '',\n        description: '',\n        businessline: ''\n      };\n    },\n    //编辑\n    editSubmit: function editSubmit() {\n      var _this2 = this;\n\n      var self = this;\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          _this2.$confirm('确认提交吗？', '提示', {}).then(function () {\n            self.form.loading = true; //NProgress.start();\n\n            var params = {\n              name: self.form.data.name,\n              type: self.form.data.type,\n              version: self.form.data.version,\n              description: self.form.data.description,\n              businessline: self.form.data.businessline\n            };\n            var url = \"\".concat(test, \"/api/project/add_project\");\n\n            if (self.form.data.id != '') {\n              url = \"\".concat(test, \"/api/project/update_project\");\n              params[\"project_id\"] = self.form.data.id;\n            }\n\n            var header = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + sessionStorage.getItem('token')\n            };\n            axios.post(url, params, {\n              headers: header\n            }).then(function (response) {\n              var _response$data = response.data,\n                  msg = _response$data.msg,\n                  code = _response$data.code,\n                  data = _response$data.data;\n              self.form.loading = false;\n\n              if (code === '999999') {\n                self.$message({\n                  message: '执行成功',\n                  center: true,\n                  type: 'success'\n                });\n                self.$refs['form'].resetFields();\n                self.form.visible = false;\n                self.getProjectList();\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              }\n            }).catch(function (error) {});\n          }).catch(function () {});\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      var _this3 = this;\n\n      var ids = this.sels.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认删除选中记录吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this3.listLoading = true; //NProgress.start();\n\n        var self = _this3;\n        var params = {\n          ids: ids\n        };\n        var header = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(\"\".concat(test, \"/api/project/del_project\"), params, {\n          header: header\n        }).then(function (res) {\n          var _res$data5 = res.data,\n              msg = _res$data5.msg,\n              code = _res$data5.code,\n              data = _res$data5.data;\n\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.getProjectList();\n        });\n      }).catch(function () {});\n    }\n  },\n  mounted: function mounted() {\n    if (sessionStorage.getItem(\"businessline\") != null) {\n      this.filters.businessline = sessionStorage.getItem(\"businessline\");\n      this.form.data.businessline = sessionStorage.getItem(\"businessline\");\n    }\n\n    this.getProjectList();\n  }\n};",{"version":3,"sources":["projectList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n      <div class=\"filter-container\">\n        <el-input v-model=\"filters.name\" placeholder=\"名称\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleSearch\"></el-input>\n        <el-select v-model=\"filters.businessline\" placeholder=\"业务板块\" clearable style=\"width: 200px\" class=\"filter-item\">\n          <el-option v-for=\"(item,index) in businesslinelist\" :key=\"index+''\" :label=\"item.name\" :value=\"item.name\">\n          </el-option>\n        </el-select>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">查询</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"handleAdd\">新增</el-button>\n      </div>\n      <el-table :data=\"project\" stripe border highlight-current-row v-loading=\"listLoading\" @selection-change=\"selsChange\" style=\"width: 100%;\">\n          <el-table-column type=\"selection\" min-width=\"5%\">\n          </el-table-column>\n          <el-table-column prop=\"name\" label=\"项目名称\" min-width=\"20%\" show-overflow-tooltip>\n              <template slot-scope=\"scope\">\n                  <el-icon name=\"name\"></el-icon>\n                  <router-link v-if=\"scope.row.status\" :to=\"{ name: '项目面板', params: {project_id: scope.row.id}}\" style='text-decoration: none;color: #000000;'>\n                      {{ scope.row.name }}\n                  </router-link>\n                  {{ !scope.row.status?scope.row.name:\"\"}}\n              </template>\n          </el-table-column>\n          <el-table-column prop=\"businessline\" label=\"业务板块\" min-width=\"10%\">\n          </el-table-column>\n          <el-table-column prop=\"type\" label=\"类型\" min-width=\"10%\">\n          </el-table-column>\n          <el-table-column prop=\"LastUpdateTime\" label=\"最后修改时间\" min-width=\"15%\">\n          </el-table-column>\n          <el-table-column prop=\"status\" label=\"状态\" min-width=\"10%\">\n              <template slot-scope=\"scope\">\n                  <img v-show=\"scope.row.status\" src=\"@/assets/icon-yes.svg\"/>\n                  <img v-show=\"!scope.row.status\" src=\"@/assets/icon-no.svg\"/>\n              </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" min-width=\"20%\">\n              <template slot-scope=\"scope\">\n                <!--<el-button-group>-->\n                  <!--<el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>-->\n                  <!--<el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>-->\n                  <!--<el-button type=\"info\" size=\"small\" @click=\"handleChangeStatus(scope.$index, scope.row)\">{{scope.row.status===false?'启用':'禁用'}}</el-button>-->\n                <!--</el-button-group>-->\n                <el-dropdown>\n                  <el-button size=\"small\" type=\"primary\" @click=\"handleEdit(scope.$index, scope.row)\" plain>编辑<i class=\"el-icon-arrow-down el-icon--right\"></i></el-button>\n                  <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item><el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\" plain>删除</el-button></el-dropdown-item>\n                    <el-dropdown-item><el-button type=\"info\" size=\"small\" @click=\"handleChangeStatus(scope.$index, scope.row)\" plain>{{scope.row.status===false?'启用':'禁用'}}</el-button></el-dropdown-item>\n                  </el-dropdown-menu>\n                </el-dropdown>\n              </template>\n          </el-table-column>\n      </el-table>\n\n      <!--工具条-->\n      <el-col :span=\"24\" class=\"toolbar\">\n          <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n          <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChange\" :current-page.sync=\"page\" :total=\"total\" :page-size=\"20\" :page-count=\"pages\" style=\"float:right;\">\n          </el-pagination>\n      </el-col>\n\n      <!--编辑界面-->\n      <el-dialog width=\"60%\" :title=\"form.title\" :visible.sync=\"form.visible\" :close-on-click-modal=\"false\" style=\"width: 75%; left: 12.5%\">\n          <el-form :model=\"form.data\" label-width=\"80px\"  :rules=\"form.rules\" ref=\"form\">\n              <el-form-item label=\"项目名称\" prop=\"name\">\n                  <el-input v-model=\"form.data.name\" auto-complete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"业务板块\" prop=\"businessLine\">\n                  <el-select style=\"width:100%\" v-model=\"form.data.businessline\" placeholder=\"请选择\">\n                    <el-option v-for=\"(item,index) in businesslinelist\" :key=\"index+''\" :label=\"item.name\" :value=\"item.name\">\n                    </el-option>\n                  </el-select>\n              </el-form-item>\n              <el-row :gutter=\"24\">\n                  <el-col :span=\"12\">\n                      <el-form-item label=\"类型\" prop='type'>\n                          <el-select v-model=\"form.data.type\" placeholder=\"请选择\">\n                              <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                              </el-option>\n                          </el-select>\n                      </el-form-item>\n                  </el-col>\n                  <el-col :span=\"12\">\n                      <el-form-item label=\"版本号\" prop='version'>\n                          <el-input v-model=\"form.data.version\" auto-complete=\"off\"></el-input>\n                      </el-form-item>\n                  </el-col>\n              </el-row>\n              <el-form-item label=\"描述\" prop='description'>\n                  <el-input type=\"textarea\" :rows=\"6\" v-model=\"form.data.description\"></el-input>\n              </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click.native=\"form.visible = false\">取消</el-button>\n              <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"form.loading\">提交</el-button>\n          </div>\n      </el-dialog>\n  </div>\n</template>\n\n<script>\n  //import NProgress from 'nprogress'\n    import { test} from '../../api/api';\n    import axios from \"axios\";\n    export default {\n        // components: {ElRow},\n        data() {\n            return {\n                filters: {\n                    name: '',\n                    businessline: ''\n                },\n                project: [],\n                total: 0,\n                page: 1,\n                pages: 0,\n                listLoading: false,\n                sels: [],//列表选中列\n                form: {\n                    data: {\n                        id: '',\n                        name: '',\n                        version: '',\n                        type: '',\n                        description: '',\n                        businessline: ''\n                    },\n                    visible: false,\n                    loading: false,\n                    rules: {\n                        name: [\n                            { required: true, message: '请输入名称', trigger: 'blur' },\n                            { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                        ],\n                        type: [\n                            { required: true, message: '请选择类型', trigger: 'blur' }\n                        ],\n                        version: [\n                            { required: true, message: '请输入版本号', trigger: 'blur' },\n                            { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n                        ],\n                        description: [\n                            { required: false, message: '请输入描述', trigger: 'blur' },\n                            { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                        ]\n                    },\n                },\n                options: [{ label: \"Web\", value: \"Web\"}, { label: \"App\", value: \"App\"}],\n                businesslinelist: [{name: \"集团科技\"},{name: \"加油宝科技\"},{name: \"物流科技\"},{name: \"金融科技\"},{name: \"其他\"}]\n            }\n        },\n        methods: {\n            // 获取项目列表\n            getProjectList() {\n                this.listLoading = true;\n                let self = this;\n                sessionStorage.setItem(\"businessline\",self.filters.businessline);\n                let params = { page: self.page, name: self.filters.name, businessline: self.filters.businessline};\n                let headers = {Authorization: 'Token '+sessionStorage.getItem('token')};\n                axios.get(`${test}/api/project/project_list`, { params: params, headers:headers}).then((res) => {\n                    self.listLoading = false;\n                    let { msg, code, data } = res.data;\n                    if (code === '999999') {\n                        self.total = data.total;\n                        self.project = data.data;\n                        self.pages=data.pages;\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            handleSearch(){\n                this.page=1;\n                this.getProjectList();\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除项目[' + row.name + ']吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let params = {ids: [row.id, ]};\n                    let header = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(`${test}/api/project/del_project`, params, {header}).then(res => {\n                        let { msg, code, data } = res.data;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getProjectList()\n                    });\n                }).catch(() => {\n                });\n            },\n            // 改变项目状态\n            handleChangeStatus: function(index, row) {\n                let self = this;\n                this.listLoading = true;\n                let params = { project_id: row.id};\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                if (row.status) {\n                    axios.post(`${test}/api/project/disable_project`, params, {headers}).then(res => {\n                        let { msg, code, data } = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '禁用成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            row.status = !row.status;\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                    });\n                } else {\n                    axios.post(`${test}/api/project/enable_project`, params, {headers}).then(res => {\n                        let { msg, code, data } = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '启用成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            row.status = !row.status;\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                    });\n                }\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getProjectList()\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.form.title=\"编辑\";\n                this.form.visible = true;\n                this.form.data = Object.assign({}, row);\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.form.title=\"新增\";\n                this.form.visible = true;\n                this.form.data={\n                        id: '',\n                        name: '',\n                        version: '',\n                        type: '',\n                        description: '',\n                        businessline: ''\n                    };\n            },\n            //编辑\n            editSubmit: function () {\n                let self = this;\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.form.loading = true;\n                            //NProgress.start();\n                            let params = {\n                                name: self.form.data.name,\n                                type: self.form.data.type,\n                                version: self.form.data.version,\n                                description: self.form.data.description,\n                                businessline: self.form.data.businessline\n                            };\n                            let url=`${test}/api/project/add_project`;\n                            if(self.form.data.id!=''){\n                                url=`${test}/api/project/update_project`;\n                                params[\"project_id\"]=self.form.data.id;\n                            }\n                            let header = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+sessionStorage.getItem('token')\n                            };\n                            axios.post(url, params,{headers:header}).then(response => {\n                                let {msg, code, data} = response.data;\n                                self.form.loading = false;\n                                if (code === '999999') {\n                                    self.$message({\n                                        message: '执行成功',\n                                        center: true,\n                                        type: 'success'\n                                    });\n                                    self.$refs['form'].resetFields();\n                                    self.form.visible = false;\n                                    self.getProjectList()\n                                } else if (code === '999997'){\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                } else {\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                }\n                            }).catch(error=>{\n\n                            });\n                        }).catch(() => {});\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认删除选中记录吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let params = {ids: ids};\n                    let header = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + sessionStorage.getItem('token')\n                    };\n                    axios.post(`${test}/api/project/del_project`, params, {header}).then(res => {\n                        let {msg, code, data} = res.data;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getProjectList()\n                    });\n                }).catch(() => {});\n            }\n        },\n        mounted() {\n            if(sessionStorage.getItem(\"businessline\")!=null){\n                this.filters.businessline=sessionStorage.getItem(\"businessline\");\n                this.form.data.businessline=sessionStorage.getItem(\"businessline\");\n            }\n            this.getProjectList();\n        }\n    }\n</script>\n"],"sourceRoot":"src/views/project"}]}