{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/src/router/index.js","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/router/index.js","mtime":1590562297466},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nVue.use(Router);\n/* Layout */\n\nimport Layout from '@/layout';\nimport projectLayout from '@/layout/project.vue';\n\nvar AutomationReport = function AutomationReport() {\n  return import('@/views/project/auto/autoReport.vue');\n};\n\nvar ProjectInfo = function ProjectInfo() {\n  return import('@/views/project/project.vue');\n};\n\nvar API = function API() {\n  return import('@/views/project/api/api.vue');\n};\n\nvar Automation = function Automation() {\n  return import('@/views/project/auto/auto.vue');\n};\n/* Router Modules */\n\n\nimport componentsRouter from \"./modules/components\";\nimport tableRouter from \"./modules/table\";\n/**\n * Note: sub-menu only appear when route children.length >= 1\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\n *\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\n * alwaysShow: true               if set true, will always show the root menu\n *                                if not set alwaysShow, when item has more than one children route,\n *                                it will becomes nested mode, otherwise not show the root menu\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\n * name:'router-name'             the name is used by <keep-alive> (must set!!!)\n * meta : {\n    roles: ['admin','editor']    control the page roles (you can set multiple roles)\n    title: 'title'               the name show in sidebar and breadcrumb (recommend set)\n    icon: 'svg-name'             the icon show in the sidebar\n    noCache: true                if set true, the page will no be cached(default is false)\n    affix: true                  if set true, the tag will affix in the tags-view\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\n    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set\n  }\n */\n\n/**\n * constantRoutes\n * a base page that does not have permission requirements\n * all roles can be accessed\n */\n\nexport var constantRoutes = [{\n  path: '/redirect',\n  component: Layout,\n  hidden: true,\n  projectHidden: true,\n  children: [{\n    path: '/redirect/:path(.*)',\n    component: function component() {\n      return import('@/views/other/redirect/index');\n    }\n  }]\n}, {\n  name: '',\n  path: '/login',\n  component: function component() {\n    return import('@/views/login/index');\n  },\n  hidden: true\n}, {\n  path: '/auth-redirect',\n  component: function component() {\n    return import('@/views/login/auth-redirect');\n  },\n  hidden: true\n}, {\n  path: '/404',\n  component: function component() {\n    return import('@/views/other/error-page/404');\n  },\n  hidden: true\n}, {\n  path: '/401',\n  component: function component() {\n    return import('@/views/other/error-page/401');\n  },\n  hidden: true\n}, {\n  path: '/',\n  component: Layout,\n  projectHidden: true,\n  children: [{\n    path: 'projectList',\n    component: function component() {\n      return import('@/views/project/projectList');\n    },\n    name: '项目列表',\n    meta: {\n      title: '项目',\n      icon: 'list'\n    }\n  }]\n}, {\n  path: '/projectList',\n  component: projectLayout,\n  name: 'project',\n  hidden: true,\n  meta: {\n    title: '项目',\n    icon: 'documentation'\n  },\n  children: [{\n    path: '/board/project=:project_id',\n    component: function component() {\n      return import('@/views/project/projectTitle');\n    },\n    name: '项目面板',\n    leaf: true,\n    props: true,\n    meta: {\n      title: '项目面板',\n      noCache: true\n    }\n  }, {\n    path: '/config/project=:project_id',\n    component: function component() {\n      return import('@/views/project/projectConfig');\n    },\n    name: '项目配置',\n    projectHidden: true,\n    props: true,\n    meta: {\n      title: '项目配置',\n      noCache: true\n    }\n  }, {\n    path: '/dynamic/project=:project_id',\n    component: function component() {\n      return import('@/views/project/projectDynamic');\n    },\n    name: '项目动态',\n    projectHidden: true,\n    props: true,\n    meta: {\n      title: '项目动态',\n      noCache: true\n    }\n  }, {\n    path: '/member/project=:project_id',\n    component: function component() {\n      return import('@/views/project/projectMember');\n    },\n    name: '成员管理',\n    projectHidden: true,\n    props: true,\n    meta: {\n      title: '成员管理',\n      noCache: true\n    }\n  }, {\n    path: '/api',\n    component: API,\n    name: '接口管理',\n    leaf: true,\n    child: true,\n    meta: {\n      title: '接口',\n      noCache: true\n    },\n    children: [{\n      path: '/apiList/project=:project_id',\n      component: function component() {\n        return import('@/views/project/api/apiList.vue');\n      },\n      name: '接口列表',\n      meta: {\n        title: '接口列表',\n        noCache: true\n      }\n    }, {\n      path: '/apiList/project=:project_id/group=:firstGroup',\n      component: function component() {\n        return import('@/views/project/api/apiList.vue');\n      },\n      name: '分组接口列表',\n      meta: {\n        title: '分组接口列表',\n        noCache: true\n      }\n    }, {\n      path: '/apiFast/project=:project_id',\n      component: function component() {\n        return import('@/views/project/api/fastTest.vue');\n      },\n      name: '快速测试',\n      meta: {\n        title: '快速测试',\n        noCache: true\n      }\n    }, {\n      path: '/apiAdd/project=:project_id',\n      component: function component() {\n        return import('@/views/project/api/addApi.vue');\n      },\n      name: '新增接口',\n      meta: {\n        title: '新增接口',\n        noCache: true\n      }\n    }, {\n      path: '',\n      component: function component() {\n        return import('@/views/project/api/apiForm.vue');\n      },\n      name: '接口',\n      children: [{\n        path: '/apiInfo/project=:project_id/api=:api_id',\n        component: function component() {\n          return import('@/views/project/api/apiInfo.vue');\n        },\n        name: '基础信息',\n        meta: {\n          title: '基础信息',\n          noCache: true\n        }\n      }, {\n        path: '/apiTest/project=:project_id/api=:api_id',\n        component: function component() {\n          return import('@/views/project/api/testApi.vue');\n        },\n        name: '测试',\n        meta: {\n          title: '测试',\n          noCache: true\n        }\n      } //{ path: '/apiDynamic/project=:project_id/api=:api_id', component: ApiDynamic, name: '历史'},\n      ]\n    }, {\n      path: '/apiUpdate/project=:project_id/api=:api_id',\n      component: function component() {\n        return import('@/views/project/api/updateApi.vue');\n      },\n      name: '修改接口',\n      meta: {\n        title: '修改接口',\n        noCache: true\n      }\n    }]\n  }, {\n    path: '/auto',\n    component: Automation,\n    name: '自动化用例',\n    leaf: true,\n    child: true,\n    meta: {\n      title: '自动化',\n      noCache: true\n    },\n    children: [{\n      path: '/autolist/project=:project_id',\n      component: function component() {\n        return import('@/views/project/auto/autoList');\n      },\n      name: '自动化列表',\n      meta: {\n        title: '自动化列表',\n        noCache: true\n      }\n    }, {\n      path: '/autolist/project=:project_id/auto=:automation_id',\n      component: function component() {\n        return import('@/views/project/auto/autoList');\n      },\n      name: '自动化用例列表',\n      meta: {\n        title: '自动化用例列表',\n        noCache: true\n      }\n    }, {\n      path: '/autolist/project=:project_id/group=:firstGroup',\n      component: function component() {\n        return import('@/views/project/auto/autoList');\n      },\n      name: '分组自动化列表',\n      meta: {\n        title: '分组自动化列表',\n        noCache: true\n      }\n    }, {\n      path: '/autoStep/project=:project_id/auto=:automation_id',\n      component: function component() {\n        return import('@/views/project/auto/autoStepList.vue');\n      },\n      name: '自动化步骤列表',\n      meta: {\n        title: '自动化步骤列表',\n        noCache: true\n      }\n    }, {\n      path: '/autoStep/project=:project_id/auto=:automation_id/type=:type',\n      component: function component() {\n        return import('@/views/project/auto/autoStepList.vue');\n      },\n      name: '更新自动化步骤',\n      meta: {\n        title: '更新自动化步骤',\n        noCache: true\n      }\n    }]\n  }, {\n    path: '/task/project=:project_id',\n    component: function component() {\n      return import('@/views/project/auto/taskList');\n    },\n    name: '自动化任务',\n    leaf: true,\n    props: true,\n    meta: {\n      title: '自动化任务',\n      noCache: true\n    }\n  }, {\n    path: '/publish/project=:project_id',\n    component: function component() {\n      return import('@/views/project/auto/publishList');\n    },\n    name: '发布项目',\n    leaf: true,\n    props: true,\n    meta: {\n      title: '发布项目',\n      noCache: true\n    }\n  }, {\n    path: '/report/project=:project_id',\n    component: function component() {\n      return import('@/views/project/auto/autoReport');\n    },\n    name: '自动化统计',\n    leaf: true,\n    props: true,\n    meta: {\n      title: '自动化统计',\n      noCache: true\n    }\n  }, {\n    path: '/report',\n    component: AutomationReport,\n    name: '自动化报告',\n    projectHidden: true,\n    meta: {\n      title: '自动化报告',\n      noCache: true\n    },\n    children: [{\n      path: '/report/project=:project_id',\n      component: AutomationReport,\n      name: '自动化执行报告',\n      meta: {\n        title: '自动化执行报告',\n        noCache: true\n      }\n    }, {\n      path: '/report/project=:project_id/auto=:automation_id',\n      component: AutomationReport,\n      name: '自动化执行结果',\n      meta: {\n        title: '自动化执行结果',\n        noCache: true\n      }\n    }, {\n      path: '/report/project=:project_id/auto=:automation_id/trace=:trace',\n      component: AutomationReport,\n      name: '自动化执行详情',\n      meta: {\n        title: '自动化执行详情',\n        noCache: true\n      }\n    }, {\n      path: '/report/project=:project_id/trace=:trace',\n      component: AutomationReport,\n      name: '自动化任务执行结果',\n      meta: {\n        title: '自动化任务执行结果',\n        noCache: true\n      }\n    }]\n  }]\n}, {\n  path: '/charts',\n  component: Layout,\n  hidden: true,\n  projectHidden: true,\n  redirect: 'noRedirect',\n  name: 'Charts',\n  meta: {\n    title: '项目统计',\n    icon: 'chart'\n  },\n  children: [{\n    path: 'keyboard',\n    component: function component() {\n      return import('@/views/other/charts/keyboard');\n    },\n    name: 'KeyboardChart',\n    meta: {\n      title: 'Keyboard Chart',\n      noCache: true\n    }\n  }, {\n    path: 'line',\n    component: function component() {\n      return import('@/views/other/charts/line');\n    },\n    name: 'LineChart',\n    meta: {\n      title: 'Line Chart',\n      noCache: true\n    }\n  }, {\n    path: 'mix-chart',\n    component: function component() {\n      return import('@/views/other/charts/mix-chart');\n    },\n    name: 'MixChart',\n    meta: {\n      title: 'Mix Chart',\n      noCache: true\n    }\n  }]\n}, {\n  path: '/config',\n  component: Layout,\n  projectHidden: true,\n  children: [{\n    path: '',\n    component: function component() {\n      return import('@/views/config/configList');\n    },\n    name: 'config',\n    meta: {\n      title: '配置',\n      icon: 'theme'\n    }\n  }]\n}, {\n  path: '/user',\n  component: Layout,\n  projectHidden: true,\n  children: [{\n    path: '',\n    component: function component() {\n      return import('@/views/user/userList');\n    },\n    name: 'user',\n    meta: {\n      title: '用户',\n      icon: 'user'\n    }\n  }]\n}, {\n  path: '/documentation',\n  component: Layout,\n  projectHidden: true,\n  children: [{\n    path: '',\n    component: function component() {\n      return import('@/views/documentation/index');\n    },\n    name: 'Documentation',\n    meta: {\n      title: '文档',\n      icon: 'documentation'\n    }\n  }]\n}];\n/**\n * asyncRoutes\n * the routes that need to be dynamically loaded based on user roles\n */\n\nexport var asyncRoutes = [{\n  path: '/other',\n  component: Layout,\n  hidden: false,\n  //redirect: '/nested/menu1/menu1-1',\n  name: 'other',\n  meta: {\n    title: '其他',\n    icon: 'nested'\n  },\n  children: [{\n    path: 'dashboard',\n    component: function component() {\n      return import('@/views/dashboard/index');\n    },\n    name: '统计面板',\n    meta: {\n      title: '面板',\n      icon: 'dashboard',\n      noCache: true\n    }\n  }, {\n    path: 'profile',\n    component: function component() {\n      return import('@/views/other/profile/index');\n    },\n    name: 'Profile',\n    meta: {\n      title: 'profile',\n      icon: 'user',\n      noCache: true\n    }\n  }, {\n    path: '/permission',\n    component: Layout,\n    redirect: '/permission/page',\n    alwaysShow: true,\n    // will always show the root menu\n    name: 'Permission',\n    meta: {\n      title: '配置管理',\n      icon: 'icon',\n      roles: ['admin', 'editor'] // you can set roles in root nav\n\n    },\n    children: [{\n      path: 'page',\n      component: function component() {\n        return import('@/views/other/permission/page');\n      },\n      name: 'PagePermission',\n      meta: {\n        title: 'Page Permission',\n        roles: ['admin'] // or you can only set roles in sub nav\n\n      }\n    }, {\n      path: 'directive',\n      component: function component() {\n        return import('@/views/other/permission/directive');\n      },\n      name: 'DirectivePermission',\n      meta: {\n        title: 'Directive Permission' // if do not set roles, means: this page does not require permission\n\n      }\n    }, {\n      path: 'role',\n      component: function component() {\n        return import('@/views/other/permission/role');\n      },\n      name: 'RolePermission',\n      meta: {\n        title: 'Role Permission',\n        roles: ['admin']\n      }\n    }]\n  }, {\n    path: '/icon',\n    component: Layout,\n    children: [{\n      path: 'index',\n      component: function component() {\n        return import('@/views/other/icons/index');\n      },\n      name: 'Icons',\n      meta: {\n        title: 'Icons',\n        icon: 'icon',\n        noCache: true\n      }\n    }]\n  },\n  /** when your routing map is too long, you can split it into small modules **/\n  componentsRouter, tableRouter, {\n    path: '/example',\n    component: Layout,\n    redirect: '/example/list',\n    name: 'Example',\n    meta: {\n      title: 'Example',\n      icon: 'example'\n    },\n    children: [{\n      path: 'create',\n      component: function component() {\n        return import('@/views/other/example/create');\n      },\n      name: 'CreateArticle',\n      meta: {\n        title: 'Create Article',\n        icon: 'edit'\n      }\n    }, {\n      path: 'edit/:id(\\\\d+)',\n      component: function component() {\n        return import('@/views/other/example/edit');\n      },\n      name: 'EditArticle',\n      meta: {\n        title: 'Edit Article',\n        noCache: true,\n        activeMenu: '/example/list'\n      },\n      hidden: true\n    }, {\n      path: 'list',\n      component: function component() {\n        return import('@/views/other/example/list');\n      },\n      name: 'ArticleList',\n      meta: {\n        title: 'Article List',\n        icon: 'list'\n      }\n    }]\n  }, {\n    path: '/tab',\n    component: Layout,\n    children: [{\n      path: 'index',\n      component: function component() {\n        return import('@/views/other/tab/index');\n      },\n      name: 'Tab',\n      meta: {\n        title: 'Tab',\n        icon: 'tab'\n      }\n    }]\n  }, {\n    path: '/error',\n    component: Layout,\n    redirect: 'noRedirect',\n    name: 'ErrorPages',\n    meta: {\n      title: 'Error Pages',\n      icon: '404'\n    },\n    children: [{\n      path: '401',\n      component: function component() {\n        return import('@/views/other/error-page/401');\n      },\n      name: 'Page401',\n      meta: {\n        title: '401',\n        noCache: true\n      }\n    }, {\n      path: '404',\n      component: function component() {\n        return import('@/views/other/error-page/404');\n      },\n      name: 'Page404',\n      meta: {\n        title: '404',\n        noCache: true\n      }\n    }]\n  }, {\n    path: '/error-log',\n    component: Layout,\n    children: [{\n      path: 'log',\n      component: function component() {\n        return import('@/views/other/error-log/index');\n      },\n      name: 'ErrorLog',\n      meta: {\n        title: 'Error Log',\n        icon: 'bug'\n      }\n    }]\n  }, {\n    path: '/excel',\n    component: Layout,\n    redirect: '/excel/export-excel',\n    name: 'Excel',\n    meta: {\n      title: 'Excel',\n      icon: 'excel'\n    },\n    children: [{\n      path: 'export-excel',\n      component: function component() {\n        return import('@/views/other/excel/export-excel');\n      },\n      name: 'ExportExcel',\n      meta: {\n        title: 'Export Excel'\n      }\n    }, {\n      path: 'export-selected-excel',\n      component: function component() {\n        return import('@/views/other/excel/select-excel');\n      },\n      name: 'SelectExcel',\n      meta: {\n        title: 'Export Selected'\n      }\n    }, {\n      path: 'export-merge-header',\n      component: function component() {\n        return import('@/views/other/excel/merge-header');\n      },\n      name: 'MergeHeader',\n      meta: {\n        title: 'Merge Header'\n      }\n    }, {\n      path: 'upload-excel',\n      component: function component() {\n        return import('@/views/other/excel/upload-excel');\n      },\n      name: 'UploadExcel',\n      meta: {\n        title: 'Upload Excel'\n      }\n    }]\n  }, {\n    path: '/zip',\n    component: Layout,\n    redirect: '/zip/download',\n    alwaysShow: true,\n    name: 'Zip',\n    meta: {\n      title: 'Zip',\n      icon: 'zip'\n    },\n    children: [{\n      path: 'download',\n      component: function component() {\n        return import('@/views/other/zip/index');\n      },\n      name: 'ExportZip',\n      meta: {\n        title: 'Export Zip'\n      }\n    }]\n  }, {\n    path: '/pdf',\n    component: Layout,\n    redirect: '/pdf/index',\n    children: [{\n      path: 'index',\n      component: function component() {\n        return import('@/views/other/pdf/index');\n      },\n      name: 'PDF',\n      meta: {\n        title: 'PDF',\n        icon: 'pdf'\n      }\n    }]\n  }, {\n    path: '/pdf/download',\n    component: function component() {\n      return import('@/views/other/pdf/download');\n    },\n    hidden: true\n  }, {\n    path: '/theme',\n    component: Layout,\n    children: [{\n      path: 'index',\n      component: function component() {\n        return import('@/views/other/theme/index');\n      },\n      name: 'Theme',\n      meta: {\n        title: 'Theme',\n        icon: 'theme'\n      }\n    }]\n  }, {\n    path: '/clipboard',\n    component: Layout,\n    children: [{\n      path: 'index',\n      component: function component() {\n        return import('@/views/other/clipboard/index');\n      },\n      name: 'ClipboardDemo',\n      meta: {\n        title: 'Clipboard',\n        icon: 'clipboard'\n      }\n    }]\n  }, {\n    path: 'external-link',\n    component: Layout,\n    children: [{\n      path: 'https://github.com/PanJiaChen/vue-element-admin',\n      meta: {\n        title: '外部链接',\n        icon: 'link'\n      }\n    }]\n  }]\n}, // 404 page must be placed at the end !!!\n{\n  path: '*',\n  redirect: '/404',\n  hidden: true\n}];\n\nvar createRouter = function createRouter() {\n  return new Router({\n    // mode: 'history', // require service support\n    scrollBehavior: function scrollBehavior() {\n      return {\n        y: 0\n      };\n    },\n    routes: constantRoutes\n  });\n};\n\nvar router = createRouter(); // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465\n\nexport function resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // reset router\n}\nexport default router;",null]}