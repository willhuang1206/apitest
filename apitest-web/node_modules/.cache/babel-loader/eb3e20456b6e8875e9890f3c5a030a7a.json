{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/config/configList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/config/configList.vue","mtime":1588924834205},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import NProgress from 'nprogress'\nimport { test } from \"../../api/api\";\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      globalConfig: [],\n      type: [{\n        value: 'config',\n        label: '配置'\n      }, {\n        value: 'tag',\n        label: '标签'\n      }],\n      filters: {\n        name: ''\n      },\n      total: 0,\n      page: 1,\n      pages: 0,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      editForm: {\n        data: {\n          id: '',\n          name: '',\n          type: 'config',\n          value: '',\n          description: ''\n        },\n        visible: false,\n        loading: false,\n        rules: {\n          name: [{\n            required: true,\n            message: '请输入名称',\n            trigger: 'blur'\n          }, {\n            min: 1,\n            max: 50,\n            message: '长度在 1 到 50 个字符',\n            trigger: 'blur'\n          }],\n          type: [{\n            required: true,\n            message: '请选择类型',\n            trigger: 'blur'\n          }],\n          value: [{\n            required: true,\n            message: '请输入值',\n            trigger: 'blur'\n          }],\n          description: [{\n            required: false,\n            message: '请输入描述',\n            trigger: 'blur'\n          }, {\n            max: 1024,\n            message: '不能超过1024个字符',\n            trigger: 'blur'\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    // 获取HOST列表\n    getGlobalConfig: function getGlobalConfig() {\n      this.listLoading = true;\n      var self = this;\n      var params = {\n        page: self.page,\n        name: self.filters.name,\n        type: self.filters.type\n      };\n      var headers = {\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get(\"\".concat(test, \"/api/global/config_list\"), {\n        params: params,\n        headers: headers\n      }).then(function (res) {\n        var _res$data = res.data,\n            msg = _res$data.msg,\n            code = _res$data.code,\n            data = _res$data.data;\n        self.listLoading = false;\n\n        if (code === '999999') {\n          self.total = data.total;\n          self.globalConfig = data.data;\n          self.pages = data.pages;\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    },\n    handleSearch: function handleSearch() {\n      this.page = 1;\n      this.getGlobalConfig();\n    },\n    //删除\n    handleDel: function handleDel(index, row) {\n      var _this = this;\n\n      this.$confirm('确认删除配置[' + row.name + ']吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this.listLoading = true; //NProgress.start();\n\n        var self = _this;\n        var params = {\n          ids: [row.id]\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(\"\".concat(test, \"/api/global/del_config\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data2 = res.data,\n              msg = _res$data2.msg,\n              code = _res$data2.code,\n              data = _res$data2.data;\n\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.getGlobalConfig();\n        });\n      }).catch(function () {});\n    },\n    handleChangeStatus: function handleChangeStatus(index, row) {\n      var self = this;\n      this.listLoading = true;\n      var params = {\n        config_id: Number(row.id)\n      };\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n\n      if (row.status) {\n        axios.post(\"\".concat(test, \"/api/global/disable_config\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data3 = res.data,\n              msg = _res$data3.msg,\n              code = _res$data3.code,\n              data = _res$data3.data;\n          self.listLoading = false;\n\n          if (code === '999999') {\n            self.$message({\n              message: '禁用成功',\n              center: true,\n              type: 'success'\n            });\n            row.status = !row.status;\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n        });\n      } else {\n        axios.post(\"\".concat(test, \"/api/global/enable_config\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data4 = res.data,\n              msg = _res$data4.msg,\n              code = _res$data4.code,\n              data = _res$data4.data;\n          self.listLoading = false;\n\n          if (code === '999999') {\n            self.$message({\n              message: '启用成功',\n              center: true,\n              type: 'success'\n            });\n            row.status = !row.status;\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n        });\n      }\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getGlobalConfig();\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit(index, row) {\n      this.editForm.title = \"编辑\";\n      this.editForm.visible = true;\n      this.editForm.data = Object.assign({}, row);\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.editForm.title = \"新增\";\n      this.editForm.visible = true;\n      this.editForm.data = {\n        id: '',\n        name: '',\n        type: 'config',\n        value: '',\n        description: ''\n      };\n    },\n    //编辑\n    editSubmit: function editSubmit() {\n      var _this2 = this;\n\n      var self = this;\n      this.$refs.editForm.validate(function (valid) {\n        if (valid) {\n          _this2.$confirm('确认提交吗？', '提示', {}).then(function () {\n            self.editForm.loading = true; //NProgress.start();\n\n            var params = {\n              name: self.editForm.data.name,\n              type: self.editForm.data.type,\n              value: self.editForm.data.value,\n              description: self.editForm.data.description\n            };\n            var url = \"\".concat(test, \"/api/global/add_config\");\n\n            if (self.editForm.data.id != \"\") {\n              params[\"id\"] = Number(self.editForm.data.id);\n              url = \"\".concat(test, \"/api/global/update_config\");\n            }\n\n            var headers = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + sessionStorage.getItem('token')\n            };\n            axios.post(url, params, {\n              headers: headers\n            }).then(function (res) {\n              var _res$data5 = res.data,\n                  msg = _res$data5.msg,\n                  code = _res$data5.code,\n                  data = _res$data5.data;\n              self.editForm.loading = false;\n\n              if (code === '999999') {\n                self.$message({\n                  message: '执行成功',\n                  center: true,\n                  type: 'success'\n                });\n                self.$refs['editForm'].resetFields();\n                self.editForm.visible = false;\n                self.getGlobalConfig();\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              }\n            });\n          }).catch(function () {});\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      var ids = this.sels.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认删除选中记录吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.listLoading = true; //NProgress.start();\n\n        var params = {\n          ids: ids\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(\"\".concat(test, \"/api/global/del_config\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data6 = res.data,\n              msg = _res$data6.msg,\n              code = _res$data6.code,\n              data = _res$data6.data;\n          self.listLoading = false;\n\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.getGlobalConfig();\n        });\n      }).catch(function () {});\n    }\n  },\n  mounted: function mounted() {\n    this.getGlobalConfig();\n  }\n};",null]}