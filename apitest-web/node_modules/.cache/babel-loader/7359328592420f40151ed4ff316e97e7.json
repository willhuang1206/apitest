{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/autoReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/autoReport.vue","mtime":1588923684861},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/huangrong/workspace/apitest/apitest-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _api = require(\"../../../api/api\");\n\nvar _jquery = _interopRequireDefault(require(\"jquery\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"automation-report\",\n  data: function data() {\n    return {\n      project_id: this.$route.params.project_id,\n      automation_id: this.$route.params.automation_id,\n      type: \"autoChart\",\n      global: false,\n      report: {\n        visible: false,\n        data: {}\n      },\n      filters: {\n        name: \"\",\n        testtime: this.defaultDate(),\n        start_time: \"\",\n        end_time: \"\",\n        project: \"\"\n      },\n      projectlist: [],\n      listType: [{\n        value: 'autoChart',\n        label: '用例执行统计'\n      }, {\n        value: 'apiChart',\n        label: '接口执行统计'\n      }, {\n        value: 'publish',\n        label: '发布项目统计'\n      }, {\n        value: 'case',\n        label: '用例执行情况'\n      }, {\n        value: 'task',\n        label: '任务执行情况'\n      }, {\n        value: 'apiAutomated',\n        label: '接口覆盖统计'\n      }, {\n        value: 'dynamicChart',\n        label: '项目动态统计'\n      }],\n      summaryTable: {\n        loading: false,\n        visible: false,\n        list: [],\n        page: 1,\n        pages: 0,\n        total: 0,\n        pageSize: 20\n      },\n      resultTable: {\n        loading: false,\n        visible: false,\n        list: [],\n        page: 1,\n        pages: 0,\n        total: 0,\n        pageSize: 20\n      },\n      detailTable: {\n        loading: false,\n        visible: false,\n        list: [],\n        parentResult: null\n      },\n      apiAutomatedTable: {\n        loading: false,\n        visible: false,\n        list: [],\n        page: 1,\n        pages: 0,\n        total: 0\n      },\n      stepTable: {\n        visible: false,\n        list: [],\n        name: \"\"\n      },\n      autoChart: {\n        visible: false\n      },\n      publishChart: {\n        visible: false\n      },\n      failChart: {\n        visible: false\n      },\n      failType: {\n        'code': '编码',\n        'env': '环境',\n        'data': '数据',\n        'other': '其他'\n      },\n      severity: [{\n        value: 'fatal',\n        label: '致命的'\n      }, {\n        value: 'critical',\n        label: '严重的'\n      }, {\n        value: 'major',\n        label: '一般的'\n      }, {\n        value: 'minor',\n        label: '微小的'\n      }],\n      failForm: {\n        visible: false,\n        loading: false,\n        data: {\n          id: \"\",\n          type: \"code\",\n          severity: \"major\",\n          cause: \"\",\n          detail: \"\",\n          bug: \"\"\n        },\n        row: null,\n        rules: {\n          type: [{\n            required: true,\n            message: '请选择类型',\n            trigger: 'blur'\n          }],\n          severity: [{\n            required: true,\n            message: '请选择严重等级',\n            trigger: 'blur'\n          }],\n          cause: [{\n            required: true,\n            message: '请输入根源',\n            trigger: 'blur'\n          }, {\n            max: 256,\n            message: '不能超过256个字符',\n            trigger: 'blur'\n          }],\n          detail: [{\n            required: true,\n            message: '请输入详情',\n            trigger: 'blur'\n          }, {\n            max: 1024,\n            message: '不能超过1024个字符',\n            trigger: 'blur'\n          }],\n          bug: [{\n            max: 50,\n            message: '不能超过50个字符',\n            trigger: 'blur'\n          }]\n        }\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '今天',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '昨天',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            end.setDate(end.getDate() - 1);\n            var start = new Date();\n            start.setDate(start.getDate() - 1);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '本周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var weekday = end.getDay() || 7;\n            var start = new Date();\n            start.setDate(start.getDate() - weekday + 1);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '上周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var weekday = end.getDay() || 7;\n            end.setDate(end.getDate() - weekday);\n            var start = new Date();\n            start.setDate(end.getDate() - 6);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setDate(start.getDate() - 6);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '本月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setDate(1);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 29);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 89);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '今年',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setMonth(0);\n            start.setDate(1);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  methods: {\n    tableRowStyle: function tableRowStyle(row) {\n      if (row.result === 'ERROR' || row.result === 'FAIL') {\n        return \"background-color: #DC143C;\";\n      } else if (row.result === 'TimeOut') {\n        return \"background-color: #FFE4C4;\";\n      }\n    },\n    filterHandler: function filterHandler(value, row, column) {\n      return row.result === value;\n    },\n    handleSearch: function handleSearch(type) {\n      this.apiAutomatedTable.visible = false;\n      this.publishChart.visible = false;\n\n      if (type == \"case\") {\n        this.summaryTable.page = 1;\n        this.autoChart.visible = false;\n        this.failChart.visible = false;\n        this.viewAutomationSummary();\n      } else if (type == \"autoChart\") {\n        this.autoChart.visible = true;\n        this.failChart.visible = true;\n        this.viewAutomationChart();\n        this.viewAutomationSummary();\n      } else if (type == \"apiChart\") {\n        this.autoChart.visible = true;\n        this.failChart.visible = false;\n        this.viewApiChart();\n      } else if (type == \"dynamicChart\") {\n        this.autoChart.visible = true;\n        this.failChart.visible = false;\n        this.viewDynamicChart();\n      } else if (type == \"publish\") {\n        this.resultTable.page = 1;\n        this.autoChart.visible = true;\n        this.publishChart.visible = true;\n        this.failChart.visible = false;\n        this.viewPublishChart();\n        this.viewAutomationResult(type, \"\");\n      } else if (type == \"task\") {\n        this.resultTable.page = 1;\n        this.autoChart.visible = false;\n        this.failChart.visible = false;\n        this.viewAutomationResult(type, \"\");\n      } else if (type == \"apiAutomated\") {\n        this.apiAutomatedTable.page = 1;\n        this.autoChart.visible = false;\n        this.failChart.visible = false;\n        this.viewApiAutomated();\n      }\n    },\n    viewAutomationSummary: function viewAutomationSummary() {\n      if (this.filters.testtime != \"\" && this.filters.testtime != null) {\n        this.filters.start_time = this.filters.testtime[0];\n        this.filters.end_time = this.filters.testtime[1];\n      } else {\n        this.filters.start_time = \"\";\n        this.filters.end_time = \"\";\n      }\n\n      this.summaryTable.visible = true;\n      this.resultTable.visible = false;\n      this.detailTable.visible = false;\n      this.summaryTable.loading = true;\n      var self = this;\n      var param = {\n        project_id: this.project_id,\n        name: this.filters.name,\n        start_time: this.filters.start_time,\n        end_time: this.filters.end_time,\n        page: self.summaryTable.page\n      };\n\n      if (this.filters.start_time != \"\" && this.filters.end_time != \"\") {\n        self.summaryTable.pageSize = 500;\n        param[\"page_size\"] = self.summaryTable.pageSize;\n      } else {\n        self.summaryTable.pageSize = 20;\n        param[\"page_size\"] = self.summaryTable.pageSize;\n      }\n\n      _axios.default.get(_api.test + \"/api/report/automation_summary\", {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n        self.summaryTable.loading = false;\n\n        if (data.code === '999999') {\n          //                            alert(data.data.data);\n          self.summaryTable.total = data.data.total;\n          self.summaryTable.pages = data.data.pages;\n          self.summaryTable.list = []; //                            alert(data.data.data);\n\n          data.data.data.forEach(function (item) {\n            item[\"passRate\"] = parseFloat((item[\"passed\"] * 100 / item[\"total\"]).toFixed(1));\n            self.summaryTable.list.push(item);\n          });\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    viewAutomationChart: function viewAutomationChart() {\n      var _this = this;\n\n      if (this.filters.testtime != \"\" && this.filters.testtime != null) {\n        this.filters.start_time = this.filters.testtime[0];\n        this.filters.end_time = this.filters.testtime[1];\n      } else {\n        this.filters.start_time = \"\";\n        this.filters.end_time = \"\";\n      }\n\n      var self = this;\n      var param = {\n        project_id: this.project_id,\n        start_time: this.filters.start_time,\n        end_time: this.filters.end_time\n      };\n\n      _axios.default.get(_api.test + \"/api/report/automation_chart\", {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code === '999999') {\n          _this.autoChart.visible = true;\n\n          _this.drawbar(data.data.autoChart, \"autoChart\", \"用例执行统计\", \"bar\");\n\n          if (data.data.failTypeChart.line_name.length > 0) {\n            _this.failChart.visible = true;\n\n            _this.drawpie(data.data.failTypeChart, \"failTypeChart\", \"失败类型\");\n\n            _this.drawpie(data.data.failSeverityChart, \"failSeverityChart\", \"失败严重等级\");\n          } else {\n            _this.failChart.visible = false;\n          }\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    viewPublishChart: function viewPublishChart() {\n      var _this2 = this;\n\n      if (this.filters.testtime != \"\" && this.filters.testtime != null) {\n        this.filters.start_time = this.filters.testtime[0];\n        this.filters.end_time = this.filters.testtime[1];\n      } else {\n        this.filters.start_time = \"\";\n        this.filters.end_time = \"\";\n      }\n\n      this.summaryTable.visible = false;\n      this.resultTable.visible = false;\n      this.detailTable.visible = false;\n      this.summaryTable.loading = true;\n      var self = this;\n      var param = {\n        project_id: this.project_id,\n        start_time: this.filters.start_time,\n        end_time: this.filters.end_time\n      };\n\n      _axios.default.get(_api.test + \"/api/report/publish_chart\", {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code === '999999') {\n          _this2.autoChart.visible = true;\n\n          _this2.drawbar(data.data.publish_chart, \"autoChart\", \"发布项目统计-按日期\", \"bar\");\n\n          _this2.publishChart.visible = true;\n\n          _this2.drawpie(data.data.publish_pie, \"publishChart\", \"发布项目\");\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    viewApiChart: function viewApiChart() {\n      var _this3 = this;\n\n      if (this.filters.testtime != \"\" && this.filters.testtime != null) {\n        this.filters.start_time = this.filters.testtime[0];\n        this.filters.end_time = this.filters.testtime[1];\n      } else {\n        this.filters.start_time = \"\";\n        this.filters.end_time = \"\";\n      }\n\n      this.summaryTable.visible = false;\n      this.resultTable.visible = false;\n      this.detailTable.visible = false;\n      this.summaryTable.loading = true;\n      var self = this;\n      var param = {\n        project_id: this.project_id,\n        start_time: this.filters.start_time,\n        end_time: this.filters.end_time\n      };\n\n      _axios.default.get(_api.test + \"/api/report/api_chart\", {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code === '999999') {\n          _this3.autoChart.visible = true;\n\n          _this3.drawbar1(data.data, \"autoChart\", \"接口执行统计\", \"bar\");\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    viewDynamicChart: function viewDynamicChart() {\n      var _this4 = this;\n\n      if (this.filters.testtime != \"\" && this.filters.testtime != null) {\n        this.filters.start_time = this.filters.testtime[0];\n        this.filters.end_time = this.filters.testtime[1];\n      } else {\n        this.filters.start_time = \"\";\n        this.filters.end_time = \"\";\n      }\n\n      this.summaryTable.visible = false;\n      this.resultTable.visible = false;\n      this.detailTable.visible = false;\n      this.summaryTable.loading = true;\n      var self = this;\n      var param = {\n        project_id: this.project_id,\n        start_time: this.filters.start_time,\n        end_time: this.filters.end_time\n      };\n\n      _axios.default.get(_api.test + \"/api/report/dynamic_chart\", {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code === '999999') {\n          _this4.autoChart.visible = true;\n\n          _this4.drawbar1(data.data, \"autoChart\", \"项目动态统计\", \"bar\");\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    drawbar: function drawbar(test_bar_data, chartid, title, type) {\n      var echartBar = this.$echarts.init(document.getElementById(chartid));\n      echartBar.clear();\n      var option = {\n        title: {\n          text: title\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {\n              show: true\n            },\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: ['line', 'bar']\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        calculable: true,\n        legend: {\n          data: ['执行数', '通过率']\n        },\n        xAxis: [{\n          type: 'category',\n          data: test_bar_data.line_name,\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          },\n          axisPointer: {\n            type: 'shadow'\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '执行数'\n        }, {\n          type: 'value',\n          name: '通过率',\n          min: 0,\n          max: 100,\n          interval: 20,\n          axisLabel: {\n            formatter: '{value}%'\n          }\n        }],\n        series: [{\n          name: '执行数',\n          type: type,\n          itemStyle: {\n            normal: {\n              //                                    color:'#7cb5ec',\n              label: {\n                show: true,\n                position: 'top'\n              }\n            }\n          },\n          data: test_bar_data.line_x\n        }, {\n          name: '通过率',\n          type: 'line',\n          smooth: true,\n          yAxisIndex: 1,\n          itemStyle: {\n            normal: {\n              color: '#26B99A',\n              label: {\n                show: true,\n                position: 'top'\n              }\n            }\n          },\n          data: test_bar_data.line_x1\n        }]\n      };\n      echartBar.setOption(option);\n    },\n    drawbar1: function drawbar1(test_bar_data, chartid, title, type) {\n      var echartBar = this.$echarts.init(document.getElementById(chartid));\n      echartBar.clear();\n      var option = {\n        title: {\n          text: title\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {\n              show: true\n            },\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: ['line', 'bar']\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        calculable: true,\n        legend: {\n          data: ['执行数']\n        },\n        xAxis: [{\n          type: 'category',\n          data: test_bar_data.line_name,\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          },\n          axisPointer: {\n            type: 'shadow'\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '执行数'\n        }],\n        series: [{\n          name: '执行数',\n          type: type,\n          itemStyle: {\n            normal: {\n              color: '#7cb5ec',\n              label: {\n                show: true,\n                position: 'top'\n              }\n            }\n          },\n          data: test_bar_data.line_x\n        }]\n      };\n      echartBar.setOption(option);\n    },\n    drawpie: function drawpie(data, chartid, title) {\n      var echartBar = this.$echarts.init(document.getElementById(chartid));\n      echartBar.clear();\n      var option = {\n        title: {\n          text: title + \"统计\"\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          left: 'center',\n          data: data.line_name\n        },\n        series: [{\n          name: title,\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: data.line_data,\n          label: {\n            formatter: '{b} : {c} ({d}%)'\n          },\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      echartBar.setOption(option);\n    },\n    viewApiAutomated: function viewApiAutomated() {\n      this.summaryTable.visible = false;\n      this.resultTable.visible = false;\n      this.detailTable.visible = false;\n      this.apiAutomatedTable.visible = true;\n      this.apiAutomatedTable.loading = true;\n      var param = {\n        project_id: this.project_id,\n        page: this.apiAutomatedTable.page\n      };\n      var url = _api.test + \"/api/report/apiautomatedcoverage\";\n      var self = this;\n\n      _axios.default.get(url, {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n        self.apiAutomatedTable.loading = false;\n\n        if (data.code === '999999') {\n          self.apiAutomatedTable.list = data.data.data;\n          self.apiAutomatedTable.pages = data.data.pages;\n          self.apiAutomatedTable.total = data.data.total;\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    viewAutomationResult: function viewAutomationResult(type, automationId) {\n      this.type = type;\n\n      if (this.filters.testtime != \"\" && this.filters.testtime != null) {\n        this.filters.start_time = this.filters.testtime[0];\n        this.filters.end_time = this.filters.testtime[1];\n      } else {\n        this.filters.start_time = \"\";\n        this.filters.end_time = \"\";\n      }\n\n      this.summaryTable.visible = false;\n      this.resultTable.visible = true;\n      this.detailTable.visible = false;\n      this.resultTable.loading = true;\n      var param = {\n        project_id: this.project_id,\n        start_time: this.filters.start_time,\n        end_time: this.filters.end_time,\n        page: this.resultTable.page,\n        type: this.type\n      };\n      var url = _api.test + \"/api/report/automation_result\";\n\n      if (this.type == \"case\") {\n        if (automationId != \"\") {\n          param[\"automation_id\"] = automationId;\n          this.automation_id = automationId;\n        } else if (this.$route.params.trace) {\n          param[\"trace\"] = this.$route.params.trace;\n        } else {\n          param[\"automation_id\"] = automationId;\n          this.automation_id = param[\"automation_id\"];\n        }\n      } else {\n        url = _api.test + \"/api/report/automations_result\";\n      }\n\n      var self = this;\n\n      _axios.default.get(url, {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n        self.resultTable.loading = false;\n\n        if (data.code === '999999') {\n          self.resultTable.list = data.data.data;\n          self.resultTable.pages = data.data.pages;\n          self.resultTable.total = data.data.total;\n          self.resultTable.pageSize = data.data.page_size;\n\n          if (data.data.report) {\n            self.report.visible = true;\n            self.report.data = data.data.report;\n          }\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    viewAutomationDetail: function viewAutomationDetail(id, trace) {\n      this.summaryTable.visible = false;\n      this.resultTable.visible = false;\n      this.detailTable.visible = true;\n      this.detailTable.loading = true;\n      var self = this;\n      var param = {\n        automation_id: id,\n        trace: trace\n      };\n\n      _axios.default.get(_api.test + \"/api/report/automation_detail\", {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n        self.detailTable.loading = false;\n\n        if (data.code === '999999') {\n          self.detailTable.list = data.data.results;\n          self.detailTable.parentResult = data.data.parentResult;\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    // 翻页\n    handleSummaryPage: function handleSummaryPage(val) {\n      this.summaryTable.page = val;\n      this.viewAutomationSummary();\n    },\n    // 翻页\n    handleApiAutomatedTablePage: function handleApiAutomatedTablePage(val) {\n      this.apiAutomatedTable.page = val;\n      this.viewApiAutomated();\n    },\n    handleResultPage: function handleResultPage(val) {\n      this.resultTable.page = val;\n\n      if (this.$route.params.automation_id) {\n        this.viewAutomationResult(this.type, this.$route.params.automation_id);\n      } else {\n        this.viewAutomationResult(this.type, \"\");\n      }\n    },\n    defaultDate: function defaultDate() {\n      //获取新的时间(2019.4.12）\n      var date = new Date(); //获取当前时间的年份转为字符串\n\n      var year = date.getFullYear().toString(); //'2019'\n      //获取月份，由于月份从0开始，此处要加1，判断是否小于10，如果是在字符串前面拼接'0'\n\n      var month = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1).toString() : (date.getMonth() + 1).toString(); //'04'\n      //获取天，判断是否小于10，如果是在字符串前面拼接'0'\n\n      var da = date.getDate() < 10 ? '0' + date.getDate().toString() : date.getDate().toString(); //'12'\n      //字符串拼接，开始时间，结束时间\n\n      var end = year + '-' + month + '-' + da; //当天'2019-04-12'\n\n      var beg = year + '-' + month + '-01'; //当月第一天'2019-04-01'\n\n      return [beg, end]; //将值设置给插件绑定的数据\n    },\n    handleUpdateFail: function handleUpdateFail(row) {\n      this.failForm.visible = true;\n      this.failForm.data = {\n        id: row.id,\n        type: row.failType,\n        severity: row.failSeverity,\n        cause: row.failCause,\n        detail: row.failDetail,\n        bug: row.failBug\n      };\n      this.failForm.row = row;\n    },\n    updateFailSubmit: function updateFailSubmit() {\n      var _this5 = this;\n\n      this.$refs.failForm.validate(function (valid) {\n        if (valid) {\n          _this5.$confirm('确认提交吗？', '提示', {}).then(function () {\n            var self = _this5;\n            var param = JSON.stringify({\n              project_id: _this5.$route.params.project_id,\n              result_id: _this5.failForm.data.id,\n              type: _this5.failForm.data.type,\n              severity: _this5.failForm.data.severity,\n              cause: _this5.failForm.data.cause,\n              detail: _this5.failForm.data.detail,\n              bug: _this5.failForm.data.bug\n            });\n\n            _axios.default.post(_api.test + \"/api/report/updateresultfaildetail\", param, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: 'Token ' + sessionStorage.getItem('token')\n              }\n            }).then(function (response) {\n              var data = response.data;\n\n              if (response.data.code === '999999') {\n                self.failForm.visible = false;\n                self.failForm.row.failType = _this5.failForm.data.type;\n                self.failForm.row.failSeverity = _this5.failForm.data.severity;\n                self.failForm.row.failCause = _this5.failForm.data.cause;\n                self.failForm.row.failDetail = _this5.failForm.data.detail;\n                self.failForm.row.failBug = _this5.failForm.data.bug;\n                self.$message({\n                  message: '更新成功',\n                  center: true,\n                  type: 'success'\n                });\n              } else {\n                self.$message.error({\n                  message: response.data.msg,\n                  center: true\n                });\n              }\n            }).catch(function (error) {});\n          }).catch(function () {});\n        }\n      });\n    },\n    // 获取项目列表\n    getProjectList: function getProjectList() {\n      this.listLoading = true;\n      var self = this;\n      var params = {\n        page: 1,\n        page_size: 100,\n        status: true\n      };\n      var headers = {\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n\n      _axios.default.get(\"\".concat(_api.test, \"/api/project/project_list\"), {\n        params: params,\n        headers: headers\n      }).then(function (res) {\n        var _res$data = res.data,\n            msg = _res$data.msg,\n            code = _res$data.code,\n            data = _res$data.data;\n\n        if (code === '999999') {\n          self.projectlist = data.data;\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    },\n    init: function init() {\n      this.autoChart.visible = false;\n      this.failChart.visible = false;\n\n      if (this.$route.params.project_id) {\n        this.project_id = this.$route.params.project_id;\n        this.global = false;\n      } else {\n        this.global = true;\n        this.getProjectList();\n      }\n\n      if (this.$route.params.automation_id) {\n        this.automation_id = this.$route.params.automation_id;\n\n        if (!this.$route.params.trace) {\n          this.viewAutomationResult('case', this.automation_id);\n        } else {\n          this.viewAutomationDetail(this.$route.params.automation_id, this.$route.params.trace);\n        }\n      } else if (this.$route.params.trace) {\n        this.viewAutomationResult('case', \"\");\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  watch: {\n    '$route': function $route(to, from) {\n      //监听路由是否变化\n      if (to.query != from.query) {\n        this.init(); //重新加载数据\n      }\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["autoReport.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section>\n    <div class=\"main\">\n        <!--工具条-->\n      <el-container>\n      <el-header>\n        <el-col v-show=\"!report.visible\" :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px;\">\n            <el-form :inline=\"true\" :model=\"filters\" @submit.native.prevent>\n                <!--<el-button v-show=\"!summaryTable.visible\" class=\"return-list\" @click=\"back\"><i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>返回</el-button>-->\n                <!--<el-form-item v-show=\"summaryTable.visible\">-->\n                    <!--<el-input v-model.trim=\"filters.name\" placeholder=\"名称\" @keyup.enter.native=\"viewAutomationSummary\"></el-input>-->\n                <!--</el-form-item>-->\n                <el-form-item v-if=\"global\">\n                    <el-select v-model=\"project_id\"  placeholder=\"项目\">\n                        <el-option label=\"所有项目\" value=\"\"></el-option>\n                        <el-option v-for=\"(item,index) in projectlist\" :key=\"index+''\" :label=\"item.name\" :value=\"item.id\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item>\n                    <el-select v-model=\"type\"  placeholder=\"类型\">\n                        <el-option v-for=\"(item,index) in listType\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item prop=\"timeArray\">\n                    <el-date-picker  v-model=\"filters.testtime\" format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\" type=\"daterange\" :picker-options=\"pickerOptions\"\n                                     range-separator=\"至\" start-placeholder=\"开始时间\" end-placeholder=\"结束时间\" align=\"right\" ></el-date-picker>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"handleSearch(type)\">查询</el-button>\n                </el-form-item>\n            </el-form>\n        </el-col>\n        <el-row v-show=\"report.visible\">\n            <el-col :span=\"5\" class='inline'>\n                <el-card class=\"box-card\">\n                    <h3><i class=\"\"/>{{report.data.name}}</h3>\n                </el-card>\n            </el-col>\n            <el-col :span=\"3\" class='inline'>\n                <el-card class=\"box-card\">\n                    <h3><i class=\"\"/>{{report.data.env}}</h3>\n                </el-card>\n            </el-col>\n            <el-col :span=\"4\" class='inline'>\n                <el-card class=\"box-card\">\n                    <h3><i class=\"\"/>{{report.data.testTime}}</h3>\n                </el-card>\n            </el-col>\n            <el-col :span=\"3\" class='inline'>\n                <el-card class=\"box-card\">\n                    <h3>\n                      <span v-show=\"report.data.status==='PASS'\" style=\"color: #11b95c;\">测试通过</span>\n                      <span v-show=\"report.data.status==='FAIL'\" style=\"color: #cc0000;\">测试失败</span>\n                    </h3>\n                </el-card>\n            </el-col>\n            <el-col :span=\"3\" class='inline'>\n                <el-card class=\"box-card\">\n                    <h3><i class=\"\"/>执行用例{{report.data.totalCount}}个</h3>\n                </el-card>\n            </el-col>\n            <el-col v-show=\"report.data.status==='FAIL'\" :span=\"2\" class='inline'>\n                <el-card class=\"box-card\">\n                    <h3><i class=\"\"/>失败{{report.data.failCount}}个</h3>\n                </el-card>\n            </el-col>\n            <el-col :span=\"3\" class='inline'>\n                <el-card class=\"box-card\">\n                    <h3><i class=\"\"/>耗时{{report.data.duration}}秒</h3>\n                </el-card>\n            </el-col>\n        </el-row>\n        </el-header>\n      <el-main>\n        <el-row v-show=\"!report.visible\">\n          <el-card v-show=\"autoChart.visible\" class=\"box-card\">\n            <div id=\"autoChart\" style=\"height:376px\"></div>\n          </el-card>\n        </el-row>\n        <el-row v-show=\"!report.visible\">\n          <el-card v-show=\"publishChart.visible\" class=\"box-card\">\n            <div id=\"publishChart\" style=\"height:376px\"></div>\n          </el-card>\n        </el-row>\n        <el-row v-show=\"!report.visible\">\n          <el-col :span=\"12\">\n        <el-card v-show=\"failChart.visible\" class=\"box-card\">\n          <div id=\"failTypeChart\" style=\"height:376px\"></div>\n        </el-card>\n            </el-col>\n          <el-col :span=\"12\">\n        <el-card v-show=\"failChart.visible\" class=\"box-card\">\n          <div id=\"failSeverityChart\" style=\"height:376px\"></div>\n        </el-card>\n            </el-col>\n        </el-row>\n        <el-row>\n        <el-table :data=\"detailTable.list\" element-loading-text=\"拼命加载中\" element-loading-spinner=\"el-icon-loading\" v-loading=\"detailTable.loading\" v-show=\"detailTable.visible\" :row-style=\"tableRowStyle\">\n            <el-table-column type=\"expand\">\n                <template slot-scope=\"scope\">\n                    <el-table :data=\"scope.row.details\" highlight-current-row style=\"width: 100%;\">\n                        <el-table-column type=\"expand\">\n                            <template slot-scope=\"props\">\n                                <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n                                    <el-row v-show=\"props.row.type==='api'\" :gutter=\"10\">\n                                        <el-form-item label=\"接口地址： \">\n                                            <span>{{ props.row.url }}</span>\n                                        </el-form-item>\n                                    </el-row>\n                                    <el-row v-show=\"props.row.type==='api'\" :gutter=\"10\">\n                                        <el-form-item label=\"请求方式： \">\n                                            <span>{{ props.row.method }}</span>\n                                        </el-form-item>\n                                    </el-row>\n                                    <el-row v-show=\"props.row.type==='api'\" :gutter=\"10\">\n                                        <el-form-item label=\"请求参数： \">\n                                            <span style=\"word-break: break-all;overflow:auto;overflow-x:hidden\">{{ props.row.data }}</span>\n                                        </el-form-item>\n                                    </el-row>\n                                    <el-row :gutter=\"10\">\n                                        <el-form-item label=\"返回结果： \">\n                                            <span>\n                                                <!--<pre style=\"word-break: break-all;overflow:auto;overflow-x:hidden\">-->\n                                                  <code v-show=\"props.row.type!=='api'\">{{ props.row.result }}</code>\n                                                <!--</pre>-->\n                                                  <json-viewer v-show=\"props.row.type==='api'\" :value=\"props.row.result\" :expand-depth=5 boxed copyable></json-viewer>\n                                            </span>\n                                        </el-form-item>\n                                    </el-row>\n                                </el-form>\n                            </template>\n                        </el-table-column>\n                        <el-table-column type=\"index\" width=\"55\">\n                        </el-table-column>\n                        <el-table-column prop=\"name\" label=\"名称\" min-width=\"20%\" show-overflow-tooltip>\n                            <template slot-scope=\"scope\">\n                                <span style=\"font-size: 16px\">{{scope.row.name}}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"result\" label=\"返回结果\" min-width=\"40%\" show-overflow-tooltip>\n                            <template slot-scope=\"scope\">\n                                <span style=\"font-size: 16px\">{{scope.row.result}}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"status\" label=\"执行状态\" min-width=\"10%\" show-overflow-tooltip>\n                            <template slot-scope=\"scope\">\n                                <span v-show=\"scope.row.status==='PASS'\" style=\"color: #11b95c;cursor:pointer;\">成功</span>\n                                <span v-show=\"scope.row.status==='FAIL'\" style=\"color: #cc0000;cursor:pointer;\">失败</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"description\" label=\"描述\" min-width=\"30%\" show-overflow-tooltip>\n                            <template slot-scope=\"scope\">\n                                <span style=\"font-size: 16px\">{{scope.row.description}}</span>\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                </template>\n            </el-table-column>\n            <el-table-column type=\"index\" label=\"#\" width=\"100\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"步骤名称\" min-width=\"20%\" sortable show-overflow-tooltip>\n                <template slot-scope=\"scope\">\n                    <span>{{scope.row.name}}</span>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"testTime\" label=\"测试时间\" min-width=\"15%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"duration\" label=\"执行时间(毫秒)\" min-width=\"15%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"result\" label=\"执行结果\" min-width=\"15%\" sortable show-overflow-tooltip>\n              <template slot-scope=\"scope\">\n                    <span v-show=\"scope.row.result==='PASS'\" style=\"color: #11b95c;\">PASS</span>\n                    <span v-show=\"scope.row.result==='FAIL'\" @click=\"handleUpdateFail(detailTable.parentResult)\" style=\"color: #cc0000;cursor:pointer;\">FAIL</span>\n                </template>\n            </el-table-column>\n        </el-table>\n        <el-table :data=\"resultTable.list\" stripe border element-loading-text=\"拼命加载中\" element-loading-spinner=\"el-icon-loading\" v-loading=\"resultTable.loading\" v-show=\"resultTable.visible\" :row-style=\"tableRowStyle\">\n            <el-table-column type=\"index\" label=\"#\" width=\"100\">\n            </el-table-column>\n            <el-table-column  prop=\"name\" label=\"名称\" min-width=\"20%\" sortable show-overflow-tooltip>\n                <template slot-scope=\"scope\">\n                    <el-icon name=\"name\"></el-icon>\n                    <router-link v-if=\"type==='case'\" :to=\"{ name: '自动化执行详情', params: {project_id: project_id,automation_id: scope.row.automation_id,trace:scope.row.trace}}\" style='text-decoration: none;'>{{ scope.row.name }}</router-link>\n                    <router-link v-if=\"type!=='case'\" :to=\"{ name: '自动化任务执行结果', params: {project_id: project_id,trace:scope.row.trace}}\" style='text-decoration: none;'>{{ scope.row.name }}</router-link>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"testTime\" label=\"测试时间\" min-width=\"15%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"env\" label=\"环境\" min-width=\"15%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"duration\" label=\"执行时间(毫秒)\" min-width=\"15%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"result\" label=\"测试结果\" min-width=\"15%\" sortable show-overflow-tooltip>\n              <template slot-scope=\"scope\">\n                    <span v-show=\"scope.row.result==='PASS'\" style=\"color: #11b95c;\">PASS</span>\n                    <span v-show=\"scope.row.result==='FAIL'\" :title=\"scope.row.failDetail\" @click=\"handleUpdateFail(scope.row)\" style=\"color: #cc0000;cursor:pointer;\">FAIL<span v-if=\"scope.row.failType\">({{failType[scope.row.failType]}}原因)</span></span>\n                </template>\n            </el-table-column>\n            <el-table-column v-if=\"type==='case'\" label=\"操作\" min-width=\"20%\">\n                <template slot-scope=\"scope\">\n                    <router-link :to=\"{ name: '自动化步骤列表', params: {automation_id: scope.row.automation_id}}\" style='text-decoration: none;'><el-button type=\"primary\" size=\"small\">查看用例</el-button></router-link>\n                </template>\n            </el-table-column>\n        </el-table>\n        <!--工具条-->\n        <el-col v-show=\"resultTable.visible\" :span=\"24\" class=\"toolbar\">\n          <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleResultPage\" :current-page.sync=\"resultTable.page\" :page-size=\"resultTable.pageSize\" :page-count=\"resultTable.pages\" :total=\"resultTable.total\" style=\"float:right;\">\n          </el-pagination>\n        </el-col>\n        <el-table :data=\"summaryTable.list\" stripe border element-loading-text=\"拼命加载中\" element-loading-spinner=\"el-icon-loading\" v-show=\"summaryTable.visible\" highlight-current-row v-loading=\"summaryTable.loading\" style=\"width: 100%;\">\n            <!--<el-table-column type=\"selection\" min-width=\"5%\">-->\n            <!--</el-table-column>-->\n            <el-table-column prop=\"automation_id\" label=\"ID\" min-width=\"5%\" sortable>\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"自动化名称\" min-width=\"20%\" sortable show-overflow-tooltip>\n                <template slot-scope=\"scope\">\n                    <el-icon name=\"name\"></el-icon>\n                    <router-link :to=\"{ name: '自动化执行结果', params: {project_id: project_id,automation_id: scope.row.automation_id}}\" style='text-decoration: none;'>{{ scope.row.name }}</router-link>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"total\" label=\"执行总数\" min-width=\"10%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"passed\" label=\"执行成功\" min-width=\"10%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"passRate\" label=\"通过率(%)\" min-width=\"10%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"duration\" label=\"执行总时间(毫秒)\" min-width=\"10%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <!--<el-table-column label=\"操作\" min-width=\"20%\">-->\n                <!--<template slot-scope=\"scope\">-->\n                    <!--<el-button type=\"primary\" size=\"small\" @click=\"viewAutomationResult('case',scope.row.automation_id)\">查看</el-button>-->\n                <!--</template>-->\n            <!--</el-table-column>-->\n        </el-table>\n        <!--工具条-->\n        <el-col v-show=\"summaryTable.visible\" :span=\"24\" class=\"toolbar\">\n          <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleSummaryPage\" :page-size=\"summaryTable.pageSize\" :current-page.sync=\"summaryTable.page\" :page-count=\"summaryTable.pages\" :total=\"summaryTable.total\" style=\"float:right;\">\n          </el-pagination>\n        </el-col>\n          <el-table :data=\"apiAutomatedTable.list\" stripe border element-loading-text=\"拼命加载中\" element-loading-spinner=\"el-icon-loading\" v-loading=\"apiAutomatedTable.loading\" v-show=\"apiAutomatedTable.visible\" :row-style=\"tableRowStyle\">\n            <el-table-column type=\"index\" label=\"#\" width=\"100\">\n            </el-table-column>\n            <el-table-column  prop=\"name\" label=\"名称\" min-width=\"20%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"num\" label=\"关联自动化数\" min-width=\"15%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"automationName\" label=\"关联自动化用例\" min-width=\"30%\" sortable show-overflow-tooltip>\n            </el-table-column>\n        </el-table>\n        <!--工具条-->\n        <el-col v-show=\"apiAutomatedTable.visible\" :span=\"24\" class=\"toolbar\">\n          <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleApiAutomatedTablePage\" :current-page.sync=\"apiAutomatedTable.page\" :page-size=\"20\" :page-count=\"apiAutomatedTable.pages\" :total=\"apiAutomatedTable.total\" style=\"float:right;\">\n          </el-pagination>\n        </el-col>\n          </el-row>\n      </el-main>\n      </el-container>\n      <el-dialog width=\"40%\" title=\"错误详情\" :visible.sync=\"failForm.visible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"failForm.data\"  :rules=\"failForm.rules\" ref=\"failForm\" label-width=\"80px\">\n                <el-form-item label=\"类型\" label-width=\"83px\" prop=\"type\">\n                    <el-select v-model=\"failForm.data.type\" placeholder=\"类型\">\n                        <el-option v-for=\"(item,key) in failType\" :label=\"item\" :value=\"key\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"严重等级\" label-width=\"83px\" prop=\"severity\">\n                    <el-select v-model=\"failForm.data.severity\" placeholder=\"严重等级\">\n                        <el-option v-for=\"(item,index) in severity\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"根源\" prop='cause'>\n                    <el-input type=\"textarea\" :rows=\"2\" v-model.trim=\"failForm.data.cause\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"详情\" prop='detail'>\n                    <el-input type=\"textarea\" :rows=\"2\" v-model.trim=\"failForm.data.detail\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"关联缺陷\" prop='bug'>\n                    <el-input type=\"input\" v-model.trim=\"failForm.data.bug\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"failForm.visible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"updateFailSubmit\" :loading=\"failForm.loading\">提交</el-button>\n            </div>\n        </el-dialog>\n    </div>\n    </section>\n</template>\n\n<script>\n    import { test } from '../../../api/api'\n    import $ from 'jquery'\n    import axios from 'axios'\n    export default {\n        name: \"automation-report\",\n        data(){\n            return {\n                project_id: this.$route.params.project_id,\n                automation_id: this.$route.params.automation_id,\n                type: \"autoChart\",\n                global: false,\n                report: {\n                    visible: false,\n                    data: {},\n                },\n                filters: {\n                    name: \"\",\n                    testtime: this.defaultDate(),\n                    start_time: \"\",\n                    end_time: \"\",\n                    project: \"\",\n                },\n                projectlist: [],\n                listType: [{value: 'autoChart', label: '用例执行统计'},\n                    {value: 'apiChart', label: '接口执行统计'},\n                    {value: 'publish', label: '发布项目统计'},\n                    {value: 'case', label: '用例执行情况'},\n                    {value: 'task', label: '任务执行情况'},\n                    {value: 'apiAutomated', label: '接口覆盖统计'},\n                    {value: 'dynamicChart', label: '项目动态统计'},\n                ],\n                summaryTable:{\n                    loading: false,\n                    visible: false,\n                    list: [],\n                    page: 1,\n                    pages: 0,\n                    total: 0,\n                    pageSize: 20,\n                },\n                resultTable:{\n                    loading: false,\n                    visible: false,\n                    list: [],\n                    page: 1,\n                    pages: 0,\n                    total: 0,\n                    pageSize:20,\n                },\n                detailTable:{\n                    loading: false,\n                    visible: false,\n                    list: [],\n                    parentResult: null,\n                },\n                apiAutomatedTable:{\n                    loading: false,\n                    visible: false,\n                    list: [],\n                    page: 1,\n                    pages: 0,\n                    total: 0,\n                },\n                stepTable:{\n                    visible: false,\n                    list: [],\n                    name: \"\"\n                },\n                autoChart:{\n                    visible: false,\n                },\n                publishChart:{\n                    visible: false,\n                },\n                failChart:{\n                    visible: false,\n                },\n                failType: {'code':'编码','env':'环境','data':'数据','other':'其他'},\n                severity: [{value: 'fatal', label: '致命的'},\n                     {value: 'critical', label: '严重的'},\n                    {value: 'major', label: '一般的'},\n                    {value: 'minor', label: '微小的'},\n                ],\n                failForm: {\n                    visible: false,\n                    loading: false,\n                    data:{\n                        id: \"\",\n                        type: \"code\",\n                        severity: \"major\",\n                        cause: \"\",\n                        detail: \"\",\n                        bug: \"\",\n                    },\n                    row: null,\n                    rules: {\n                        type: [\n                            { required: true, message: '请选择类型', trigger: 'blur'}\n                        ],\n                        severity: [\n                            { required: true, message: '请选择严重等级', trigger: 'blur'}\n                        ],\n                        cause: [\n                            { required: true, message: '请输入根源', trigger: 'blur' },\n                            { max: 256, message: '不能超过256个字符', trigger: 'blur' }\n                        ],\n                        detail: [\n                            { required: true, message: '请输入详情', trigger: 'blur' },\n                            { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                        ],\n                        bug: [\n                            { max: 50, message: '不能超过50个字符', trigger: 'blur' }\n                        ],\n                    },\n                },\n                pickerOptions: {\n                  shortcuts: [{\n                    text: '今天',\n                    onClick(picker) {\n                      const end = new Date();\n                      const start = new Date();\n                      picker.$emit('pick', [start, end])\n                    }\n                  },{\n                    text: '昨天',\n                    onClick(picker) {\n                      const end=new Date();\n                      end.setDate(end.getDate() - 1);\n                      const start=new Date();\n                      start.setDate(start.getDate() - 1);\n                      picker.$emit('pick', [start, end])\n                    }\n                  },{\n                    text: '本周',\n                    onClick(picker) {\n                      const end = new Date();\n                      const weekday = end.getDay() || 7;\n                      const start = new Date();\n                      start.setDate(start.getDate() - weekday + 1);\n                      picker.$emit('pick', [start, end]);\n                    }\n                  },{\n                    text: '上周',\n                    onClick(picker) {\n                      const end = new Date();\n                      const weekday = end.getDay() || 7;\n                      end.setDate(end.getDate() - weekday);\n                      const start = new Date();\n                      start.setDate(end.getDate() - 6);\n                      picker.$emit('pick', [start, end])\n                    }\n                  },{\n                    text: '最近一周',\n                    onClick(picker) {\n                      const end = new Date();\n                      const start = new Date();\n                      start.setDate(start.getDate() - 6);\n                      picker.$emit('pick', [start, end]);\n                    }\n                  },{\n                    text: '本月',\n                    onClick(picker) {\n                      const end = new Date();\n                      const start = new Date();\n                      start.setDate(1);\n                      picker.$emit('pick', [start, end])\n                    }\n                  },{\n                    text: '最近一个月',\n                    onClick(picker) {\n                      const end = new Date();\n                      const start = new Date();\n                      start.setTime(start.getTime() - 3600 * 1000 * 24 * 29);\n                      picker.$emit('pick', [start, end]);\n                    }\n                  }, {\n                    text: '最近三个月',\n                    onClick(picker) {\n                      const end = new Date();\n                      const start = new Date();\n                      start.setTime(start.getTime() - 3600 * 1000 * 24 * 89);\n                      picker.$emit('pick', [start, end]);\n                    }\n                  },{\n                    text: '今年',\n                    onClick(picker) {\n                      const end = new Date();\n                      const start = new Date();\n                      start.setMonth(0);\n                      start.setDate(1);\n                      picker.$emit('pick', [start, end]);\n                    }\n                  }]\n                },\n            }\n        },\n        methods: {\n            tableRowStyle(row) {\n                if (row.result === 'ERROR' || row.result === 'FAIL') {\n                    return \"background-color: #DC143C;\"\n                } else if(row.result === 'TimeOut'){\n                    return \"background-color: #FFE4C4;\"\n                }\n              },\n            filterHandler(value, row, column) {\n                return row.result === value;\n            },\n            handleSearch(type){\n                this.apiAutomatedTable.visible=false;\n                this.publishChart.visible=false;\n                if(type==\"case\"){\n                    this.summaryTable.page=1;\n                    this.autoChart.visible=false;\n                    this.failChart.visible=false;\n                    this.viewAutomationSummary();\n                }else if(type==\"autoChart\"){\n                    this.autoChart.visible=true;\n                    this.failChart.visible=true;\n                    this.viewAutomationChart();\n                    this.viewAutomationSummary();\n                }else if(type==\"apiChart\"){\n                    this.autoChart.visible=true;\n                    this.failChart.visible=false;\n                    this.viewApiChart();\n                }else if(type==\"dynamicChart\"){\n                    this.autoChart.visible=true;\n                    this.failChart.visible=false;\n                    this.viewDynamicChart();\n                }else if(type==\"publish\"){\n                    this.resultTable.page=1;\n                    this.autoChart.visible=true;\n                    this.publishChart.visible=true;\n                    this.failChart.visible=false;\n                    this.viewPublishChart();\n                    this.viewAutomationResult(type,\"\");\n                }else if(type==\"task\"){\n                    this.resultTable.page=1;\n                    this.autoChart.visible=false;\n                    this.failChart.visible=false;\n                    this.viewAutomationResult(type,\"\");\n                }else if(type==\"apiAutomated\"){\n                    this.apiAutomatedTable.page=1;\n                    this.autoChart.visible=false;\n                    this.failChart.visible=false;\n                    this.viewApiAutomated();\n                }\n            },\n            viewAutomationSummary() {\n                if(this.filters.testtime!=\"\"&&this.filters.testtime!=null){\n                    this.filters.start_time=this.filters.testtime[0];\n                    this.filters.end_time=this.filters.testtime[1];\n                }else{\n                    this.filters.start_time=\"\";\n                    this.filters.end_time=\"\";\n                }\n                this.summaryTable.visible=true;\n                this.resultTable.visible=false;\n                this.detailTable.visible=false;\n                this.summaryTable.loading = true;\n                let self = this;\n                let param={\n                        project_id: this.project_id,\n                        name: this.filters.name,\n                        start_time: this.filters.start_time,\n                        end_time: this.filters.end_time,\n                        page: self.summaryTable.page\n                    };\n                if(this.filters.start_time!=\"\"&&this.filters.end_time!=\"\"){\n                    self.summaryTable.pageSize=500;\n                    param[\"page_size\"]=self.summaryTable.pageSize;\n                }else{\n                    self.summaryTable.pageSize=20;\n                    param[\"page_size\"]=self.summaryTable.pageSize;\n                }\n                axios.get(test + \"/api/report/automation_summary\",{params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    self.summaryTable.loading = false;\n                    if (data.code === '999999') {\n//                            alert(data.data.data);\n                        self.summaryTable.total = data.data.total;\n                        self.summaryTable.pages = data.data.pages;\n                        self.summaryTable.list = [];\n//                            alert(data.data.data);\n                        data.data.data.forEach((item) =>{\n                            item[\"passRate\"]=parseFloat((item[\"passed\"]*100/item[\"total\"]).toFixed(1));\n                            self.summaryTable.list.push(item);\n                        })\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            viewAutomationChart() {\n                if(this.filters.testtime!=\"\"&&this.filters.testtime!=null){\n                    this.filters.start_time=this.filters.testtime[0];\n                    this.filters.end_time=this.filters.testtime[1];\n                }else{\n                    this.filters.start_time=\"\";\n                    this.filters.end_time=\"\";\n                }\n                let self = this;\n                let param={\n                        project_id: this.project_id,\n                        start_time: this.filters.start_time,\n                        end_time: this.filters.end_time\n                    };\n                axios.get(test + \"/api/report/automation_chart\",{params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === '999999') {\n                        this.autoChart.visible=true;\n                        this.drawbar(data.data.autoChart, \"autoChart\",\"用例执行统计\",\"bar\");\n                        if(data.data.failTypeChart.line_name.length>0){\n                            this.failChart.visible=true;\n                            this.drawpie(data.data.failTypeChart, \"failTypeChart\",\"失败类型\");\n                            this.drawpie(data.data.failSeverityChart, \"failSeverityChart\",\"失败严重等级\");\n                        }else{\n                            this.failChart.visible=false;\n                        }\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            viewPublishChart() {\n                if(this.filters.testtime!=\"\"&&this.filters.testtime!=null){\n                    this.filters.start_time=this.filters.testtime[0];\n                    this.filters.end_time=this.filters.testtime[1];\n                }else{\n                    this.filters.start_time=\"\";\n                    this.filters.end_time=\"\";\n                }\n                this.summaryTable.visible=false;\n                this.resultTable.visible=false;\n                this.detailTable.visible=false;\n                this.summaryTable.loading = true;\n                let self = this;\n                let param={\n                        project_id: this.project_id,\n                        start_time: this.filters.start_time,\n                        end_time: this.filters.end_time\n                    };\n                axios.get(test + \"/api/report/publish_chart\",{params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === '999999') {\n                        this.autoChart.visible=true;\n                        this.drawbar(data.data.publish_chart, \"autoChart\",\"发布项目统计-按日期\",\"bar\");\n                        this.publishChart.visible=true;\n                        this.drawpie(data.data.publish_pie, \"publishChart\",\"发布项目\");\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            viewApiChart() {\n                if(this.filters.testtime!=\"\"&&this.filters.testtime!=null){\n                    this.filters.start_time=this.filters.testtime[0];\n                    this.filters.end_time=this.filters.testtime[1];\n                }else{\n                    this.filters.start_time=\"\";\n                    this.filters.end_time=\"\";\n                }\n                this.summaryTable.visible=false;\n                this.resultTable.visible=false;\n                this.detailTable.visible=false;\n                this.summaryTable.loading = true;\n                let self = this;\n                let param={\n                        project_id: this.project_id,\n                        start_time: this.filters.start_time,\n                        end_time: this.filters.end_time\n                    };\n                axios.get(test + \"/api/report/api_chart\",{params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === '999999') {\n                        this.autoChart.visible=true;\n                        this.drawbar1(data.data, \"autoChart\",\"接口执行统计\",\"bar\");\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            viewDynamicChart() {\n                if(this.filters.testtime!=\"\"&&this.filters.testtime!=null){\n                    this.filters.start_time=this.filters.testtime[0];\n                    this.filters.end_time=this.filters.testtime[1];\n                }else{\n                    this.filters.start_time=\"\";\n                    this.filters.end_time=\"\";\n                }\n                this.summaryTable.visible=false;\n                this.resultTable.visible=false;\n                this.detailTable.visible=false;\n                this.summaryTable.loading = true;\n                let self = this;\n                let param={\n                        project_id: this.project_id,\n                        start_time: this.filters.start_time,\n                        end_time: this.filters.end_time\n                    };\n                axios.get(test + \"/api/report/dynamic_chart\",{params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === '999999') {\n                        this.autoChart.visible=true;\n                        this.drawbar1(data.data, \"autoChart\",\"项目动态统计\",\"bar\");\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            drawbar(test_bar_data, chartid,title,type) {\n                let echartBar = this.$echarts.init(document.getElementById(chartid));\n                echartBar.clear();\n                var option = {\n                    title: {\n                        text: title\n                    },\n                    tooltip : {\n                        trigger: 'axis'\n                    },\n                    toolbox: {\n                        show : true,\n                        feature : {\n                            mark : {show: true},\n                            dataView : {show: true, readOnly: false},\n                            magicType : {show: true, type: ['line', 'bar']},\n                            restore : {show: true},\n                            saveAsImage : {show: true}\n                        }\n                    },\n                    calculable : true,\n                    legend: {\n                        data:['执行数','通过率']\n                    },\n                    xAxis : [\n                        {\n                            type : 'category',\n                            data: test_bar_data.line_name,\n                            axisLabel: {\n                                interval: 0,\n                                rotate: 30,\n                            },\n                            axisPointer: {\n                                type: 'shadow'\n                            }\n                        }\n                    ],\n                    yAxis : [\n                        {\n                            type : 'value',\n                            name : '执行数'\n                        },\n                        {\n                            type : 'value',\n                            name : '通过率',\n                            min: 0,\n                            max: 100,\n                            interval: 20,\n                            axisLabel: {\n                                formatter: '{value}%'\n                            }\n                        }\n                    ],\n                    series : [\n                        {\n                            name: '执行数',\n                            type: type,\n                            itemStyle: {\n                                normal: {\n//                                    color:'#7cb5ec',\n                                    label : {\n                                        show: true, position: 'top'\n                                    }\n                                }\n                            },\n                            data: test_bar_data.line_x\n                        },\n                        {\n                            name: '通过率',\n                            type: 'line',\n                            smooth: true,\n                            yAxisIndex: 1,\n                            itemStyle: {\n                                normal: {\n                                    color:'#26B99A',\n                                    label : {\n                                        show: true, position: 'top'\n                                    }\n                                }\n                            },\n                            data: test_bar_data.line_x1\n                        }\n                    ]\n                };\n                echartBar.setOption(option);\n            },\n            drawbar1(test_bar_data, chartid,title,type) {\n                let echartBar = this.$echarts.init(document.getElementById(chartid));\n                echartBar.clear();\n                var option = {\n                    title: {\n                        text: title\n                    },\n                    tooltip : {\n                        trigger: 'axis'\n                    },\n                    toolbox: {\n                        show : true,\n                        feature : {\n                            mark : {show: true},\n                            dataView : {show: true, readOnly: false},\n                            magicType : {show: true, type: ['line', 'bar']},\n                            restore : {show: true},\n                            saveAsImage : {show: true}\n                        }\n                    },\n                    calculable : true,\n                    legend: {\n                        data:['执行数']\n                    },\n                    xAxis : [\n                        {\n                            type : 'category',\n                            data: test_bar_data.line_name,\n                            axisLabel: {\n                                interval: 0,\n                                rotate: 30,\n                            },\n                            axisPointer: {\n                                type: 'shadow'\n                            }\n                        }\n                    ],\n                    yAxis : [\n                        {\n                            type : 'value',\n                            name : '执行数'\n                        }\n                    ],\n                    series : [\n                        {\n                            name: '执行数',\n                            type: type,\n                            itemStyle: {\n                                normal: {\n                                    color:'#7cb5ec',\n                                    label : {\n                                        show: true, position: 'top'\n                                    }\n                                }\n                            },\n                            data: test_bar_data.line_x\n                        }\n                    ]\n                };\n                echartBar.setOption(option);\n            },\n            drawpie(data, chartid,title) {\n                let echartBar = this.$echarts.init(document.getElementById(chartid));\n                echartBar.clear();\n                var option = {\n                    title: {\n                        text: title + \"统计\",\n                    },\n                    tooltip: {\n                        trigger: 'item',\n                        formatter: '{a} <br/>{b} : {c} ({d}%)'\n                    },\n                    legend: {\n                        left: 'center',\n                        data: data.line_name,\n                    },\n                    series: [\n                        {\n                            name: title,\n                            type: 'pie',\n                            radius: '55%',\n                            center: ['50%', '60%'],\n                            data: data.line_data,\n                            label: {\n                                formatter: '{b} : {c} ({d}%)'\n                            },\n                            emphasis: {\n                                itemStyle: {\n                                    shadowBlur: 10,\n                                    shadowOffsetX: 0,\n                                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                                }\n                            }\n                        }\n                    ]\n                };\n                echartBar.setOption(option);\n            },\n            viewApiAutomated() {\n                this.summaryTable.visible=false;\n                this.resultTable.visible=false;\n                this.detailTable.visible=false;\n                this.apiAutomatedTable.visible=true;\n                this.apiAutomatedTable.loading=true;\n                let param={\n                    project_id: this.project_id,\n                    page: this.apiAutomatedTable.page,\n                };\n                let url=test + \"/api/report/apiautomatedcoverage\";\n                let self=this;\n                axios.get(url,{params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    self.apiAutomatedTable.loading = false;\n                    if (data.code === '999999') {\n                        self.apiAutomatedTable.list = data.data.data;\n                        self.apiAutomatedTable.pages=data.data.pages;\n                        self.apiAutomatedTable.total=data.data.total;\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            viewAutomationResult(type,automationId) {\n                this.type=type;\n                if(this.filters.testtime!=\"\"&&this.filters.testtime!=null){\n                    this.filters.start_time=this.filters.testtime[0];\n                    this.filters.end_time=this.filters.testtime[1];\n                }else{\n                    this.filters.start_time=\"\";\n                    this.filters.end_time=\"\";\n                }\n                this.summaryTable.visible=false;\n                this.resultTable.visible=true;\n                this.detailTable.visible=false;\n                this.resultTable.loading=true;\n                let param={\n                    project_id: this.project_id,\n                    start_time: this.filters.start_time,\n                    end_time: this.filters.end_time,\n                    page: this.resultTable.page,\n                    type: this.type,\n                };\n                let url=test + \"/api/report/automation_result\";\n                if(this.type==\"case\"){\n                    if(automationId!=\"\"){\n                        param[\"automation_id\"]=automationId;\n                        this.automation_id=automationId;\n                    }else if(this.$route.params.trace){\n                        param[\"trace\"]=this.$route.params.trace;\n                    }else{\n                        param[\"automation_id\"]=automationId;\n                        this.automation_id=param[\"automation_id\"]\n                    }\n                }else{\n                    url=test + \"/api/report/automations_result\";\n                }\n                let self=this;\n                axios.get(url,{params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    self.resultTable.loading = false;\n                    if (data.code === '999999') {\n                        self.resultTable.list = data.data.data;\n                        self.resultTable.pages=data.data.pages;\n                        self.resultTable.total=data.data.total;\n                        self.resultTable.pageSize=data.data.page_size;\n                        if(data.data.report){\n                            self.report.visible=true;\n                            self.report.data=data.data.report;\n                        }\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            viewAutomationDetail(id,trace) {\n                this.summaryTable.visible=false;\n                this.resultTable.visible=false;\n                this.detailTable.visible=true;\n                this.detailTable.loading=true;\n                let self=this;\n                let param={\n                        automation_id: id,\n                        trace: trace\n                    };\n                axios.get(test + \"/api/report/automation_detail\",{params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    self.detailTable.loading = false;\n                    if (data.code === '999999') {\n                        self.detailTable.list = data.data.results;\n                        self.detailTable.parentResult=data.data.parentResult;\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            // 翻页\n            handleSummaryPage(val) {\n                this.summaryTable.page = val;\n                this.viewAutomationSummary();\n            },\n            // 翻页\n            handleApiAutomatedTablePage(val) {\n                this.apiAutomatedTable.page = val;\n                this.viewApiAutomated();\n            },\n            handleResultPage(val) {\n                this.resultTable.page = val;\n                if(this.$route.params.automation_id){\n                    this.viewAutomationResult(this.type,this.$route.params.automation_id);\n                }else{\n                    this.viewAutomationResult(this.type,\"\");\n                }\n            },\n            defaultDate(){\n                //获取新的时间(2019.4.12）\n                let date = new Date();\n                //获取当前时间的年份转为字符串\n                let year = date.getFullYear().toString();   //'2019'\n                //获取月份，由于月份从0开始，此处要加1，判断是否小于10，如果是在字符串前面拼接'0'\n                let month = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1).toString() : (date.getMonth() + 1).toString();  //'04'\n                //获取天，判断是否小于10，如果是在字符串前面拼接'0'\n                let da = date.getDate() < 10 ? '0' + date.getDate().toString() : date.getDate().toString();  //'12'\n                //字符串拼接，开始时间，结束时间\n                let end = year + '-' + month + '-' + da;  //当天'2019-04-12'\n                let beg = year + '-' + month + '-01';    //当月第一天'2019-04-01'\n                return [beg, end]; //将值设置给插件绑定的数据\n            },\n            handleUpdateFail(row){\n                this.failForm.visible=true;\n                this.failForm.data={id:row.id,type:row.failType,severity:row.failSeverity,cause:row.failCause,detail:row.failDetail,bug:row.failBug};\n                this.failForm.row=row;\n            },\n            updateFailSubmit() {\n                this.$refs.failForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            let self = this;\n                            let param=JSON.stringify({\n                                    project_id: this.$route.params.project_id,\n                                    result_id: this.failForm.data.id,\n                                    type: this.failForm.data.type,\n                                    severity: this.failForm.data.severity,\n                                    cause: this.failForm.data.cause,\n                                    detail: this.failForm.data.detail,\n                                    bug: this.failForm.data.bug,\n                                });\n                            axios.post(test + \"/api/report/updateresultfaildetail\",param,{headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                                let data=response.data;\n                                if (response.data.code === '999999') {\n                                    self.failForm.visible=false;\n                                    self.failForm.row.failType=this.failForm.data.type;\n                                    self.failForm.row.failSeverity=this.failForm.data.severity;\n                                    self.failForm.row.failCause=this.failForm.data.cause;\n                                    self.failForm.row.failDetail=this.failForm.data.detail;\n                                    self.failForm.row.failBug=this.failForm.data.bug;\n                                    self.$message({\n                                        message: '更新成功',\n                                        center: true,\n                                        type: 'success'\n                                    })\n                                } else {\n                                    self.$message.error({\n                                        message: response.data.msg,\n                                        center: true,\n                                    })\n                                }\n                            }).catch(error=>{});\n                        }).catch(() => {});\n                    }\n                });\n            },\n            // 获取项目列表\n            getProjectList() {\n                this.listLoading = true;\n                let self = this;\n                let params = { page: 1, page_size: 100, status: true};\n                let headers = {Authorization: 'Token '+sessionStorage.getItem('token')};\n                axios.get(`${test}/api/project/project_list`, { params: params, headers:headers}).then((res) => {\n                    let { msg, code, data } = res.data;\n                    if (code === '999999') {\n                        self.projectlist = data.data;\n                    }else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            init(){\n                this.autoChart.visible=false;\n                this.failChart.visible=false;\n                if(this.$route.params.project_id){\n                    this.project_id=this.$route.params.project_id;\n                    this.global=false;\n                }else{\n                    this.global=true;\n                    this.getProjectList();\n                }\n                if(this.$route.params.automation_id){\n                    this.automation_id=this.$route.params.automation_id;\n                    if(!this.$route.params.trace){\n                        this.viewAutomationResult('case',this.automation_id);\n                    }else{\n                        this.viewAutomationDetail(this.$route.params.automation_id,this.$route.params.trace);\n                    }\n                }else if(this.$route.params.trace){\n                    this.viewAutomationResult('case',\"\");\n                }\n            }\n        },\n        mounted() {\n            this.init();\n        },\n        watch: {\n            '$route' (to, from) { //监听路由是否变化\n              if(to.query!= from.query){\n                this.init();//重新加载数据\n              }\n            }\n        },\n    }\n</script>\n\n<style scoped>\n    .number-pass {\n        border-radius: 25px;\n        position: absolute;\n        height: 100px;\n        box-sizing: border-box;\n        color: #fff;\n        font-size: 25px;\n        text-align: center;\n        width: 100px;\n        top: -70px;\n        right: 350px;\n    }\n    .number-fail {\n        border-radius: 25px;\n        border: 1px solid #C4C4C4;\n        position: absolute;\n        height: 100px;\n        box-sizing: border-box;\n        /*color: #fff;*/\n        font-size: 25px;\n        text-align: center;\n        width: 100px;\n        top: -70px;\n        right: 240px;\n    }\n    .number-error {\n        border-radius: 25px;\n        position: absolute;\n        height: 100px;\n        box-sizing: border-box;\n        color: #fff;\n        font-size: 25px;\n        text-align: center;\n        width: 100px;\n        top: -70px;\n        right: 130px;\n    }\n    .number-total {\n        border-radius: 25px;\n        border: 1px solid #C4C4C4;\n        position: absolute;\n        height: 100px;\n        box-sizing: border-box;\n        /*color: #fff;*/\n        font-size: 25px;\n        text-align: center;\n        width: 100px;\n        top: -70px;\n        right: 20px;\n    }\n    .demo-table-expand {\n        font-size: 0;\n      }\n      .demo-table-expand label {\n          width: 90px;\n          color: #99a9bf;\n      }\n      .demo-table-expand .el-form-item {\n          margin-right: 0;\n          margin-bottom: 0;\n          width: 50%;\n      }\n    .return-list {\n        margin-top: 0px;\n        margin-bottom: 10px;\n        border-radius: 25px;\n    }\n</style>\n"],"sourceRoot":"src/views/project/auto"}]}