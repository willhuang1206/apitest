{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectMember.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectMember.vue","mtime":1588749633794},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { test } from \"../../api/api\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      groups: [{\n        value: '1',\n        label: '管理员'\n      }, {\n        value: '2',\n        label: '测试经理'\n      }, {\n        value: '3',\n        label: '测试成员'\n      }, {\n        value: '4',\n        label: '项目成员'\n      }, {\n        value: '0',\n        label: '无权限'\n      }],\n      memberData: [],\n      total: 0,\n      page: 1,\n      pages: 0,\n      listLoading: false,\n      reportFrom: \"\",\n      editFormVisible: false,\n      //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        reportFrom: [{\n          required: true,\n          message: '请输入发送人',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        mailUser: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        mailPass: [{\n          required: true,\n          message: '请输入口令',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        mailSmtp: [{\n          required: false,\n          message: '请输入邮件服务器',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }]\n      },\n      //编辑界面数据\n      editForm: {},\n      users: {\n        visible: false,\n        loading: false,\n        list: [],\n        total: 0,\n        selUsers: [],\n        page: 1,\n        pages: 0\n      }\n    };\n  },\n  methods: {\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getProjectMember();\n    },\n    // 获取成员列表\n    getProjectMember: function getProjectMember() {\n      this.listLoading = true;\n      var self = this;\n      var params = {\n        project_id: this.$route.params.project_id,\n        page: self.page\n      };\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get(\"\".concat(test, \"/api/member/project_member\"), {\n        params: params,\n        headers: headers\n      }).then(function (res) {\n        var _res$data = res.data,\n            msg = _res$data.msg,\n            code = _res$data.code,\n            data = _res$data.data;\n        self.listLoading = false;\n\n        if (code === '999999') {\n          self.total = data.total;\n          self.pages = data.pages;\n          self.memberData = data.data;\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    },\n    handleCurrentChangeUser: function handleCurrentChangeUser(val) {\n      this.users.page = val;\n      this.getGlobalUser();\n    },\n    getGlobalUser: function getGlobalUser() {\n      this.users.loading = true;\n      var self = this;\n      var params = {\n        page: self.users.page\n      };\n      var headers = {\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get(test + \"/api/global/user_list\", {\n        params: params\n      }).then(function (response) {\n        self.users.loading = false;\n\n        if (response.data.code === '999999') {\n          self.users.total = response.data.data.total;\n          self.users.pages = response.data.data.pages;\n          self.users.list = [];\n          response.data.data.data.forEach(function (item) {\n            self.users.list.push(item);\n          });\n        } else {\n          self.$message.error({\n            message: response.data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    //显示新增界面\n    handleUpdate: function handleUpdate() {\n      this.users.visible = true;\n    },\n    selUsersChange: function selUsersChange(sels) {\n      this.users.selUsers = sels;\n    },\n    updateUsersSubmit: function updateUsersSubmit() {\n      var _this = this;\n\n      var ids = this.users.selUsers.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认更新选中的用户吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.users.loading = true; //NProgress.start();\n\n        var params = JSON.stringify({\n          project_id: _this.$route.params.project_id,\n          group: self.users.group,\n          ids: ids\n        });\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(test + \"/api/member/update\", params, {\n          headers: headers\n        }).then(function (response) {\n          self.users.loading = false;\n\n          if (response.data.code === '999999') {\n            self.$message({\n              message: '更新成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: response.data.msg,\n              center: true\n            });\n          }\n\n          self.users.visible = false;\n          self.getProjectMember();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    }\n  },\n  mounted: function mounted() {\n    this.getProjectMember();\n    this.getGlobalUser();\n  }\n};",{"version":3,"sources":["projectMember.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <!--列表-->\n    <el-row class=\"member-manage\">\n        <p style=\"color:#999\"><strong>项目成员</strong></p>\n\n        <el-dialog width=\"50%\" title=\"更新成员权限\" :visible.sync=\"users.visible\" :close-on-click-modal=\"false\" >\n            <el-select filterable v-model=\"users.group\" placeholder=\"请选择权限\">\n                <el-option v-for=\"(item,index) in groups\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\">\n                </el-option>\n            </el-select>\n            <el-row :gutter=\"10\">\n                <el-col :span=\"18\">\n                    <el-table :data=\"users.list\" highlight-current-row v-loading=\"users.loading\"\n                              style=\"width: 100%;\" :show-header=\"true\" max-height=\"400\" @selection-change=\"selUsersChange\">\n                        <el-table-column type=\"selection\" width=\"55\">\n                        </el-table-column>\n                        <el-table-column prop=\"id\" label=\"ID\" min-width=\"10%\">\n                        </el-table-column>\n                        <el-table-column prop=\"username\" label=\"用户名\" min-width=\"20%\">\n                        </el-table-column>\n                        <el-table-column prop=\"name\" label=\"姓名\" min-width=\"20%\">\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n            <el-col :span=\"24\" class=\"toolbar\">\n                <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChangeUser\" :current-page.sync=\"users.page\" :total=\"users.total\" :page-size=\"20\" :page-count=\"users.pages\" style=\"float:right;\">\n                </el-pagination>\n            </el-col>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"users.visible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"updateUsersSubmit\" :loading=\"users.loading\">提交</el-button>\n            </div>\n        </el-dialog>\n\n        <el-col :span=\"24\">\n            <el-table :data=\"memberData\" highlight-current-row v-loading=\"listLoading\" style=\"width: 100%;\">\n                <el-table-column prop=\"username\" label=\"姓名\" min-width=\"30%\">\n                </el-table-column>\n                <el-table-column prop=\"group\" label=\"权限\" min-width=\"30%\">\n                </el-table-column>\n                <el-table-column prop=\"userPhone\" label=\"手机号\" min-width=\"20%\">\n                </el-table-column>\n                <el-table-column prop=\"userEmail\" label=\"邮箱地址\" min-width=\"20%\">\n                </el-table-column>\n            </el-table>\n            <!--工具条-->\n            <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChange\" :current-page.sync=\"page\" :total=\"total\" :page-size=\"20\" :page-count=\"pages\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px;\">\n            <el-form :inline=\"true\" @submit.native.prevent>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"handleUpdate\">更新</el-button>\n                </el-form-item>\n            </el-form>\n        </el-col>\n    </el-row>\n</template>\n\n<script>\n    import { test} from \"../../api/api\";\n    import axios from 'axios';\n    export default {\n        data() {\n            return {\n                groups: [{value: '1', label: '管理员'},\n                    {value: '2', label: '测试经理'},\n                    {value: '3', label: '测试成员'},\n                    {value: '4', label: '项目成员'},\n                    {value: '0', label: '无权限'}],\n                memberData: [],\n                total: 0,\n                page: 1,\n                pages: 0,\n                listLoading: false,\n                reportFrom: \"\",\n                editFormVisible: false,//编辑界面是否显示\n                editLoading: false,\n                editFormRules: {\n                    reportFrom: [\n                        { required: true, message: '请输入发送人', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ],\n                    mailUser: [\n                        { required: true, message: '请输入用户名', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ],\n                    mailPass: [\n                        { required: true, message: '请输入口令', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ],\n                    mailSmtp: [\n                        { required: false, message: '请输入邮件服务器', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ]\n                },\n                //编辑界面数据\n                editForm: {\n                },\n                users: {\n                    visible: false,\n                    loading: false,\n                    list: [],\n                    total: 0,\n                    selUsers: [],\n                    page: 1,\n                    pages: 0\n                },\n            }\n        },\n        methods: {\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getProjectMember();\n            },\n            // 获取成员列表\n            getProjectMember() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    project_id: this.$route.params.project_id,\n                    page: self.page\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(`${test}/api/member/project_member`, { params: params, headers:headers}).then(res => {\n                    let {msg, code, data} = res.data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        self.total = data.total;\n                        self.pages=data.pages;\n                        self.memberData = data.data\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            handleCurrentChangeUser(val) {\n                this.users.page = val;\n                this.getGlobalUser();\n            },\n            getGlobalUser() {\n                this.users.loading = true;\n                let self = this;\n                let params = {\n                    page: self.users.page,\n                };\n                let headers = {\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(test+\"/api/global/user_list\", { params: params}).then(response => {\n                    self.users.loading = false;\n                    if (response.data.code === '999999') {\n                        self.users.total = response.data.data.total;\n                        self.users.pages = response.data.data.pages;\n                        self.users.list=[];\n                        response.data.data.data.forEach((item) =>{\n                            self.users.list.push(item);\n                        });\n                    }\n                    else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            //显示新增界面\n            handleUpdate: function () {\n                this.users.visible = true;\n            },\n            selUsersChange(sels){\n                this.users.selUsers = sels;\n            },\n            updateUsersSubmit: function () {\n                let ids = this.users.selUsers.map(item => item.id);\n                let self = this;\n                this.$confirm('确认更新选中的用户吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.users.loading = true;\n                    //NProgress.start();\n                    let params=JSON.stringify({\n                        project_id: this.$route.params.project_id,\n                        group: self.users.group,\n                        ids: ids\n                    });\n                    let headers={\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                    axios.post(test+\"/api/member/update\", params,{headers:headers}).then(response => {\n                        self.users.loading = false;\n                        if (response.data.code === '999999') {\n                            self.$message({\n                                message: '更新成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        }else {\n                            self.$message.error({\n                                message: response.data.msg,\n                                center: true,\n                            })\n                        }\n                        self.users.visible = false;\n                        self.getProjectMember();\n                    }).catch(error=>{\n                    });\n                }).catch(() => {\n\n                });\n            }\n        },\n        mounted() {\n            this.getProjectMember();\n            this.getGlobalUser();\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .member-manage {\n        margin: 35px;\n    }\n</style>\n"],"sourceRoot":"src/views/project"}]}