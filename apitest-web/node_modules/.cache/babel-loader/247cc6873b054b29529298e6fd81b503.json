{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/src/components/Charts/mixins/resize.js","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/components/Charts/mixins/resize.js","mtime":1587528109402},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { debounce } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      $_sidebarElm: null,\n      $_resizeHandler: null\n    };\n  },\n  mounted: function mounted() {\n    this.initListener();\n  },\n  activated: function activated() {\n    if (!this.$_resizeHandler) {\n      // avoid duplication init\n      this.initListener();\n    } // when keep-alive chart activated, auto resize\n\n\n    this.resize();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.destroyListener();\n  },\n  deactivated: function deactivated() {\n    this.destroyListener();\n  },\n  methods: {\n    // use $_ for mixins properties\n    // https://vuejs.org/v2/style-guide/index.html#Private-property-names-essential\n    $_sidebarResizeHandler: function $_sidebarResizeHandler(e) {\n      if (e.propertyName === 'width') {\n        this.$_resizeHandler();\n      }\n    },\n    initListener: function initListener() {\n      var _this = this;\n\n      this.$_resizeHandler = debounce(function () {\n        _this.resize();\n      }, 100);\n      window.addEventListener('resize', this.$_resizeHandler);\n      this.$_sidebarElm = document.getElementsByClassName('sidebar-container')[0];\n      this.$_sidebarElm && this.$_sidebarElm.addEventListener('transitionend', this.$_sidebarResizeHandler);\n    },\n    destroyListener: function destroyListener() {\n      window.removeEventListener('resize', this.$_resizeHandler);\n      this.$_resizeHandler = null;\n      this.$_sidebarElm && this.$_sidebarElm.removeEventListener('transitionend', this.$_sidebarResizeHandler);\n    },\n    resize: function resize() {\n      var chart = this.chart;\n      chart && chart.resize();\n    }\n  }\n};",{"version":3,"sources":["/Users/huangrong/workspace/apitest/apitest-web/src/components/Charts/mixins/resize.js"],"names":["debounce","data","$_sidebarElm","$_resizeHandler","mounted","initListener","activated","resize","beforeDestroy","destroyListener","deactivated","methods","$_sidebarResizeHandler","e","propertyName","window","addEventListener","document","getElementsByClassName","removeEventListener","chart"],"mappings":"AAAA,SAASA,QAAT,QAAyB,SAAzB;AAEA,eAAe;AACbC,EAAAA,IADa,kBACN;AACL,WAAO;AACLC,MAAAA,YAAY,EAAE,IADT;AAELC,MAAAA,eAAe,EAAE;AAFZ,KAAP;AAID,GANY;AAObC,EAAAA,OAPa,qBAOH;AACR,SAAKC,YAAL;AACD,GATY;AAUbC,EAAAA,SAVa,uBAUD;AACV,QAAI,CAAC,KAAKH,eAAV,EAA2B;AACzB;AACA,WAAKE,YAAL;AACD,KAJS,CAMV;;;AACA,SAAKE,MAAL;AACD,GAlBY;AAmBbC,EAAAA,aAnBa,2BAmBG;AACd,SAAKC,eAAL;AACD,GArBY;AAsBbC,EAAAA,WAtBa,yBAsBC;AACZ,SAAKD,eAAL;AACD,GAxBY;AAyBbE,EAAAA,OAAO,EAAE;AACP;AACA;AACAC,IAAAA,sBAHO,kCAGgBC,CAHhB,EAGmB;AACxB,UAAIA,CAAC,CAACC,YAAF,KAAmB,OAAvB,EAAgC;AAC9B,aAAKX,eAAL;AACD;AACF,KAPM;AAQPE,IAAAA,YARO,0BAQQ;AAAA;;AACb,WAAKF,eAAL,GAAuBH,QAAQ,CAAC,YAAM;AACpC,QAAA,KAAI,CAACO,MAAL;AACD,OAF8B,EAE5B,GAF4B,CAA/B;AAGAQ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKb,eAAvC;AAEA,WAAKD,YAAL,GAAoBe,QAAQ,CAACC,sBAAT,CAAgC,mBAAhC,EAAqD,CAArD,CAApB;AACA,WAAKhB,YAAL,IAAqB,KAAKA,YAAL,CAAkBc,gBAAlB,CAAmC,eAAnC,EAAoD,KAAKJ,sBAAzD,CAArB;AACD,KAhBM;AAiBPH,IAAAA,eAjBO,6BAiBW;AAChBM,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKhB,eAA1C;AACA,WAAKA,eAAL,GAAuB,IAAvB;AAEA,WAAKD,YAAL,IAAqB,KAAKA,YAAL,CAAkBiB,mBAAlB,CAAsC,eAAtC,EAAuD,KAAKP,sBAA5D,CAArB;AACD,KAtBM;AAuBPL,IAAAA,MAvBO,oBAuBE;AAAA,UACCa,KADD,GACW,IADX,CACCA,KADD;AAEPA,MAAAA,KAAK,IAAIA,KAAK,CAACb,MAAN,EAAT;AACD;AA1BM;AAzBI,CAAf","sourcesContent":["import { debounce } from '@/utils'\n\nexport default {\n  data() {\n    return {\n      $_sidebarElm: null,\n      $_resizeHandler: null\n    }\n  },\n  mounted() {\n    this.initListener()\n  },\n  activated() {\n    if (!this.$_resizeHandler) {\n      // avoid duplication init\n      this.initListener()\n    }\n\n    // when keep-alive chart activated, auto resize\n    this.resize()\n  },\n  beforeDestroy() {\n    this.destroyListener()\n  },\n  deactivated() {\n    this.destroyListener()\n  },\n  methods: {\n    // use $_ for mixins properties\n    // https://vuejs.org/v2/style-guide/index.html#Private-property-names-essential\n    $_sidebarResizeHandler(e) {\n      if (e.propertyName === 'width') {\n        this.$_resizeHandler()\n      }\n    },\n    initListener() {\n      this.$_resizeHandler = debounce(() => {\n        this.resize()\n      }, 100)\n      window.addEventListener('resize', this.$_resizeHandler)\n\n      this.$_sidebarElm = document.getElementsByClassName('sidebar-container')[0]\n      this.$_sidebarElm && this.$_sidebarElm.addEventListener('transitionend', this.$_sidebarResizeHandler)\n    },\n    destroyListener() {\n      window.removeEventListener('resize', this.$_resizeHandler)\n      this.$_resizeHandler = null\n\n      this.$_sidebarElm && this.$_sidebarElm.removeEventListener('transitionend', this.$_sidebarResizeHandler)\n    },\n    resize() {\n      const { chart } = this\n      chart && chart.resize()\n    }\n  }\n}\n"]}]}