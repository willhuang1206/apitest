{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/huangrong/workspace/apitest/apitest-vue/src/utils/request.js","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-vue/src/utils/request.js","mtime":1588138042337},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _store = _interopRequireDefault(require(\"@/store\"));\n\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\n\nvar _auth = require(\"@/utils/auth\");\n\n// create an axios instance\nvar service = _axios.default.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 10000,\n  // request timeout\n  crossDomain: true,\n  withCredentials: true\n}); // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  // do something before request is sent\n  if (_store.default.getters.token) {\n    // let each request carry token\n    // ['X-Token'] is a custom headers key\n    // please modify it according to the actual situation\n    config.headers['X-Token'] = (0, _auth.getToken)();\n  } // 获取token\n\n\n  var ticket = _jsCookie.default.get('ticket'); // 添加token到headers\n\n\n  if (ticket) {\n    config.headers.Authorization = ticket;\n  }\n\n  return config;\n}, function (error) {\n  // do something with request error\n  console.log(error); // for debug\n\n  return Promise.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use(\n/**\n * If you want to get http information such as headers or status\n * Please return  response => response\n*/\n\n/**\n * Determine the request status by custom code\n * Here is just an example\n * You can also judge the status by HTTP Status Code\n */\nfunction (response) {\n  var res = response.data; // if the custom code is not 20000, it is judged as an error.\n\n  if (res.code !== 20000 && res.code !== '999999') {\n    (0, _elementUi.Message)({\n      message: res.message || 'Error',\n      type: 'error',\n      duration: 5 * 1000\n    }); // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n\n    if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n      // to re-login\n      _elementUi.MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n        confirmButtonText: 'Re-Login',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _store.default.dispatch('user/resetToken').then(function () {\n          location.reload();\n        });\n      });\n    }\n\n    return Promise.reject(new Error(res.message || 'Error'));\n  } else {\n    return res;\n  }\n}, function (error) {\n  console.log('err' + error); // for debug\n\n  (0, _elementUi.Message)({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nvar _default = service;\nexports.default = _default;",{"version":3,"sources":["/Users/huangrong/workspace/apitest/apitest-vue/src/utils/request.js"],"names":["service","axios","create","baseURL","process","env","VUE_APP_BASE_API","timeout","crossDomain","withCredentials","interceptors","request","use","config","store","getters","token","headers","ticket","Cookies","get","Authorization","error","console","log","Promise","reject","response","res","data","code","message","type","duration","MessageBox","confirm","confirmButtonText","cancelButtonText","then","dispatch","location","reload","Error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA,IAAMA,OAAO,GAAGC,eAAMC,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADM;AACY;AACvC;AACAC,EAAAA,OAAO,EAAE,KAHkB;AAGX;AAChBC,EAAAA,WAAW,EAAE,IAJc;AAK3BC,EAAAA,eAAe,EAAE;AALU,CAAb,CAAhB,C,CAQA;;;AACAT,OAAO,CAACU,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR;AAEA,MAAIC,eAAMC,OAAN,CAAcC,KAAlB,EAAyB;AACvB;AACA;AACA;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAe,SAAf,IAA4B,qBAA5B;AACD,GARO,CASR;;;AACA,MAAMC,MAAM,GAAGC,kBAAQC,GAAR,CAAY,QAAZ,CAAf,CAVQ,CAWR;;;AACA,MAAGF,MAAH,EAAU;AACRL,IAAAA,MAAM,CAACI,OAAP,CAAeI,aAAf,GAA+BH,MAA/B;AACD;;AACD,SAAOL,MAAP;AACD,CAjBH,EAkBE,UAAAS,KAAK,EAAI;AACP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFO,CAEY;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAtBH,E,CAyBA;;AACAtB,OAAO,CAACU,YAAR,CAAqBiB,QAArB,CAA8Bf,GAA9B;AACE;;;;;AAKA;;;;;AAKA,UAAAe,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB,CADU,CAEV;;AACA,MAAID,GAAG,CAACE,IAAJ,KAAa,KAAb,IAAsBF,GAAG,CAACE,IAAJ,KAAa,QAAvC,EAAiD;AAC/C,4BAAQ;AACNC,MAAAA,OAAO,EAAEH,GAAG,CAACG,OAAJ,IAAe,OADlB;AAENC,MAAAA,IAAI,EAAE,OAFA;AAGNC,MAAAA,QAAQ,EAAE,IAAI;AAHR,KAAR,EAD+C,CAO/C;;AACA,QAAIL,GAAG,CAACE,IAAJ,KAAa,KAAb,IAAsBF,GAAG,CAACE,IAAJ,KAAa,KAAnC,IAA4CF,GAAG,CAACE,IAAJ,KAAa,KAA7D,EAAoE;AAClE;AACAI,4BAAWC,OAAX,CAAmB,gFAAnB,EAAqG,gBAArG,EAAuH;AACrHC,QAAAA,iBAAiB,EAAE,UADkG;AAErHC,QAAAA,gBAAgB,EAAE,QAFmG;AAGrHL,QAAAA,IAAI,EAAE;AAH+G,OAAvH,EAIGM,IAJH,CAIQ,YAAM;AACZxB,uBAAMyB,QAAN,CAAe,iBAAf,EAAkCD,IAAlC,CAAuC,YAAM;AAC3CE,UAAAA,QAAQ,CAACC,MAAT;AACD,SAFD;AAGD,OARD;AASD;;AACD,WAAOhB,OAAO,CAACC,MAAR,CAAe,IAAIgB,KAAJ,CAAUd,GAAG,CAACG,OAAJ,IAAe,OAAzB,CAAf,CAAP;AACD,GArBD,MAqBO;AACL,WAAOH,GAAP;AACD;AACF,CAtCH,EAuCE,UAAAN,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,KAApB,EADO,CACoB;;AAC3B,0BAAQ;AACNS,IAAAA,OAAO,EAAET,KAAK,CAACS,OADT;AAENC,IAAAA,IAAI,EAAE,OAFA;AAGNC,IAAAA,QAAQ,EAAE,IAAI;AAHR,GAAR;AAKA,SAAOR,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CA/CH;eAkDetB,O","sourcesContent":["import axios from 'axios'\nimport { MessageBox, Message } from 'element-ui'\nimport store from '@/store'\nimport Cookies from 'js-cookie'\nimport { getToken } from '@/utils/auth'\n\n// create an axios instance\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 10000, // request timeout\n  crossDomain: true,\n  withCredentials: true\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n    // do something before request is sent\n\n    if (store.getters.token) {\n      // let each request carry token\n      // ['X-Token'] is a custom headers key\n      // please modify it according to the actual situation\n      config.headers['X-Token'] = getToken()\n    }\n    // 获取token\n    const ticket = Cookies.get('ticket')\n    // 添加token到headers\n    if(ticket){\n      config.headers.Authorization = ticket\n    }\n    return config\n  },\n  error => {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  /**\n   * If you want to get http information such as headers or status\n   * Please return  response => response\n  */\n\n  /**\n   * Determine the request status by custom code\n   * Here is just an example\n   * You can also judge the status by HTTP Status Code\n   */\n  response => {\n    const res = response.data\n    // if the custom code is not 20000, it is judged as an error.\n    if (res.code !== 20000 && res.code !== '999999') {\n      Message({\n        message: res.message || 'Error',\n        type: 'error',\n        duration: 5 * 1000\n      })\n\n      // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n      if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n        // to re-login\n        MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n          confirmButtonText: 'Re-Login',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }).then(() => {\n          store.dispatch('user/resetToken').then(() => {\n            location.reload()\n          })\n        })\n      }\n      return Promise.reject(new Error(res.message || 'Error'))\n    } else {\n      return res\n    }\n  },\n  error => {\n    console.log('err' + error) // for debug\n    Message({\n      message: error.message,\n      type: 'error',\n      duration: 5 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"]}]}