{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectMember.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectMember.vue","mtime":1588749633794},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { test } from \"../../api/api\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      groups: [{\n        value: '1',\n        label: '管理员'\n      }, {\n        value: '2',\n        label: '测试经理'\n      }, {\n        value: '3',\n        label: '测试成员'\n      }, {\n        value: '4',\n        label: '项目成员'\n      }, {\n        value: '0',\n        label: '无权限'\n      }],\n      memberData: [],\n      total: 0,\n      page: 1,\n      pages: 0,\n      listLoading: false,\n      reportFrom: \"\",\n      editFormVisible: false,\n      //编辑界面是否显示\n      editLoading: false,\n      editFormRules: {\n        reportFrom: [{\n          required: true,\n          message: '请输入发送人',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        mailUser: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        mailPass: [{\n          required: true,\n          message: '请输入口令',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        mailSmtp: [{\n          required: false,\n          message: '请输入邮件服务器',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }]\n      },\n      //编辑界面数据\n      editForm: {},\n      users: {\n        visible: false,\n        loading: false,\n        list: [],\n        total: 0,\n        selUsers: [],\n        page: 1,\n        pages: 0\n      }\n    };\n  },\n  methods: {\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getProjectMember();\n    },\n    // 获取成员列表\n    getProjectMember: function getProjectMember() {\n      this.listLoading = true;\n      var self = this;\n      var params = {\n        project_id: this.$route.params.project_id,\n        page: self.page\n      };\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get(\"\".concat(test, \"/api/member/project_member\"), {\n        params: params,\n        headers: headers\n      }).then(function (res) {\n        var _res$data = res.data,\n            msg = _res$data.msg,\n            code = _res$data.code,\n            data = _res$data.data;\n        self.listLoading = false;\n\n        if (code === '999999') {\n          self.total = data.total;\n          self.pages = data.pages;\n          self.memberData = data.data;\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    },\n    handleCurrentChangeUser: function handleCurrentChangeUser(val) {\n      this.users.page = val;\n      this.getGlobalUser();\n    },\n    getGlobalUser: function getGlobalUser() {\n      this.users.loading = true;\n      var self = this;\n      var params = {\n        page: self.users.page\n      };\n      var headers = {\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get(test + \"/api/global/user_list\", {\n        params: params\n      }).then(function (response) {\n        self.users.loading = false;\n\n        if (response.data.code === '999999') {\n          self.users.total = response.data.data.total;\n          self.users.pages = response.data.data.pages;\n          self.users.list = [];\n          response.data.data.data.forEach(function (item) {\n            self.users.list.push(item);\n          });\n        } else {\n          self.$message.error({\n            message: response.data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    //显示新增界面\n    handleUpdate: function handleUpdate() {\n      this.users.visible = true;\n    },\n    selUsersChange: function selUsersChange(sels) {\n      this.users.selUsers = sels;\n    },\n    updateUsersSubmit: function updateUsersSubmit() {\n      var _this = this;\n\n      var ids = this.users.selUsers.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认更新选中的用户吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.users.loading = true; //NProgress.start();\n\n        var params = JSON.stringify({\n          project_id: _this.$route.params.project_id,\n          group: self.users.group,\n          ids: ids\n        });\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(test + \"/api/member/update\", params, {\n          headers: headers\n        }).then(function (response) {\n          self.users.loading = false;\n\n          if (response.data.code === '999999') {\n            self.$message({\n              message: '更新成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: response.data.msg,\n              center: true\n            });\n          }\n\n          self.users.visible = false;\n          self.getProjectMember();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    }\n  },\n  mounted: function mounted() {\n    this.getProjectMember();\n    this.getGlobalUser();\n  }\n};",null]}