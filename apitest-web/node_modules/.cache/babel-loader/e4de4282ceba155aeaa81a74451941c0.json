{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/api/apiInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/api/apiInfo.vue","mtime":1588927473913},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/huangrong/workspace/apitest/apitest-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _api = require(\"@/api/api\");\n\nvar _jquery = _interopRequireDefault(require(\"jquery\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    return {\n      activeNames: ['2', '3', '4'],\n      id: \"\",\n      httpType: \"\",\n      requestType: \"\",\n      type: \"\",\n      addr: \"\",\n      apiName: \"\",\n      updateTime: \"\",\n      head: [],\n      ParameterType: true,\n      requestParameterType: \"\",\n      parameter: [],\n      parameterRaw: \"\",\n      response: [],\n      mockCode: \"\",\n      mockData: \"\",\n      mockJsonData: \"\",\n      httpCode: [{\n        value: '200',\n        label: '200'\n      }, {\n        value: '404',\n        label: '404'\n      }, {\n        value: '400',\n        label: '400'\n      }, {\n        value: '500',\n        label: '500'\n      }, {\n        value: '502',\n        label: '502'\n      }, {\n        value: '302',\n        label: '302'\n      }],\n      resultShow: true,\n      status: true,\n      listLoadingHead: false,\n      listLoadingParameter: false,\n      listLoadingResponse: false,\n      parameterInfoVisible: false,\n      parameterInfo: [],\n      responseInfoVisible: false,\n      responseInfo: [],\n      format: false\n    };\n  },\n  methods: {\n    getApiInfo: function getApiInfo() {\n      var self = this;\n      self.listLoadingHead = true;\n      self.listLoadingParameter = true;\n      self.listLoadingResponse = true;\n      var param = {\n        project_id: self.$route.params.project_id,\n        api_id: self.$route.params.api_id\n      };\n\n      _axios.default.get(_api.test + \"/api/api/api_info\", {\n        params: param\n      }).then(function (response) {\n        self.listLoadingHead = false;\n        self.listLoadingParameter = false;\n        self.listLoadingResponse = false;\n\n        if (response.data.code === '999999') {\n          var data = response.data.data;\n          self.id = data.id;\n          self.httpType = data.httpType;\n          self.type = data.type;\n          self.requestType = data.requestType;\n          self.addr = data.apiAddress;\n          self.apiName = data.name;\n          self.updateTime = data.lastUpdateTime;\n          self.status = data.status;\n          self.head = data.headers;\n          self.requestParameterType = data.requestParameterType;\n          self.parameter = data.requestParameter;\n\n          try {\n            self.parameterRaw = data.requestParameterRaw.data;\n          } catch (e) {}\n\n          self.response = data.response;\n          self.mockCode = data.mockCode;\n          self.mockData = data.data;\n\n          if (data.data) {\n            self.mockJsonData = JSON.parse(data.data);\n          }\n        } else {\n          self.$message.error({\n            message: response.data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    formatChange: function formatChange() {},\n    changFormat: function changFormat() {\n      var demo = document.getElementsByTagName('pre')[0];\n      console.log(demo);\n      hljs.highlightBlock(demo);\n      this.resultShow = !this.resultShow;\n    },\n    lookParameterInfo: function lookParameterInfo(index) {\n      this.parameterInfoVisible = true;\n      this.parameterInfo = this.parameter[index];\n    },\n    lookResponseInfo: function lookResponseInfo(index) {\n      this.responseInfoVisible = true;\n      this.responseInfo = this.response[index];\n    },\n    parameterTypeChange: function parameterTypeChange() {\n      if (this.requestParameterType === 'application/x-www-form-urlencoded' || this.requestParameterType === 'application/json' || this.requestParameterType === 'text/plain') {\n        this.ParameterType = true;\n      } else {\n        this.ParameterType = false;\n      }\n    }\n  },\n  watch: {\n    parameterType: function parameterType() {\n      this.parameterTypeChange();\n    }\n  },\n  mounted: function mounted() {\n    this.getApiInfo();\n    this.formatChange();\n  }\n};\nexports.default = _default;",{"version":3,"sources":["apiInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section>\n        <div style=\"border: 1px solid #e6e6e6;margin-bottom: 10px;padding:15px\">\n            <el-row :span=\"24\">\n                <el-col :span=\"2\" style=\"padding-left: 6px; padding-right: 6px;\">\n                    <div class=\"httpStyle\" v-model=\"type\">{{type}}</div>\n                </el-col>\n                <el-col :span=\"2\" style=\"padding-left: 6px;\">\n                    <div class=\"httpStyle\" v-model=\"requestType\">{{requestType}}</div>\n                </el-col>\n                <el-col :span=\"20\" class=\"apiInfo\">\n                    <div>{{addr}}</div>\n                    <div>{{apiName}}</div>\n                </el-col>\n                <!--<el-col :span=\"5\">-->\n                    <!--<i v-show=\"status\" class=\"el-icon-check statusIcon\"></i>-->\n                    <!--<i v-show=\"!status\" class=\"el-icon-close statusIcon\"></i>-->\n                    <!--<div class=\"apiDate\" v-model=\"updateTime\">{{updateTime}}</div>-->\n                <!--</el-col>-->\n            </el-row>\n        </div>\n        <el-collapse v-model=\"activeNames\">\n            <el-collapse-item title=\"请求头部\" name=\"1\">\n                <el-table :data=\"head\" highlight-current-row style=\"width: 100%;\" v-loading=\"listLoadingHead\">\n                    <el-table-column type=\"index\" label=\"#\" min-width=\"5%\">\n                    </el-table-column>\n                    <el-table-column prop=\"name\" label=\"参数名\" min-width=\"20%\">\n                    </el-table-column>\n                    <el-table-column prop=\"value\" label=\"参数值\" min-width=\"60%\" show-overflow-tooltip>\n                    </el-table-column>\n                </el-table>\n            </el-collapse-item>\n            <el-collapse-item title=\"请求参数\" name=\"2\">\n                <template>\n                    <div v-show=\"parameterRaw\" :class=\"ParameterType? 'parameter-b': 'parameter-a'\"\n                         style=\"border: 1px solid #e6e6e6;margin-bottom: 10px;padding:15px;word-break: break-all\" v-model=\"parameterRaw\">{{parameterRaw}}</div>\n                </template>\n                <div v-show=\"!parameter.length&&!parameterRaw\" class=\"raw\">暂无数据</div>\n                <el-table :data=\"parameter\" highlight-current-row style=\"width: 100%;\" v-loading=\"listLoadingParameter\"\n                          :class=\"ParameterType? 'parameter-a': 'parameter-b'\">\n                    <el-table-column type=\"index\" label=\"#\" min-width=\"5%\">\n                    </el-table-column>\n                    <el-table-column prop=\"name\" label=\"参数名\" min-width=\"20%\" show-overflow-tooltip>\n                    </el-table-column>\n                    <el-table-column prop=\"value\" label=\"参数值\" min-width=\"40%\" show-overflow-tooltip>\n                    </el-table-column>\n                    <el-table-column prop=\"_type\" label=\"参数类型\" min-width=\"10%\" show-overflow-tooltip>\n                    </el-table-column>\n                    <el-table-column label=\"必填?\" min-width=\"10%\">\n                        <template slot-scope=\"scope\">\n                            <img v-show=\"scope.row.required\" src=\"@/assets/icon-yes.svg\"/>\n                            <img v-show=\"!scope.row.required\" src=\"@/assets/icon-no.svg\"/>\n                        </template>\n                    </el-table-column>\n                    <el-table-column label=\"详情\" min-width=\"10%\">\n                        <template slot-scope=\"scope\">\n                            <el-button size=\"small\" @click=\"lookParameterInfo(scope.$index)\">查看</el-button>\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-collapse-item>\n            <el-dialog title=\"请求参数详情\" :visible.sync=\"parameterInfoVisible\" :close-on-click-modal=\"false\">\n                <div v-model=\"parameterInfo\" style=\"font-size: 15px\">\n                    <el-row :gutter=\"20\" style=\"margin: 10px\">\n                        <div>\n                            <el-col :span=\"7\">参数名</el-col>\n                            <el-col :span=\"7\">参数类型</el-col>\n                            <el-col :span=\"3\">必填?</el-col>\n                        </div>\n                        <div style=\"margin-top: 30px\">\n                            <el-col :span=\"7\">{{parameterInfo.name}}</el-col>\n                            <el-col :span=\"7\">{{parameterInfo._type}}</el-col>\n                            <el-col :span=\"3\">\n                                <img v-show=\"parameterInfo.required\" src=\"@/assets/icon-yes.svg\"/>\n                                <img v-show=\"!parameterInfo.required\" src=\"@/assets/icon-no.svg\"/>\n                            </el-col>\n                        </div>\n                        <div style=\"margin-top: 70px\"><el-col>参数值:</el-col></div>\n                        <div style=\"margin-top: 100px\">\n                            <el-col>{{parameterInfo.value}}</el-col>\n                        </div>\n                        <div style=\"margin-top: 70px\"><el-col>输入限制:</el-col></div>\n                        <div style=\"margin-top: 100px\">\n                            <el-col v-show=\"parameterInfo.restrict\">{{parameterInfo.restrict}}</el-col>\n                            <el-col v-show=\"!parameterInfo.restrict\">无限制要求</el-col>\n                        </div>\n                        <div style=\"margin-top: 140px\"><el-col>说明:</el-col></div>\n                        <div style=\"margin-top: 170px\"><el-col v-show=\"parameterInfo.description\">{{parameterInfo.description}}</el-col>\n                            <el-col v-show=\"!parameterInfo.description\">无详细说明</el-col>\n                        </div>\n                    </el-row>\n                </div>\n            </el-dialog>\n            <el-collapse-item title=\"返回参数\" name=\"3\">\n                <el-table :data=\"response\" highlight-current-row style=\"width: 100%;\" v-loading=\"listLoadingResponse\">\n                    <el-table-column type=\"index\" label=\"#\" min-width=\"5%\">\n                    </el-table-column>\n                    <el-table-column prop=\"name\" label=\"参数名\" min-width=\"20%\">\n                    </el-table-column>\n                    <el-table-column prop=\"value\" label=\"预期值\" min-width=\"40%\">\n                    </el-table-column>\n                    <el-table-column prop=\"_type\" label=\"参数类型\" min-width=\"10%\" show-overflow-tooltip>\n                    </el-table-column>\n                    <el-table-column label=\"必含?\" min-width=\"10%\">\n                        <template slot-scope=\"scope\">\n                            <img v-show=\"scope.row.required\" src=\"@/assets/icon-yes.svg\"/>\n                            <img v-show=\"!scope.row.required\" src=\"@/assets/icon-no.svg\"/>\n                        </template>\n                    </el-table-column>\n                    <el-table-column label=\"详情\" min-width=\"10%\">\n                        <template slot-scope=\"scope\">\n                            <el-button size=\"small\" @click=\"lookResponseInfo(scope.$index)\">查看</el-button>\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-collapse-item>\n            <el-dialog title=\"返回参数详情\" :visible.sync=\"responseInfoVisible\" :close-on-click-modal=\"false\">\n                <div v-model=\"responseInfo\" style=\"font-size: 15px\">\n                    <el-row :gutter=\"20\" style=\"margin: 10px\">\n                        <div>\n                            <el-col :span=\"7\">参数名</el-col>\n                            <el-col :span=\"7\">参数类型</el-col>\n                            <el-col :span=\"3\">必含?</el-col>\n                        </div>\n                        <div style=\"margin-top: 30px\">\n                            <el-col :span=\"7\">{{responseInfo.name}}</el-col>\n                            <el-col :span=\"7\">{{responseInfo._type}}</el-col>\n                            <el-col :span=\"3\">\n                                <img v-show=\"responseInfo.required\" src=\"@/assets/icon-yes.svg\"/>\n                                <img v-show=\"!responseInfo.required\" src=\"@/assets/icon-no.svg\"/>\n                            </el-col>\n                        </div>\n                        <div style=\"margin-top: 70px\"><el-col>预期值:</el-col></div>\n                        <div style=\"margin-top: 100px\"><el-col v-show=\"responseInfo.value\">{{responseInfo.value}}</el-col>\n                            <el-col v-show=\"!responseInfo.value\">无</el-col>\n                        </div>\n                        <div style=\"margin-top: 70px\"><el-col>说明:</el-col></div>\n                        <div style=\"margin-top: 100px\"><el-col v-show=\"responseInfo.description\">{{responseInfo.description}}</el-col>\n                            <el-col v-show=\"!responseInfo.description\">无详细说明</el-col>\n                        </div>\n                    </el-row>\n                </div>\n            </el-dialog>\n            <el-collapse-item title=\"返回样例\" name=\"4\">\n                  <div style=\"margin-bottom: 10px\">\n                      <el-button type=\"primary\" size=\"mini\" @click=\"format = !format\">格式转换</el-button>\n                  </div>\n                  <el-card class=\"box-card\">\n                      <!--<div slot=\"header\" class=\"clearfix\">-->\n                          <!--<span v-model=\"form.statusCode\" style=\"font-size: 25px\">{{form.statusCode}}</span>-->\n                      <!--</div>-->\n                      <div v-model=\"mockData\" v-show=\"!format\">\n                          <!--<el-input v-model=\"form.data\" :value=\"form.data\" type=\"textarea\" :rows=\"5\" placeholder=\"返回样例\"></el-input>-->\n                          <div style=\"word-break: break-all;overflow:auto;overflow-x:hidden\">{{mockData}}</div>\n                      </div>\n                      <div v-show=\"format\">\n                          <!--<pre id=\"formResult\" style=\"border: 1px solid #e6e6e6;word-break: break-all;overflow:auto;overflow-x:hidden\">{{form.resultData}}</pre>-->\n                          <json-viewer :value=\"mockJsonData\" :expand-depth=5 copyable></json-viewer>\n                      </div>\n                      <div v-show=\"!mockData\" class=\"raw\">暂无数据</div>\n                  </el-card>\n              </el-collapse-item>\n            <!--<el-collapse-item title=\"普通Mock\" name=\"4\">-->\n                <!--<el-card class=\"box-card\">-->\n                    <!--<div slot=\"header\" class=\"clearfix\">-->\n                        <!--<el-select v-model=\"mockCode\" placeholder=\"HTTP状态\">-->\n                            <!--<el-option v-for=\"(item,index) in httpCode\" :key=\"index+''\" :label=\"item.label\" :value=\"item.value\"></el-option>-->\n                        <!--</el-select>-->\n                        <!--<el-button type=\"primary\" @click=\"changFormat\">格式转换</el-button>-->\n                    <!--</div >-->\n                    <!--<div v-show=\"mockData\" v-model=\"mockData\" :class=\"resultShow? 'parameter-a': 'parameter-b'\"-->\n                         <!--style=\"border: 1px solid #e6e6e6;margin-bottom: 10px;padding:15px;word-break: break-all;line-height:25px\">{{mockData}}</div>-->\n                    <!--<div v-show=\"!mockData&&!mockJsonData\" class=\"raw\">暂无数据</div>-->\n                    <!--<div v-show=\"mockJsonData\" :class=\"!resultShow? 'parameter-a': 'parameter-b'\"-->\n                         <!--style=\"border: 1px solid #e6e6e6;margin-bottom: 10px;padding:15px;word-break: break-all;height:300px;overflow:auto;overflow-x:hidden\">-->\n                        <!--<pre>{{mockJsonData}}</pre>-->\n                    <!--</div>-->\n                <!--</el-card>-->\n            <!--</el-collapse-item>-->\n        </el-collapse>\n    </section>\n</template>\n\n<script>\n    import { test } from '@/api/api'\n    import $ from 'jquery'\n    import axios from 'axios'\n    export default {\n        data() {\n            return {\n                activeNames: ['2', '3', '4'],\n                id: \"\",\n                httpType: \"\",\n                requestType: \"\",\n                type: \"\",\n                addr: \"\",\n                apiName: \"\",\n                updateTime: \"\",\n                head: [],\n                ParameterType: true,\n                requestParameterType: \"\",\n                parameter: [],\n                parameterRaw: \"\",\n                response: [],\n                mockCode: \"\",\n                mockData: \"\",\n                mockJsonData: \"\",\n                httpCode: [{value: '200', label: '200'},\n                    {value: '404', label: '404'},\n                    {value: '400', label: '400'},\n                    {value: '500', label: '500'},\n                    {value: '502', label: '502'},\n                    {value: '302', label: '302'}],\n                resultShow: true,\n                status: true,\n                listLoadingHead: false,\n                listLoadingParameter: false,\n                listLoadingResponse: false,\n                parameterInfoVisible: false,\n                parameterInfo: [],\n                responseInfoVisible: false,\n                responseInfo: [],\n                format: false,\n            }\n        },\n        methods: {\n            getApiInfo() {\n                let self = this;\n                self.listLoadingHead = true;\n                self.listLoadingParameter = true;\n                self.listLoadingResponse = true;\n                let param = {project_id: self.$route.params.project_id, api_id: self.$route.params.api_id};\n                axios.get(test+\"/api/api/api_info\", {params:param}).then(response => {\n                    self.listLoadingHead = false;\n                    self.listLoadingParameter = false;\n                    self.listLoadingResponse = false;\n                    if (response.data.code === '999999') {\n                        let data = response.data.data;\n                        self.id = data.id;\n                        self.httpType = data.httpType;\n                        self.type = data.type;\n                        self.requestType = data.requestType;\n                        self.addr = data.apiAddress;\n                        self.apiName = data.name;\n                        self.updateTime = data.lastUpdateTime;\n                        self.status = data.status;\n                        self.head = data.headers;\n                        self.requestParameterType = data.requestParameterType;\n                        self.parameter = data.requestParameter;\n                        try {\n                            self.parameterRaw = data.requestParameterRaw.data;\n                        } catch (e){\n\n                        }\n                        self.response = data.response;\n                        self.mockCode = data.mockCode;\n                        self.mockData = data.data;\n                        if (data.data) {\n                            self.mockJsonData = JSON.parse(data.data)\n                        }\n                    }\n                    else {\n                        self.$message.error({\n                            message: response.data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            formatChange() {\n            },\n            changFormat() {\n                let demo = document.getElementsByTagName('pre')[0];\n                console.log(demo)\n                hljs.highlightBlock(demo);\n                this.resultShow = !this.resultShow\n            },\n            lookParameterInfo(index) {\n                this.parameterInfoVisible = true;\n                this.parameterInfo = this.parameter[index]\n            },\n            lookResponseInfo(index) {\n                this.responseInfoVisible = true;\n                this.responseInfo = this.response[index]\n            },\n            parameterTypeChange() {\n                if (this.requestParameterType === 'application/x-www-form-urlencoded'||this.requestParameterType === 'application/json'||this.requestParameterType === 'text/plain') {\n                    this.ParameterType = true\n                } else {\n                    this.ParameterType = false\n                }\n            }\n        },\n        watch: {\n            parameterType() {\n                this.parameterTypeChange()\n            }\n        },\n        mounted() {\n            this.getApiInfo();\n            this.formatChange()\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .httpStyle {\n        border-radius: 5px;\n        padding-top: 20px;\n        padding-right: 10px;\n        padding-left: 10px;\n        height: 74px;\n        box-sizing: border-box;\n        color: #fff;\n        font-size: 160%;\n        background-color: #409eff;\n        text-align: center;\n    }\n    .apiInfo {\n        padding-left: 25px;\n        padding-right: 6px;\n        font-size: 25px;\n        padding-top: 7px\n    }\n    .statusIcon {\n        padding-left: 25px;\n        padding-right: 6px;\n        padding-top: 7px;\n        font-size: 30px;\n    }\n    .apiDate {\n        margin-top: 18px;\n        font-size: 20px;\n    }\n    .parameter-a {\n        display: block;\n    }\n    .parameter-b {\n        display: none;\n    }\n    .raw {\n        border: 1px solid #e6e6e6;\n        margin-bottom: 10px;\n        padding:15px;\n        text-align: center;\n        z-index: 10000;\n    }\n</style>\n"],"sourceRoot":"src/views/project/api"}]}