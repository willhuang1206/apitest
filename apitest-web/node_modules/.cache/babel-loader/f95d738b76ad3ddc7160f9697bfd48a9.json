{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/src/api/api.js","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/api/api.js","mtime":1590654062477},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport router from 'vue-router';\nimport Cookies from 'js-cookie';\nimport { MessageBox } from 'element-ui';\nexport var test = 'http://127.0.0.1:8092'; //export const test = 'http://apitest.xyz.com';\n\nexport var requestLogout = function requestLogout(params) {\n  return axios.get(\"\".concat(test, \"/api/user/logout\"), params).then(function (res) {\n    return res.data;\n  });\n}; // 获取全局配置列表\n\nexport var getProjectConfig = function getProjectConfig(headers, params) {\n  return axios.get(\"\".concat(test, \"/api/project/config_list\"), {\n    params: params,\n    headers: headers\n  }).then(function (res) {\n    return res.data;\n  });\n}; // 获取全局配置列表\n\nexport var getGlobalPublish = function getGlobalPublish(headers, params) {\n  return axios.get(\"\".concat(test, \"/api/global/publish_list\"), {\n    params: params,\n    headers: headers\n  }).then(function (res) {\n    return res.data;\n  });\n}; // 获取项目动态\n\nexport var getProjectDynamicList = function getProjectDynamicList(headers, params) {\n  return axios.get(\"\".concat(test, \"/api/dynamic/dynamic\"), {\n    params: params,\n    headers: headers\n  }).then(function (res) {\n    return res.data;\n  });\n}; // 运行自动化用例\n\nexport var runAutomation = function runAutomation(headers, params) {\n  return axios.post(\"\".concat(test, \"/api/automation/run\"), params, {\n    headers: headers\n  }).then(function (res) {\n    return res.data;\n  });\n}; // 默认超时设置\n\naxios.defaults.timeout = 10000; // 相对路径设置\n\naxios.defaults.baseURL = '';\naxios.defaults.crossDomain = true;\naxios.defaults.withCredentials = true; //http request 拦截器\n\naxios.interceptors.request.use(function (config) {\n  // 获取token\n  var ticket = Cookies.get('ticket'); // 添加token到headers\n\n  if (ticket) {\n    config.headers.Authorization = ticket;\n  } ////参数处理\n  //if(config.method === 'get' && config.url !== '/api/user/login'){\n  //  config.params = config.params;\n  //}else if(config.url !== '/api/user/login'){\n  //  config.data = config.data || {};\n  //  config.params = config.params || {'ticket': ticket};\n  //}\n\n\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n}); //http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response) {\n    switch (error.response.status) {\n      case 403:\n        // 返回 401 清除token信息并跳转到登录页面\n        sessionStorage.removeItem('token');\n        Cookies.remove('ticket'); //router.replace({\n        //    path: 'login',\n        //    query: {redirect: router.currentRoute.fullPath}\n        //});\n\n        MessageBox.alert(\"登录信息超时,请重新登录!\", \"登录超时\", {\n          confirmButtonText: \"跳转登录页面\",\n          callback: function callback(action) {\n            window.location.href = \"/\";\n          }\n        });\n\n      case 406:\n        // 返回 401 清除token信息并跳转到登录页面\n        //router.replace({\n        //    path: 'login',\n        //    query: {redirect: router.currentRoute.fullPath}\n        //});\n        MessageBox.alert(\"没有权限执行该操作!\", \"没有权限\", {\n          confirmButtonText: \"关闭\",\n          callback: function callback(action) {\n            history.go(0);\n          }\n        });\n    }\n  }\n\n  return Promise.reject(error.response.data); // 返回接口返回的错误信息\n});\n/**\n * fetch 请求方法\n * @param url\n * @param params\n * @returns {Promise}\n */\n\nexport function fetch(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: params\n    }).then(function (response) {\n      resolve(response.data);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n}\n/**\n * post 请求方法\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.post(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}\n/**\n * patch 方法封装\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function patch(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.patch(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}\n/**\n * put 方法封装\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function put(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.put(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}",{"version":3,"sources":["/Users/huangrong/workspace/apitest/apitest-web/src/api/api.js"],"names":["axios","router","Cookies","MessageBox","test","requestLogout","params","get","then","res","data","getProjectConfig","headers","getGlobalPublish","getProjectDynamicList","runAutomation","post","defaults","timeout","baseURL","crossDomain","withCredentials","interceptors","request","use","config","ticket","Authorization","err","Promise","reject","response","error","status","sessionStorage","removeItem","remove","alert","confirmButtonText","callback","action","window","location","href","history","go","fetch","url","resolve","catch","patch","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,OAAO,IAAMC,IAAI,GAAG,uBAAb,C,CACP;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM,EAAI;AAAE,SAAON,KAAK,CAACO,GAAN,WAAaH,IAAb,uBAAqCE,MAArC,EAA6CE,IAA7C,CAAkD,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAArD,CAAP;AAA4E,CAA9G,C,CACP;;AACA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAUN,MAAV,EAAqB;AACjD,SAAON,KAAK,CAACO,GAAN,WAAaH,IAAb,+BAA6C;AAAEE,IAAAA,MAAM,EAAEA,MAAV;AAAkBM,IAAAA,OAAO,EAACA;AAA1B,GAA7C,EAAiFJ,IAAjF,CAAsF,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAAzF,CAAP;AAAgH,CAD7G,C,CAEP;;AACA,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,OAAD,EAAUN,MAAV,EAAqB;AACjD,SAAON,KAAK,CAACO,GAAN,WAAaH,IAAb,+BAA6C;AAAEE,IAAAA,MAAM,EAAEA,MAAV;AAAkBM,IAAAA,OAAO,EAACA;AAA1B,GAA7C,EAAiFJ,IAAjF,CAAsF,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAAzF,CAAP;AAAgH,CAD7G,C,CAEP;;AACA,OAAO,IAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACF,OAAD,EAAUN,MAAV,EAAqB;AACtD,SAAON,KAAK,CAACO,GAAN,WAAaH,IAAb,2BAAyC;AAAEE,IAAAA,MAAM,EAAEA,MAAV;AAAkBM,IAAAA,OAAO,EAACA;AAA1B,GAAzC,EAA6EJ,IAA7E,CAAkF,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAArF,CAAP;AAA4G,CADzG,C,CAEP;;AACA,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACH,OAAD,EAASN,MAAT,EAAoB;AAC7C,SAAON,KAAK,CAACgB,IAAN,WAAcZ,IAAd,0BAAyCE,MAAzC,EAAiD;AAACM,IAAAA,OAAO,EAAPA;AAAD,GAAjD,EAA4DJ,IAA5D,CAAiE,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAApE,CAAP;AAA2F,CADxF,C,CAGP;;AACAV,KAAK,CAACiB,QAAN,CAAeC,OAAf,GAAyB,KAAzB,C,CACA;;AACAlB,KAAK,CAACiB,QAAN,CAAeE,OAAf,GAAwB,EAAxB;AACAnB,KAAK,CAACiB,QAAN,CAAeG,WAAf,GAA6B,IAA7B;AACApB,KAAK,CAACiB,QAAN,CAAeI,eAAf,GAAkC,IAAlC,C,CACA;;AACArB,KAAK,CAACsB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAAC,MAAM,EAAI;AACR;AACA,MAAMC,MAAM,GAAGxB,OAAO,CAACK,GAAR,CAAY,QAAZ,CAAf,CAFQ,CAGR;;AACA,MAAGmB,MAAH,EAAU;AACRD,IAAAA,MAAM,CAACb,OAAP,CAAee,aAAf,GAA+BD,MAA/B;AACD,GANO,CAOR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAOD,MAAP;AACD,CAhBH,EAiBE,UAAAG,GAAG,EAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAnBH,E,CAuBA;;AACA5B,KAAK,CAACsB,YAAN,CAAmBS,QAAnB,CAA4BP,GAA5B,CACE,UAAAO,QAAQ,EAAI;AACV,SAAOA,QAAP;AACD,CAHH,EAIE,UAAAC,KAAK,EAAI;AACP,MAAIA,KAAK,CAACD,QAAV,EAAoB;AAChB,YAAQC,KAAK,CAACD,QAAN,CAAeE,MAAvB;AACI,WAAK,GAAL;AACI;AACAC,QAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACAjC,QAAAA,OAAO,CAACkC,MAAR,CAAe,QAAf,EAHJ,CAII;AACA;AACA;AACA;;AACAjC,QAAAA,UAAU,CAACkC,KAAX,CAAiB,eAAjB,EAAiC,MAAjC,EAAwC;AACtCC,UAAAA,iBAAiB,EAAC,QADoB;AAEtCC,UAAAA,QAAQ,EAAC,kBAAAC,MAAM,EAAI;AACjBC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACD;AAJqC,SAAxC;;AAMJ,WAAK,GAAL;AACI;AACA;AACA;AACA;AACA;AACAxC,QAAAA,UAAU,CAACkC,KAAX,CAAiB,YAAjB,EAA8B,MAA9B,EAAqC;AACnCC,UAAAA,iBAAiB,EAAC,IADiB;AAEnCC,UAAAA,QAAQ,EAAC,kBAAAC,MAAM,EAAI;AACjBI,YAAAA,OAAO,CAACC,EAAR,CAAW,CAAX;AACD;AAJkC,SAArC;AArBR;AA4BH;;AACD,SAAOhB,OAAO,CAACC,MAAR,CAAeE,KAAK,CAACD,QAAN,CAAerB,IAA9B,CAAP,CA/BO,CA+BuC;AAC/C,CApCH;AAwCA;;;;;;;AAMA,OAAO,SAASoC,KAAT,CAAeC,GAAf,EAAiC;AAAA,MAAbzC,MAAa,uEAAJ,EAAI;AAEpC,SAAO,IAAIuB,OAAJ,CAAY,UAACmB,OAAD,EAAUlB,MAAV,EAAqB;AACpC9B,IAAAA,KAAK,CAACO,GAAN,CAAUwC,GAAV,EAAe;AACXzC,MAAAA,MAAM,EAAEA;AADG,KAAf,EAGCE,IAHD,CAGM,UAAAuB,QAAQ,EAAI;AACdiB,MAAAA,OAAO,CAACjB,QAAQ,CAACrB,IAAV,CAAP;AACH,KALD,EAMCuC,KAND,CAMO,UAAArB,GAAG,EAAI;AACVE,MAAAA,MAAM,CAACF,GAAD,CAAN;AACH,KARD;AASH,GAVM,CAAP;AAWH;AAED;;;;;;;AAMA,OAAO,SAASZ,IAAT,CAAc+B,GAAd,EAA8B;AAAA,MAAXrC,IAAW,uEAAJ,EAAI;AACjC,SAAO,IAAImB,OAAJ,CAAY,UAACmB,OAAD,EAAUlB,MAAV,EAAqB;AACpC9B,IAAAA,KAAK,CAACgB,IAAN,CAAW+B,GAAX,EAAgBrC,IAAhB,EACKF,IADL,CACU,UAAAuB,QAAQ,EAAI;AACdiB,MAAAA,OAAO,CAACjB,QAAQ,CAACrB,IAAV,CAAP;AACH,KAHL,EAGO,UAAAkB,GAAG,EAAI;AACNE,MAAAA,MAAM,CAACF,GAAD,CAAN;AACH,KALL;AAMH,GAPM,CAAP;AAQH;AAED;;;;;;;AAMA,OAAO,SAASsB,KAAT,CAAeH,GAAf,EAA+B;AAAA,MAAXrC,IAAW,uEAAJ,EAAI;AAClC,SAAO,IAAImB,OAAJ,CAAY,UAACmB,OAAD,EAAUlB,MAAV,EAAqB;AACpC9B,IAAAA,KAAK,CAACkD,KAAN,CAAYH,GAAZ,EAAiBrC,IAAjB,EACKF,IADL,CACU,UAAAuB,QAAQ,EAAI;AACdiB,MAAAA,OAAO,CAACjB,QAAQ,CAACrB,IAAV,CAAP;AACH,KAHL,EAGO,UAAAkB,GAAG,EAAI;AACNE,MAAAA,MAAM,CAACF,GAAD,CAAN;AACH,KALL;AAMH,GAPM,CAAP;AAQH;AAED;;;;;;;AAMA,OAAO,SAASuB,GAAT,CAAaJ,GAAb,EAA6B;AAAA,MAAXrC,IAAW,uEAAJ,EAAI;AAChC,SAAO,IAAImB,OAAJ,CAAY,UAACmB,OAAD,EAAUlB,MAAV,EAAqB;AACpC9B,IAAAA,KAAK,CAACmD,GAAN,CAAUJ,GAAV,EAAerC,IAAf,EACKF,IADL,CACU,UAAAuB,QAAQ,EAAI;AACdiB,MAAAA,OAAO,CAACjB,QAAQ,CAACrB,IAAV,CAAP;AACH,KAHL,EAGO,UAAAkB,GAAG,EAAI;AACNE,MAAAA,MAAM,CAACF,GAAD,CAAN;AACH,KALL;AAMH,GAPM,CAAP;AAQH","sourcesContent":["import axios from 'axios';\nimport router from 'vue-router'\nimport Cookies from 'js-cookie'\nimport {MessageBox} from 'element-ui';\nexport const test = 'http://127.0.0.1:8092';\n//export const test = 'http://apitest.xyz.com';\n\nexport const requestLogout = params => { return axios.get(`${test}/api/user/logout`, params).then(res => res.data); };\n// 获取全局配置列表\nexport const getProjectConfig = (headers, params) => {\n    return axios.get(`${test}/api/project/config_list`, { params: params, headers:headers}).then(res => res.data); };\n// 获取全局配置列表\nexport const getGlobalPublish = (headers, params) => {\n    return axios.get(`${test}/api/global/publish_list`, { params: params, headers:headers}).then(res => res.data); };\n// 获取项目动态\nexport const getProjectDynamicList = (headers, params) => {\n    return axios.get(`${test}/api/dynamic/dynamic`, { params: params, headers:headers}).then(res => res.data); };\n// 运行自动化用例\nexport const runAutomation = (headers,params) => {\n    return axios.post(`${test}/api/automation/run`, params, {headers}).then(res => res.data); };\n\n// 默认超时设置\naxios.defaults.timeout = 10000;\n// 相对路径设置\naxios.defaults.baseURL ='';\naxios.defaults.crossDomain = true;\naxios.defaults.withCredentials  = true;\n//http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    // 获取token\n    const ticket = Cookies.get('ticket');\n    // 添加token到headers\n    if(ticket){\n      config.headers.Authorization = ticket;\n    }\n    ////参数处理\n    //if(config.method === 'get' && config.url !== '/api/user/login'){\n    //  config.params = config.params;\n    //}else if(config.url !== '/api/user/login'){\n    //  config.data = config.data || {};\n    //  config.params = config.params || {'ticket': ticket};\n    //}\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n);\n\n\n//http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    if (error.response) {\n        switch (error.response.status) {\n            case 403:\n                // 返回 401 清除token信息并跳转到登录页面\n                sessionStorage.removeItem('token');\n                Cookies.remove('ticket');\n                //router.replace({\n                //    path: 'login',\n                //    query: {redirect: router.currentRoute.fullPath}\n                //});\n                MessageBox.alert(\"登录信息超时,请重新登录!\",\"登录超时\",{\n                  confirmButtonText:\"跳转登录页面\",\n                  callback:action => {\n                    window.location.href=\"/\";\n                  }\n                });\n            case 406:\n                // 返回 401 清除token信息并跳转到登录页面\n                //router.replace({\n                //    path: 'login',\n                //    query: {redirect: router.currentRoute.fullPath}\n                //});\n                MessageBox.alert(\"没有权限执行该操作!\",\"没有权限\",{\n                  confirmButtonText:\"关闭\",\n                  callback:action => {\n                    history.go(0);\n                  }\n                });\n        }\n    }\n    return Promise.reject(error.response.data);   // 返回接口返回的错误信息\n  }\n);\n\n\n/**\n * fetch 请求方法\n * @param url\n * @param params\n * @returns {Promise}\n */\nexport function fetch(url, params = {}) {\n\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params: params\n        })\n        .then(response => {\n            resolve(response.data);\n        })\n        .catch(err => {\n            reject(err)\n        })\n    })\n}\n\n/**\n * post 请求方法\n * @param url\n * @param data\n * @returns {Promise}\n */\nexport function post(url, data = {}) {\n    return new Promise((resolve, reject) => {\n        axios.post(url, data)\n            .then(response => {\n                resolve(response.data);\n            }, err => {\n                reject(err);\n            })\n    })\n}\n\n/**\n * patch 方法封装\n * @param url\n * @param data\n * @returns {Promise}\n */\nexport function patch(url, data = {}) {\n    return new Promise((resolve, reject) => {\n        axios.patch(url, data)\n            .then(response => {\n                resolve(response.data);\n            }, err => {\n                reject(err);\n            })\n    })\n}\n\n/**\n * put 方法封装\n * @param url\n * @param data\n * @returns {Promise}\n */\nexport function put(url, data = {}) {\n    return new Promise((resolve, reject) => {\n        axios.put(url, data)\n            .then(response => {\n                resolve(response.data);\n            }, err => {\n                reject(err);\n            })\n    })\n}\n"]}]}