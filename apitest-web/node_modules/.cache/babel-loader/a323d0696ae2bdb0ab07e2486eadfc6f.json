{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/src/permission.js","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/permission.js","mtime":1587528109429},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/huangrong/workspace/apitest/apitest-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/huangrong/workspace/apitest/apitest-web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport { getToken } from '@/utils/auth'; // get token from cookie\n\nimport getPageTitle from '@/utils/get-page-title';\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['/login', '/auth-redirect']; // no redirect whitelist\n\nrouter.beforeEach( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken, hasRoles, _yield$store$dispatch, roles, accessRoutes;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // start progress bar\n            NProgress.start(); // set page title\n\n            document.title = getPageTitle(to.meta.title); // determine whether the user has logged in\n\n            hasToken = getToken();\n\n            if (!hasToken) {\n              _context.next = 35;\n              break;\n            }\n\n            if (!(to.path === '/login')) {\n              _context.next = 9;\n              break;\n            }\n\n            // if is logged in, redirect to the home page\n            next({\n              path: '/'\n            });\n            NProgress.done();\n            _context.next = 33;\n            break;\n\n          case 9:\n            // determine whether the user has obtained his permission roles through getInfo\n            hasRoles = store.getters.roles && store.getters.roles.length > 0;\n\n            if (!hasRoles) {\n              _context.next = 14;\n              break;\n            }\n\n            next();\n            _context.next = 33;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.next = 17;\n            return store.dispatch('user/getInfo');\n\n          case 17:\n            _yield$store$dispatch = _context.sent;\n            roles = _yield$store$dispatch.roles;\n            _context.next = 21;\n            return store.dispatch('permission/generateRoutes', roles);\n\n          case 21:\n            accessRoutes = _context.sent;\n            // dynamically add accessible routes\n            router.addRoutes(accessRoutes); // hack method to ensure that addRoutes is complete\n            // set the replace: true, so the navigation will not leave a history record\n\n            next(_objectSpread(_objectSpread({}, to), {}, {\n              replace: true\n            }));\n            _context.next = 33;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](14);\n            _context.next = 30;\n            return store.dispatch('user/resetToken');\n\n          case 30:\n            Message.error(_context.t0 || 'Has Error');\n            next(\"/login?redirect=\".concat(to.path));\n            NProgress.done();\n\n          case 33:\n            _context.next = 36;\n            break;\n\n          case 35:\n            /* has no token*/\n            if (whiteList.indexOf(to.path) !== -1) {\n              // in the free login whitelist, go directly\n              next();\n            } else {\n              // other pages that do not have permission to access are redirected to the login page.\n              next(\"/login?redirect=\".concat(to.path));\n              NProgress.done();\n            }\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[14, 26]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.afterEach(function () {\n  // finish progress bar\n  NProgress.done();\n});",null]}