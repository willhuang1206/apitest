{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/auto.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/auto.vue","mtime":1590475921461},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { test } from '@/api/api';\nimport NavMenu from \"@/components/navMenu.vue\";\nimport $ from 'jquery';\nimport axios from 'axios';\nexport default {\n  components: {\n    NavMenu: NavMenu\n  },\n  data: function data() {\n    return {\n      project: \"\",\n      groupData: [],\n      GroupForm: {\n        title: '',\n        visible: false,\n        loading: false,\n        rules: {\n          name: [{\n            required: true,\n            message: '请输入分组名称',\n            trigger: 'blur'\n          }]\n        },\n        //新增界面数据\n        data: {\n          name: '',\n          id: '',\n          parentId: ''\n        }\n      },\n      filters: {\n        name: ''\n      },\n      api: [],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      apiView: true\n    };\n  },\n  methods: {\n    // 获取自动化分组\n    getAutomationGroup: function getAutomationGroup() {\n      var self = this;\n      axios.get(test + \"/api/automation/group\", {\n        params: {\n          project_id: Number(this.$route.params.project_id)\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code === '999999') {\n          self.groupData = data.data;\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    // 添加分组弹窗显示\n    handleAddGroup: function handleAddGroup(groupId) {\n      this.GroupForm.visible = true;\n      this.GroupForm.title = \"新增分组\";\n      this.GroupForm.data = {\n        name: '',\n        id: '',\n        parentId: groupId\n      };\n    },\n    // 修改分组弹窗显示\n    handleEditGroup: function handleEditGroup(groupId, name) {\n      this.GroupForm.visible = true;\n      this.GroupForm.title = \"修改分组\";\n      this.GroupForm.data.id = groupId;\n      this.GroupForm.data = {\n        name: name,\n        id: groupId,\n        parentId: ''\n      };\n    },\n    //删除分组\n    handleDelGroup: function handleDelGroup(id) {\n      var _this = this;\n\n      this.$confirm('确认删除该分组吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        //NProgress.start();\n        var self = _this;\n        var params = {\n          id: Number(id),\n          project_id: Number(_this.$route.params.project_id)\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(\"\".concat(test, \"/api/automation/del_group\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data = res.data,\n              msg = _res$data.msg,\n              code = _res$data.code,\n              data = _res$data.data;\n\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.getAutomationGroup();\n        });\n      }).catch(function () {});\n    },\n    // 添加分组\n    GroupFormSubmit: function GroupFormSubmit() {\n      var _this2 = this;\n\n      this.$refs.GroupForm.validate(function (valid) {\n        if (valid) {\n          var self = _this2;\n\n          _this2.$confirm('确认提交吗？', '提示', {}).then(function () {\n            self.GroupForm.loading = true; //NProgress.start();\n\n            var params = {\n              project_id: Number(_this2.$route.params.project_id),\n              name: self.GroupForm.data.name\n            };\n            var url = '';\n\n            if (self.GroupForm.data.id != '') {\n              url = \"\".concat(test, \"/api/automation/update_name_group\");\n              params[\"id\"] = self.GroupForm.data.id;\n            } else {\n              url = \"\".concat(test, \"/api/automation/add_group\");\n              params[\"parent_id\"] = self.GroupForm.data.parentId;\n            }\n\n            var headers = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + sessionStorage.getItem('token')\n            };\n            axios.post(url, params, {\n              headers: headers\n            }).then(function (res) {\n              var _res$data2 = res.data,\n                  msg = _res$data2.msg,\n                  code = _res$data2.code,\n                  data = _res$data2.data;\n              self.GroupForm.loading = false;\n\n              if (code === '999999') {\n                self.$message({\n                  message: '执行成功',\n                  center: true,\n                  type: 'success'\n                });\n                self.$refs['GroupForm'].resetFields();\n                self.GroupForm.visible = false;\n                self.getAutomationGroup();\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n                self.$refs['GroupForm'].resetFields();\n                self.GroupForm.visible = false;\n                self.getAutomationGroup();\n              }\n            });\n          }).catch(function () {});\n\n          ;\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getAutomationGroup();\n    this.project = this.$route.params.project_id;\n  }\n};",null]}