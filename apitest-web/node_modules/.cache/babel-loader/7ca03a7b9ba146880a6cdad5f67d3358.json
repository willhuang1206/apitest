{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-vue/src/views/config/config-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-vue/src/views/config/config-list.vue","mtime":1588136833681},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _api = require(\"../../api/api\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import NProgress from 'nprogress'\nvar _default = {\n  data: function data() {\n    return {\n      globalConfig: [],\n      type: [{\n        value: 'config',\n        label: '配置'\n      }, {\n        value: 'tag',\n        label: '标签'\n      }],\n      filters: {\n        name: ''\n      },\n      total: 0,\n      page: 1,\n      pages: 0,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      editForm: {\n        data: {\n          id: '',\n          name: '',\n          type: 'config',\n          value: '',\n          description: ''\n        },\n        visible: false,\n        loading: false,\n        rules: {\n          name: [{\n            required: true,\n            message: '请输入名称',\n            trigger: 'blur'\n          }, {\n            min: 1,\n            max: 50,\n            message: '长度在 1 到 50 个字符',\n            trigger: 'blur'\n          }],\n          type: [{\n            required: true,\n            message: '请选择类型',\n            trigger: 'blur'\n          }],\n          value: [{\n            required: true,\n            message: '请输入值',\n            trigger: 'blur'\n          }],\n          description: [{\n            required: false,\n            message: '请输入描述',\n            trigger: 'blur'\n          }, {\n            max: 1024,\n            message: '不能超过1024个字符',\n            trigger: 'blur'\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    // 获取HOST列表\n    getGlobalConfig: function getGlobalConfig() {\n      this.listLoading = true;\n      var self = this;\n      var params = {\n        page: self.page,\n        name: self.filters.name,\n        type: self.filters.type\n      };\n      var headers = {\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n\n      _axios.default.get(\"\".concat(_api.test, \"/api/global/config_list\"), {\n        params: params,\n        headers: headers\n      }).then(function (res) {\n        var _res$data = res.data,\n            msg = _res$data.msg,\n            code = _res$data.code,\n            data = _res$data.data;\n        self.listLoading = false;\n\n        if (code === '999999') {\n          self.total = data.total;\n          self.globalConfig = data.data;\n          self.pages = data.pages;\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    },\n    handleSearch: function handleSearch() {\n      this.page = 1;\n      this.getGlobalConfig();\n    },\n    //删除\n    handleDel: function handleDel(index, row) {\n      var _this = this;\n\n      this.$confirm('确认删除配置[' + row.name + ']吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this.listLoading = true; //NProgress.start();\n\n        var self = _this;\n        var params = {\n          ids: [row.id]\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        };\n\n        _axios.default.post(\"\".concat(_api.test, \"/api/global/del_config\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data2 = res.data,\n              msg = _res$data2.msg,\n              code = _res$data2.code,\n              data = _res$data2.data;\n\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.getGlobalConfig();\n        });\n      }).catch(function () {});\n    },\n    handleChangeStatus: function handleChangeStatus(index, row) {\n      var self = this;\n      this.listLoading = true;\n      var params = {\n        config_id: Number(row.id)\n      };\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      };\n\n      if (row.status) {\n        _axios.default.post(\"\".concat(_api.test, \"/api/global/disable_config\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data3 = res.data,\n              msg = _res$data3.msg,\n              code = _res$data3.code,\n              data = _res$data3.data;\n          self.listLoading = false;\n\n          if (code === '999999') {\n            self.$message({\n              message: '禁用成功',\n              center: true,\n              type: 'success'\n            });\n            row.status = !row.status;\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n        });\n      } else {\n        _axios.default.post(\"\".concat(_api.test, \"/api/global/enable_config\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data4 = res.data,\n              msg = _res$data4.msg,\n              code = _res$data4.code,\n              data = _res$data4.data;\n          self.listLoading = false;\n\n          if (code === '999999') {\n            self.$message({\n              message: '启用成功',\n              center: true,\n              type: 'success'\n            });\n            row.status = !row.status;\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n        });\n      }\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getGlobalConfig();\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit(index, row) {\n      this.editForm.title = \"编辑\";\n      this.editForm.visible = true;\n      this.editForm.data = Object.assign({}, row);\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.editForm.title = \"新增\";\n      this.editForm.visible = true;\n      this.editForm.data = {\n        id: '',\n        name: '',\n        type: 'config',\n        value: '',\n        description: ''\n      };\n    },\n    //编辑\n    editSubmit: function editSubmit() {\n      var _this2 = this;\n\n      var self = this;\n      this.$refs.editForm.validate(function (valid) {\n        if (valid) {\n          _this2.$confirm('确认提交吗？', '提示', {}).then(function () {\n            self.editForm.loading = true; //NProgress.start();\n\n            var params = {\n              name: self.editForm.data.name,\n              type: self.editForm.data.type,\n              value: self.editForm.data.value,\n              description: self.editForm.data.description\n            };\n            var url = \"\".concat(_api.test, \"/api/global/add_config\");\n\n            if (self.editForm.data.id != \"\") {\n              params[\"id\"] = Number(self.editForm.data.id);\n              url = \"\".concat(_api.test, \"/api/global/update_config\");\n            }\n\n            var headers = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n            };\n\n            _axios.default.post(url, params, {\n              headers: headers\n            }).then(function (res) {\n              var _res$data5 = res.data,\n                  msg = _res$data5.msg,\n                  code = _res$data5.code,\n                  data = _res$data5.data;\n              self.editForm.loading = false;\n\n              if (code === '999999') {\n                self.$message({\n                  message: '执行成功',\n                  center: true,\n                  type: 'success'\n                });\n                self.$refs['editForm'].resetFields();\n                self.editForm.visible = false;\n                self.getGlobalConfig();\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              }\n            });\n          }).catch(function () {});\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      var ids = this.sels.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认删除选中记录吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.listLoading = true; //NProgress.start();\n\n        var params = {\n          ids: ids\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        };\n\n        _axios.default.post(\"\".concat(_api.test, \"/api/global/del_config\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data6 = res.data,\n              msg = _res$data6.msg,\n              code = _res$data6.code,\n              data = _res$data6.data;\n          self.listLoading = false;\n\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.getGlobalConfig();\n        });\n      }).catch(function () {});\n    }\n  },\n  mounted: function mounted() {\n    this.getGlobalConfig();\n  }\n};\nexports.default = _default;",{"version":3,"sources":["config-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n      <div class=\"filter-container\">\n        <el-input v-model.trim=\"filters.name\" style=\"width: 200px;\" placeholder=\"名称\" @keyup.enter.native=\"handleSearch\"></el-input>\n        <el-select v-model=\"filters.type\"  clearable style=\"width: 200px\" placeholder=\"类型\">\n            <el-option v-for=\"(item,index) in type\" :label=\"item.label\" :value=\"item.value\"></el-option>\n        </el-select>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">查询</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"handleAdd\">新增</el-button>\n      </div>\n      <el-table :data=\"globalConfig\" stripe border highlight-current-row v-loading=\"listLoading\" @selection-change=\"selsChange\" style=\"width: 100%;\">\n            <el-table-column type=\"selection\" min-width=\"5%\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"名称\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"type\" label=\"类型\" min-width=\"10%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"value\" label=\"值\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"description\" label=\"描述\" min-width=\"20%\" show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\" min-width=\"5%\">\n                <template slot-scope=\"scope\">\n                    <img v-show=\"scope.row.status\" src=\"@/assets/icon-yes.svg\"/>\n                    <img v-show=\"!scope.row.status\" src=\"@/assets/icon-no.svg\"/>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" min-width=\"20%\">\n                <template slot-scope=\"scope\">\n                  <!--<el-button-group>-->\n                    <!--<el-button size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>-->\n                    <!--<el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>-->\n                    <!--<el-button type=\"info\" size=\"small\" @click=\"handleChangeStatus(scope.$index, scope.row)\">{{scope.row.status===false?'启用':'禁用'}}</el-button>-->\n                  <!--</el-button-group>-->\n                  <el-dropdown>\n                    <el-button size=\"small\" type=\"primary\" @click=\"handleEdit(scope.$index, scope.row)\" plain>编辑<i class=\"el-icon-arrow-down el-icon--right\"></i></el-button>\n                    <el-dropdown-menu slot=\"dropdown\">\n                      <el-dropdown-item><el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\" plain>删除</el-button></el-dropdown-item>\n                      <el-dropdown-item><el-button type=\"info\" size=\"small\" @click=\"handleChangeStatus(scope.$index, scope.row)\" plain>{{scope.row.status===false?'启用':'禁用'}}</el-button></el-dropdown-item>\n                    </el-dropdown-menu>\n                  </el-dropdown>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\">\n            <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n            <el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChange\" :current-page.sync=\"page\" :total=\"total\" :page-size=\"20\" :page-count=\"pages\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n\n        <!--编辑界面-->\n        <el-dialog width=\"40%\" :title=\"editForm.title\" :visible.sync=\"editForm.visible\" :close-on-click-modal=\"false\">\n            <el-form :model=\"editForm.data\"  :rules=\"editForm.rules\" ref=\"editForm\" label-width=\"80px\">\n                <el-form-item label=\"名称\" prop=\"name\">\n                    <el-input v-model.trim=\"editForm.data.name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"类型\" prop=\"type\">\n                    <el-select v-model=\"editForm.data.type\"  placeholder=\"类型\">\n                        <el-option v-for=\"(item,index) in type\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"值\" prop='value'>\n                    <el-input type=\"textarea\" :rows=\"5\" v-model.trim=\"editForm.data.value\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"描述\" prop='description'>\n                    <el-input type=\"textarea\" :rows=\"5\" v-model.trim=\"editForm.data.description\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"editForm.visible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editForm.loading\">提交</el-button>\n            </div>\n        </el-dialog>\n  </div>\n</template>\n\n<script>\n  //import NProgress from 'nprogress'\n    import { test} from '../../api/api';\n    import axios from \"axios\";\n    export default {\n        data() {\n            return {\n                globalConfig:[],\n                type: [{value: 'config', label: '配置'},\n                    {value: 'tag', label: '标签'}],\n                filters: {\n                    name: ''\n                },\n                total: 0,\n                page: 1,\n                pages: 0,\n                listLoading: false,\n                sels: [],//列表选中列\n                editForm:{\n                    data: {\n                        id: '',\n                        name: '',\n                        type: 'config',\n                        value: '',\n                        description: ''\n                    },\n                    visible: false,\n                    loading: false,\n                    rules: {\n                        name: [\n                            { required: true, message: '请输入名称', trigger: 'blur' },\n                            { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                        ],\n                        type : [\n                            { required: true, message: '请选择类型', trigger: 'blur'}\n                        ],\n                        value: [\n                            { required: true, message: '请输入值', trigger: 'blur' },\n                        ],\n                        description: [\n                            { required: false, message: '请输入描述', trigger: 'blur' },\n                            { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                        ]\n                    },\n                },\n            }\n        },\n        methods: {\n            // 获取HOST列表\n            getGlobalConfig() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    page: self.page,\n                    name: self.filters.name,\n                    type: self.filters.type,\n                };\n                let headers = {\n                    Authorization: 'Token '+sessionStorage.getItem('token')\n                };\n                axios.get(`${test}/api/global/config_list`, { params: params, headers:headers}).then(res => {\n                    let { msg, code, data } = res.data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        self.total = data.total;\n                        self.globalConfig = data.data;\n                        self.pages=data.pages;\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                });\n            },\n            handleSearch(){\n                this.page=1;\n                this.getGlobalConfig();\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除配置[' + row.name + ']吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let params = {\n                        ids: [row.id, ]\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    };\n                    axios.post(`${test}/api/global/del_config`, params, {headers}).then(res => {\n                        let { msg, code, data } = res.data;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalConfig()\n                    });\n                }).catch(() => {\n                });\n            },\n            handleChangeStatus: function(index, row) {\n                let self = this;\n                this.listLoading = true;\n                let params = {\n                    config_id: Number(row.id)\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                };\n                if (row.status) {\n                    axios.post(`${test}/api/global/disable_config`, params, {headers}).then(res => {\n                        let {msg, code, data} = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '禁用成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            row.status = !row.status;\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                    });\n                } else {\n                    axios.post(`${test}/api/global/enable_config`, params, {headers}).then(res => {\n                        let {msg, code, data} = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '启用成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            row.status = !row.status;\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                    });\n                }\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getGlobalConfig()\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.editForm.title=\"编辑\";\n                this.editForm.visible = true;\n                this.editForm.data = Object.assign({}, row);\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.editForm.title=\"新增\";\n                this.editForm.visible = true;\n                this.editForm.data = {\n                        id: '',\n                        name: '',\n                        type: 'config',\n                        value: '',\n                        description: ''\n                    };\n            },\n            //编辑\n            editSubmit: function () {\n                let self = this;\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.editForm.loading = true;\n                            //NProgress.start();\n                            let params = {\n                                name: self.editForm.data.name,\n                                type: self.editForm.data.type,\n                                value: self.editForm.data.value,\n                                description: self.editForm.data.description\n                            };\n                            let url=`${test}/api/global/add_config`;\n                            if(self.editForm.data.id!=\"\"){\n                                params[\"id\"]=Number(self.editForm.data.id);\n                                url=`${test}/api/global/update_config`;\n                            }\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                            };\n                            axios.post(url, params, {headers}).then(res => {\n                                let {msg, code, data} = res.data;\n                                self.editForm.loading = false;\n                                if (code === '999999') {\n                                    self.$message({\n                                        message: '执行成功',\n                                        center: true,\n                                        type: 'success'\n                                    });\n                                    self.$refs['editForm'].resetFields();\n                                    self.editForm.visible = false;\n                                    self.getGlobalConfig()\n                                } else if (code === '999997'){\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                } else {\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                }\n                            })\n                        }).catch(() => {});\n                    }\n                });\n            },\n            selsChange: function (sels) {\n                this.sels = sels;\n            },\n            //批量删除\n            batchRemove: function () {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认删除选中记录吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    let params = {\n                        ids: ids\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n                    };\n                    axios.post(`${test}/api/global/del_config`, params, {headers}).then(res => {\n                        let {msg, code, data} = res.data;\n                        self.listLoading = false;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getGlobalConfig()\n                    })\n                }).catch(() => {});\n            }\n        },\n        mounted() {\n            this.getGlobalConfig();\n        }\n    }\n</script>\n"],"sourceRoot":"src/views/config"}]}