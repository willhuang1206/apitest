{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/layout/components/Sidebar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/layout/components/Sidebar/index.vue","mtime":1590380748853},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/huangrong/workspace/apitest/apitest-web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport Logo from \"./Logo\";\nimport SidebarItem from \"./SidebarItem\";\nimport _variables from '@/styles/variables.scss';\nexport default {\n  components: {\n    SidebarItem: SidebarItem,\n    Logo: Logo\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['permission_routes', 'sidebar'])), {}, {\n    activeMenu: function activeMenu() {\n      var route = this.$route;\n      var meta = route.meta,\n          path = route.path; // if set path, the sidebar will highlight the path you set\n\n      if (meta.activeMenu) {\n        return meta.activeMenu;\n      }\n\n      return path;\n    },\n    showLogo: function showLogo() {\n      return this.$store.state.settings.sidebarLogo;\n    },\n    variables: function variables() {\n      return _variables;\n    },\n    isCollapse: function isCollapse() {\n      return !this.sidebar.opened;\n    }\n  })\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,IAAA;AACA,OAAA,WAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA,EAAA,WAAA;AAAA,IAAA,IAAA,EAAA;AAAA,GADA;AAEA,EAAA,QAAA,kCACA,UAAA,CAAA,CACA,mBADA,EAEA,SAFA,CAAA,CADA;AAKA,IAAA,UALA,wBAKA;AACA,UAAA,KAAA,GAAA,KAAA,MAAA;AADA,UAEA,IAFA,GAEA,KAFA,CAEA,IAFA;AAAA,UAEA,IAFA,GAEA,KAFA,CAEA,IAFA,EAGA;;AACA,UAAA,IAAA,CAAA,UAAA,EAAA;AACA,eAAA,IAAA,CAAA,UAAA;AACA;;AACA,aAAA,IAAA;AACA,KAbA;AAcA,IAAA,QAdA,sBAcA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,WAAA;AACA,KAhBA;AAiBA,IAAA,SAjBA,uBAiBA;AACA,aAAA,UAAA;AACA,KAnBA;AAoBA,IAAA,UApBA,wBAoBA;AACA,aAAA,CAAA,KAAA,OAAA,CAAA,MAAA;AACA;AAtBA;AAFA,CAAA","sourcesContent":["<template>\n  <div :class=\"{'has-logo':showLogo}\">\n    <logo v-if=\"showLogo\" :collapse=\"isCollapse\" />\n    <el-scrollbar wrap-class=\"scrollbar-wrapper\">\n      <el-menu\n        :default-active=\"activeMenu\"\n        :collapse=\"isCollapse\"\n        :background-color=\"variables.menuBg\"\n        :text-color=\"variables.menuText\"\n        :unique-opened=\"false\"\n        :active-text-color=\"variables.menuActiveText\"\n        :collapse-transition=\"false\"\n        mode=\"vertical\"\n      >\n        <sidebar-item v-for=\"route in permission_routes\" :key=\"route.path\" :item=\"route\" :base-path=\"route.path\" />\n      </el-menu>\n    </el-scrollbar>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport Logo from './Logo'\nimport SidebarItem from './SidebarItem'\nimport variables from '@/styles/variables.scss'\n\nexport default {\n  components: { SidebarItem, Logo },\n  computed: {\n    ...mapGetters([\n      'permission_routes',\n      'sidebar'\n    ]),\n    activeMenu() {\n      const route = this.$route\n      const { meta, path } = route\n      // if set path, the sidebar will highlight the path you set\n      if (meta.activeMenu) {\n        return meta.activeMenu\n      }\n      return path\n    },\n    showLogo() {\n      return this.$store.state.settings.sidebarLogo\n    },\n    variables() {\n      return variables\n    },\n    isCollapse() {\n      return !this.sidebar.opened\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/layout/components/Sidebar"}]}