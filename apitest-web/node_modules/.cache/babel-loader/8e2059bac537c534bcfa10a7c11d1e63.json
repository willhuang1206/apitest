{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/src/main.js","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/main.js","mtime":1590380748857},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"/Users/huangrong/workspace/apitest/apitest-web/node_modules/core-js/modules/es6.array.iterator.js\";\nimport \"/Users/huangrong/workspace/apitest/apitest-web/node_modules/core-js/modules/es6.promise.js\";\nimport \"/Users/huangrong/workspace/apitest/apitest-web/node_modules/core-js/modules/es6.object.assign.js\";\nimport \"/Users/huangrong/workspace/apitest/apitest-web/node_modules/core-js/modules/es7.promise.finally.js\";\nimport Vue from 'vue';\nimport 'normalize.css/normalize.css'; // a modern alternative to CSS resets\n\nimport Element from 'element-ui';\nimport \"./styles/element-variables.scss\";\nimport '@/styles/index.scss'; // global css\n\nimport App from \"./App\";\nimport store from \"./store\";\nimport router from \"./router\";\nimport md5 from 'js-md5';\nimport \"./icons\"; // icon\n\nimport \"./permission\"; // permission control\n\nimport \"./utils/error-log\"; // error log\n\nimport moment from 'moment';\nimport Cookies from 'js-cookie';\nimport JsonViewer from 'vue-json-viewer';\nimport echarts from 'echarts';\nimport * as filters from \"./filters\"; // global filters\n\n/**\n * If you don't want to use mock-server\n * you want to use MockJs for mock api\n * you can execute: mockXHR()\n *\n * Currently MockJs will be used in the production environment,\n * please remove it before going online ! ! !\n */\n\nif (process.env.NODE_ENV === 'production') {\n  var _require = require(\"../mock\"),\n      mockXHR = _require.mockXHR;\n\n  mockXHR();\n}\n\nVue.use(Element, {\n  size: Cookies.get('size') || 'medium' // set element-ui default size\n\n});\nVue.use(JsonViewer); // register global utility filters\n\nObject.keys(filters).forEach(function (key) {\n  Vue.filter(key, filters[key]);\n});\nVue.config.productionTip = false;\nVue.prototype.md5 = md5;\nVue.prototype.$moment = moment;\nVue.prototype.$echarts = echarts;\nnew Vue({\n  el: '#app',\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.path === '/login') {\n    sessionStorage.removeItem('token');\n  }\n\n  var ticket = Cookies.get('ticket'); //  let token = JSON.parse(sessionStorage.getItem('token'));\n\n  if (!ticket && to.path !== '/login') {\n    console.log(to.path);\n    next({\n      path: '/login',\n      query: {\n        url: to.path\n      }\n    });\n  } else {\n    next();\n  }\n\n  if (to.path === '/') {\n    next({\n      path: '/projectList'\n    });\n  }\n});",{"version":3,"sources":["/Users/huangrong/workspace/apitest/apitest-web/src/main.js"],"names":["Vue","Element","App","store","router","md5","moment","Cookies","JsonViewer","echarts","filters","process","env","NODE_ENV","require","mockXHR","use","size","get","Object","keys","forEach","key","filter","config","productionTip","prototype","$moment","$echarts","el","render","h","beforeEach","to","from","next","path","sessionStorage","removeItem","ticket","console","log","query","url"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAO,6BAAP,C,CAAqC;;AACrC,OAAOC,OAAP,MAAoB,YAApB;AACA;AACA,OAAO,qBAAP,C,CAA6B;;AAC7B,OAAOC,GAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,iB,CAAiB;;AACjB,sB,CAAsB;;AACtB,2B,CAA2B;;AAC3B,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,KAAKC,OAAZ,kB,CAAqC;;AAErC;;;;;;;;;AAQA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAAA,iBACrBC,OAAO,WADc;AAAA,MACjCC,OADiC,YACjCA,OADiC;;AAEzCA,EAAAA,OAAO;AACR;;AAEDf,GAAG,CAACgB,GAAJ,CAAQf,OAAR,EAAiB;AACfgB,EAAAA,IAAI,EAAEV,OAAO,CAACW,GAAR,CAAY,MAAZ,KAAuB,QADd,CACuB;;AADvB,CAAjB;AAGAlB,GAAG,CAACgB,GAAJ,CAAQR,UAAR,E,CAEA;;AACAW,MAAM,CAACC,IAAP,CAAYV,OAAZ,EAAqBW,OAArB,CAA6B,UAAAC,GAAG,EAAI;AAClCtB,EAAAA,GAAG,CAACuB,MAAJ,CAAWD,GAAX,EAAgBZ,OAAO,CAACY,GAAD,CAAvB;AACD,CAFD;AAIAtB,GAAG,CAACwB,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AACAzB,GAAG,CAAC0B,SAAJ,CAAcrB,GAAd,GAAoBA,GAApB;AACAL,GAAG,CAAC0B,SAAJ,CAAcC,OAAd,GAAwBrB,MAAxB;AACAN,GAAG,CAAC0B,SAAJ,CAAcE,QAAd,GAAyBnB,OAAzB;AAEA,IAAIT,GAAJ,CAAQ;AACN6B,EAAAA,EAAE,EAAE,MADE;AAENzB,EAAAA,MAAM,EAANA,MAFM;AAGND,EAAAA,KAAK,EAALA,KAHM;AAIN2B,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAAC7B,GAAD,CAAL;AAAA;AAJH,CAAR;AAOAE,MAAM,CAAC4B,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC,MAAIF,EAAE,CAACG,IAAH,KAAY,QAAhB,EAA0B;AACxBC,IAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACD;;AACD,MAAMC,MAAM,GAAGhC,OAAO,CAACW,GAAR,CAAY,QAAZ,CAAf,CAJoC,CAKpC;;AACA,MAAI,CAACqB,MAAD,IAAWN,EAAE,CAACG,IAAH,KAAY,QAA3B,EAAqC;AACnCI,IAAAA,OAAO,CAACC,GAAR,CAAYR,EAAE,CAACG,IAAf;AACAD,IAAAA,IAAI,CAAC;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBM,MAAAA,KAAK,EAAE;AAAEC,QAAAA,GAAG,EAAEV,EAAE,CAACG;AAAV;AAAzB,KAAD,CAAJ;AACD,GAHD,MAGO;AACLD,IAAAA,IAAI;AACL;;AACD,MAAIF,EAAE,CAACG,IAAH,KAAY,GAAhB,EAAqB;AACnBD,IAAAA,IAAI,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAJ;AACD;AACF,CAfD","sourcesContent":["import Vue from 'vue'\nimport 'normalize.css/normalize.css' // a modern alternative to CSS resets\nimport Element from 'element-ui'\nimport './styles/element-variables.scss'\nimport '@/styles/index.scss' // global css\nimport App from './App'\nimport store from './store'\nimport router from './router'\nimport md5 from 'js-md5'\nimport './icons' // icon\nimport './permission' // permission control\nimport './utils/error-log' // error log\nimport moment from 'moment'\nimport Cookies from 'js-cookie'\nimport JsonViewer from 'vue-json-viewer'\nimport echarts from 'echarts'\n\nimport * as filters from './filters' // global filters\n\n/**\n * If you don't want to use mock-server\n * you want to use MockJs for mock api\n * you can execute: mockXHR()\n *\n * Currently MockJs will be used in the production environment,\n * please remove it before going online ! ! !\n */\nif (process.env.NODE_ENV === 'production') {\n  const { mockXHR } = require('../mock')\n  mockXHR()\n}\n\nVue.use(Element, {\n  size: Cookies.get('size') || 'medium' // set element-ui default size\n})\nVue.use(JsonViewer);\n\n// register global utility filters\nObject.keys(filters).forEach(key => {\n  Vue.filter(key, filters[key])\n})\n\nVue.config.productionTip = false\nVue.prototype.md5 = md5\nVue.prototype.$moment = moment;\nVue.prototype.$echarts = echarts;\n\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App)\n})\n\nrouter.beforeEach((to, from, next) => {\n  if (to.path === '/login') {\n    sessionStorage.removeItem('token')\n  }\n  const ticket = Cookies.get('ticket')\n  //  let token = JSON.parse(sessionStorage.getItem('token'));\n  if (!ticket && to.path !== '/login') {\n    console.log(to.path)\n    next({ path: '/login', query: { url: to.path }})\n  } else {\n    next()\n  }\n  if (to.path === '/') {\n    next({ path: '/projectList' })\n  }\n})\n"]}]}