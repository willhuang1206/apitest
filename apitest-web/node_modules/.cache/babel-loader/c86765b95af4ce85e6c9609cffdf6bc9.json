{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/user/userList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/user/userList.vue","mtime":1588749633820},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/huangrong/workspace/apitest/apitest-web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import NProgress from 'nprogress'\nimport { test } from \"../../api/api\";\nimport axios from 'axios';\nimport md5 from 'js-md5';\nexport default {\n  data: function data() {\n    return _defineProperty({\n      filters: {\n        name: ''\n      },\n      total: 0,\n      page: 1,\n      pages: 0,\n      users: [],\n      userlist: [],\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      editForm: {\n        id: \"\",\n        visible: false,\n        loading: false,\n        title: \"新增\",\n        username: \"\",\n        name: \"\",\n        password: \"\",\n        checkPass: \"\",\n        email: \"\",\n        phone: \"\",\n        rules: {\n          username: [{\n            required: true,\n            message: '请输入用户名',\n            trigger: 'blur'\n          }, {\n            min: 4,\n            max: 10,\n            message: '长度在 4 到 10 个字符',\n            trigger: 'blur'\n          }],\n          name: [{\n            required: true,\n            message: '请输入姓名',\n            trigger: 'blur'\n          }, {\n            min: 2,\n            max: 4,\n            message: '长度在 2 到 4 个字符',\n            trigger: 'blur'\n          }],\n          password: [{\n            required: true,\n            message: '请输入密码',\n            trigger: 'blur'\n          }, {\n            min: 6,\n            max: 50,\n            message: '长度至少为6',\n            trigger: 'blur'\n          }],\n          checkPass: [{\n            required: true,\n            message: '请再次输入密码',\n            trigger: 'blur'\n          }, {\n            min: 6,\n            max: 50,\n            message: '长度至少为6',\n            trigger: 'blur'\n          }],\n          email: [{\n            required: true,\n            message: '请输入邮箱',\n            trigger: 'blur'\n          }]\n        }\n      }\n    }, \"users\", {\n      visible: false,\n      loading: false,\n      list: [],\n      total: 0,\n      page: 1,\n      pages: 0,\n      selUsers: []\n    });\n  },\n  methods: {\n    handleSearch: function handleSearch() {\n      this.page = 1;\n      this.getGlobalUser();\n    },\n    getGlobalUser: function getGlobalUser() {\n      this.listLoading = true;\n      var self = this;\n      var params = {\n        page: self.page,\n        name: self.filters.name\n      };\n      var headers = {\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get(test + \"/api/global/user_list\", {\n        params: params\n      }).then(function (response) {\n        self.listLoading = false;\n\n        if (response.data.code === '999999') {\n          self.total = response.data.data.total;\n          self.pages = response.data.data.pages;\n          self.userlist = [];\n          response.data.data.data.forEach(function (item) {\n            self.userlist.push(item);\n          });\n        } else {\n          self.$message.error({\n            message: response.data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    getUsers: function getUsers() {\n      var self = this;\n      self.users.loading = true;\n      var params = {\n        page: self.users.page\n      };\n      axios.get(test + \"/api/global/get_users\", {\n        params: params\n      }).then(function (response) {\n        self.users.loading = false;\n\n        if (response.data.code === '999999') {\n          self.users.list = response.data.data.data;\n          self.users.total = response.data.data.total;\n          self.users.pages = response.data.data.pages;\n        } else {\n          self.$message.error({\n            message: response.data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    //删除\n    handleDel: function handleDel(index, row) {\n      var _this = this;\n\n      this.$confirm('确认删除用户[' + row.name + ']吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this.listLoading = true; //NProgress.start();\n\n        var self = _this;\n        var params = {\n          ids: [row.id]\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(test + \"/api/global/del_user\", params, {\n          headers: headers\n        }).then(function (response) {\n          var data = response.data;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            });\n          }\n\n          self.getGlobalUser();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getGlobalUser();\n    },\n    handleCurrentChangeUser: function handleCurrentChangeUser(val) {\n      this.users.page = val;\n      this.getUsers();\n    },\n    //显示编辑界面\n    handleEdit: function handleEdit(index, row) {\n      this.editForm.visible = true;\n      this.editForm.title = \"编辑\";\n\n      try {\n        this.editForm.id = row.id;\n        this.editForm.username = row.username;\n        this.editForm.name = row.name;\n        this.editForm.password = row.password;\n        this.editForm.checkPass = row.password;\n        this.editForm.email = row.email;\n        this.editForm.phone = row.phone; //                    this.editForm = {\"id\":row.id,\"username\":row.username,\"name\":row.name,\"password\":row.password,\"checkPass\":row.password,\"email\":row.email,\"phone\":row.phone};\n      } catch (err) {\n        alert(err);\n      }\n    },\n    //显示新增界面\n    handleAdd: function handleAdd() {\n      this.editForm.id = \"\";\n      this.editForm.username = \"\";\n      this.editForm.name = \"\";\n      this.editForm.password = \"\";\n      this.editForm.checkPass = \"\";\n      this.editForm.email = \"\";\n      this.editForm.phone = \"\";\n      this.editForm.visible = true;\n      this.editForm.title = \"新增\";\n    },\n    handleLink: function handleLink() {\n      this.users.visible = true;\n      this.users.page = 1;\n      this.getUsers();\n    },\n    linkUsersSubmit: function linkUsersSubmit() {\n      var ids = this.users.selUsers.map(function (item) {\n        return item.user_id;\n      });\n      var self = this;\n      this.$confirm('确认关联选中的用户吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.listLoading = true; //NProgress.start();\n\n        var params = JSON.stringify({\n          ids: ids\n        });\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(test + \"/api/global/link_users\", params, {\n          headers: headers\n        }).then(function (response) {\n          self.listLoading = false;\n\n          if (response.data.code === '999999') {\n            self.$message({\n              message: '关联成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: response.data.msg,\n              center: true\n            });\n          }\n\n          self.users.visible = false;\n          self.getGlobalUser();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    },\n    //编辑\n    editFormSubmit: function editFormSubmit() {\n      var _this2 = this;\n\n      if (this.editForm.password != this.editForm.checkPass) {\n        this.$message.error({\n          message: \"两次输入的密码不一致,请重新输入!\",\n          center: true\n        });\n        return;\n      }\n\n      var self = this;\n      this.$refs.editForm.validate(function (valid) {\n        if (valid) {\n          _this2.$confirm('确认提交吗？', '提示', {}).then(function () {\n            self.editForm.loading = true; //NProgress.start();\n\n            var params = {\n              id: Number(self.editForm.id),\n              username: self.editForm.username,\n              name: self.editForm.name,\n              password: md5(self.editForm.password),\n              email: self.editForm.email,\n              phone: self.editForm.phone\n            };\n            var headers = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + sessionStorage.getItem('token')\n            };\n            var url = test + \"/api/global/add_user\";\n\n            if (self.editForm.id != \"\") {\n              url = test + \"/api/global/update_user\";\n            }\n\n            axios.post(url, params, {\n              headers: headers\n            }).then(function (response) {\n              self.editForm.loading = false;\n\n              if (response.data.code === '999999') {\n                self.$message({\n                  message: '成功',\n                  center: true,\n                  type: 'success'\n                });\n                self.editForm.visible = false;\n                self.getGlobalUser();\n              } else {\n                self.$message.error({\n                  message: response.data.msg,\n                  center: true\n                });\n              }\n            }).catch(function (error) {});\n          }).catch(function () {});\n        }\n      });\n    },\n    selsChange: function selsChange(sels) {\n      this.sels = sels;\n    },\n    selUsersChange: function selUsersChange(sels) {\n      this.users.selUsers = sels;\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      var ids = this.sels.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认删除选中的用户吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.listLoading = true; //NProgress.start();\n\n        var params = {\n          ids: ids\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(test + \"/api/global/del_user\", params, {\n          headers: headers\n        }).then(function (response) {\n          var data = response.data;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            });\n          }\n\n          self.getGlobalUser();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    }\n  },\n  mounted: function mounted() {\n    this.getGlobalUser();\n  }\n};",null]}