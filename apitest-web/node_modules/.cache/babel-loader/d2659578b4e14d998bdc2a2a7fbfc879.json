{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/auto.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/auto/auto.vue","mtime":1590475921461},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { test } from '@/api/api';\nimport NavMenu from \"@/components/navMenu.vue\";\nimport $ from 'jquery';\nimport axios from 'axios';\nexport default {\n  components: {\n    NavMenu: NavMenu\n  },\n  data: function data() {\n    return {\n      project: \"\",\n      groupData: [],\n      GroupForm: {\n        title: '',\n        visible: false,\n        loading: false,\n        rules: {\n          name: [{\n            required: true,\n            message: '请输入分组名称',\n            trigger: 'blur'\n          }]\n        },\n        //新增界面数据\n        data: {\n          name: '',\n          id: '',\n          parentId: ''\n        }\n      },\n      filters: {\n        name: ''\n      },\n      api: [],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      apiView: true\n    };\n  },\n  methods: {\n    // 获取自动化分组\n    getAutomationGroup: function getAutomationGroup() {\n      var self = this;\n      axios.get(test + \"/api/automation/group\", {\n        params: {\n          project_id: Number(this.$route.params.project_id)\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code === '999999') {\n          self.groupData = data.data;\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    // 添加分组弹窗显示\n    handleAddGroup: function handleAddGroup(groupId) {\n      this.GroupForm.visible = true;\n      this.GroupForm.title = \"新增分组\";\n      this.GroupForm.data = {\n        name: '',\n        id: '',\n        parentId: groupId\n      };\n    },\n    // 修改分组弹窗显示\n    handleEditGroup: function handleEditGroup(groupId, name) {\n      this.GroupForm.visible = true;\n      this.GroupForm.title = \"修改分组\";\n      this.GroupForm.data.id = groupId;\n      this.GroupForm.data = {\n        name: name,\n        id: groupId,\n        parentId: ''\n      };\n    },\n    //删除分组\n    handleDelGroup: function handleDelGroup(id) {\n      var _this = this;\n\n      this.$confirm('确认删除该分组吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        //NProgress.start();\n        var self = _this;\n        var params = {\n          id: Number(id),\n          project_id: Number(_this.$route.params.project_id)\n        };\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        };\n        axios.post(\"\".concat(test, \"/api/automation/del_group\"), params, {\n          headers: headers\n        }).then(function (res) {\n          var _res$data = res.data,\n              msg = _res$data.msg,\n              code = _res$data.code,\n              data = _res$data.data;\n\n          if (code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.getAutomationGroup();\n        });\n      }).catch(function () {});\n    },\n    // 添加分组\n    GroupFormSubmit: function GroupFormSubmit() {\n      var _this2 = this;\n\n      this.$refs.GroupForm.validate(function (valid) {\n        if (valid) {\n          var self = _this2;\n\n          _this2.$confirm('确认提交吗？', '提示', {}).then(function () {\n            self.GroupForm.loading = true; //NProgress.start();\n\n            var params = {\n              project_id: Number(_this2.$route.params.project_id),\n              name: self.GroupForm.data.name\n            };\n            var url = '';\n\n            if (self.GroupForm.data.id != '') {\n              url = \"\".concat(test, \"/api/automation/update_name_group\");\n              params[\"id\"] = self.GroupForm.data.id;\n            } else {\n              url = \"\".concat(test, \"/api/automation/add_group\");\n              params[\"parent_id\"] = self.GroupForm.data.parentId;\n            }\n\n            var headers = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + sessionStorage.getItem('token')\n            };\n            axios.post(url, params, {\n              headers: headers\n            }).then(function (res) {\n              var _res$data2 = res.data,\n                  msg = _res$data2.msg,\n                  code = _res$data2.code,\n                  data = _res$data2.data;\n              self.GroupForm.loading = false;\n\n              if (code === '999999') {\n                self.$message({\n                  message: '执行成功',\n                  center: true,\n                  type: 'success'\n                });\n                self.$refs['GroupForm'].resetFields();\n                self.GroupForm.visible = false;\n                self.getAutomationGroup();\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n                self.$refs['GroupForm'].resetFields();\n                self.GroupForm.visible = false;\n                self.getAutomationGroup();\n              }\n            });\n          }).catch(function () {});\n\n          ;\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getAutomationGroup();\n    this.project = this.$route.params.project_id;\n  }\n};",{"version":3,"sources":["auto.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section>\n        <el-row :span=\"24\" class=\"row-title\">\n            <el-col :span=\"5\">\n                <el-button class=\"addGroup\" @click=\"handleAddGroup(0)\">新增分组</el-button>\n                <div class=\"api-title\"><strong>自动化分组</strong></div>\n                <div class=\"api-title\" style=\"cursor:pointer;\">\n                    <router-link :to=\"{ name: '自动化列表', params: {project_id: this.$route.params.project_id}}\" style='text-decoration: none;color: aliceblue;'>\n                        所有自动化\n                    </router-link>\n                </div>\n                <aside>\n                    <!--&lt;!&ndash;导航菜单&ndash;&gt;-->\n                    <!--<el-menu default-active=\"2\" class=\"el-menu-vertical-demo\" active-text-color=\"rgb(32, 160, 255)\" :unique-opened=\"true\">-->\n                        <!--<template v-for=\"(item,index) in groupData\">-->\n                            <!--<router-link :to=\"{ name: '分组自动化列表', params: {project_id: project, firstGroup: item.id}}\" style=\"text-decoration:none;\">-->\n                            <!--<el-menu-item :index=\"index+''\" :key=\"item.id\" class=\"group\">-->\n                                <!--<template slot=\"title\">{{item.name}}-->\n                                    <!--<el-dropdown trigger=\"hover\" class=\"editGroup\" style=\"margin-right:10%\">-->\n                                        <!--<i class=\"el-icon-more\"></i>-->\n                                        <!--<el-dropdown-menu slot=\"dropdown\">-->\n                                            <!--<el-dropdown-item @click.native=\"handleDelFirst(item.id)\">删除</el-dropdown-item>-->\n                                            <!--<el-dropdown-item @click.native=\"handleEditFirstGroup(item.id, item.name)\">修改</el-dropdown-item>-->\n                                        <!--</el-dropdown-menu>-->\n                                    <!--</el-dropdown>-->\n                                <!--</template>-->\n                            <!--</el-menu-item>-->\n                            <!--</router-link>-->\n                        <!--</template>-->\n                    <!--</el-menu>-->\n                    <el-menu\n                     default-active=\"0\"\n                     class=\"el-menu-vertical-demo\" router>\n                     <!--background-color=\"#F0F6F6\"-->\n                     <!--text-color=\"#3C3F41\"-->\n                     <!--active-text-color=\"black\">-->\n                     <NavMenu :navMenus=\"groupData\" @handleAdd=\"handleAddGroup\" @handleEdit=\"handleEditGroup\" @handleDel=\"handleDelGroup\"></NavMenu>\n                    </el-menu>\n                </aside>\n            </el-col>\n            <el-dialog :title=\"GroupForm.title\" :visible.sync=\"GroupForm.visible\" :close-on-click-modal=\"false\" style=\"width: 60%; left: 20%\">\n                <el-form :model=\"GroupForm.data\" label-width=\"80px\"  :rules=\"GroupForm.rules\" ref=\"GroupForm\">\n                    <el-form-item label=\"分组名称\" prop='name'>\n                        <el-input v-model.trim=\"GroupForm.data.name\" auto-complete=\"off\" style=\"width: 90%\"></el-input>\n                    </el-form-item>\n                </el-form>\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click.native=\"GroupForm.visible = false\">取消</el-button>\n                    <el-button type=\"primary\" @click.native=\"GroupFormSubmit\" :loading=\"GroupForm.loading\">提交</el-button>\n                </div>\n            </el-dialog>\n            <el-col :span=\"19\">\n                <div style=\"margin-left: 10px;margin-right: 20px\">\n                    <router-view></router-view>\n                </div>\n            </el-col>\n        </el-row>\n    </section>\n</template>\n\n<script>\n    import { test } from '@/api/api'\n    import NavMenu from \"@/components/navMenu.vue\";\n    import $ from 'jquery'\n    import axios from 'axios'\n    export default {\n        components: {\n          NavMenu\n        },\n        data() {\n            return {\n                project: \"\",\n                groupData: [],\n                GroupForm:{\n                    title: '',\n                    visible: false,\n                    loading: false,\n                    rules: {\n                        name: [\n                            { required: true, message: '请输入分组名称', trigger: 'blur' },\n                        ]\n                    },\n                    //新增界面数据\n                    data: {\n                        name: '',\n                        id: '',\n                        parentId: '',\n                    },\n                },\n                filters: {\n                    name: ''\n                },\n                api: [],\n                total: 0,\n                page: 1,\n                listLoading: false,\n                sels: [],//列表选中列\n                apiView: true,\n            }\n        },\n        methods: {\n            // 获取自动化分组\n            getAutomationGroup() {\n                let self = this;\n                axios.get(test+\"/api/automation/group\", {params:{ project_id: Number(this.$route.params.project_id)},headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === '999999') {\n                        self.groupData = data.data;\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            // 添加分组弹窗显示\n            handleAddGroup(groupId) {\n                this.GroupForm.visible = true;\n                this.GroupForm.title=\"新增分组\";\n                this.GroupForm.data={\n                        name: '',\n                        id: '',\n                        parentId: groupId,\n                    };\n            },\n            // 修改分组弹窗显示\n            handleEditGroup(groupId, name) {\n                this.GroupForm.visible = true;\n                this.GroupForm.title=\"修改分组\";\n                this.GroupForm.data.id = groupId;\n                this.GroupForm.data={\n                        name: name,\n                        id: groupId,\n                        parentId: '',\n                    };\n            },\n            //删除分组\n            handleDelGroup: function (id) {\n                this.$confirm('确认删除该分组吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    //NProgress.start();\n                    let self = this;\n                    let params = {\n                        id: Number(id),\n                        project_id: Number(this.$route.params.project_id)\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + sessionStorage.getItem('token')\n                    };\n                    axios.post(`${test}/api/automation/del_group`, params, {headers}).then(res => {\n                        let {msg, code, data} = res.data;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getAutomationGroup()\n                    })\n                }).catch(() => {});\n            },\n            // 添加分组\n            GroupFormSubmit() {\n                this.$refs.GroupForm.validate((valid) => {\n                    if (valid) {\n                        let self = this;\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.GroupForm.loading = true;\n                            //NProgress.start();\n                            let params = {\n                                project_id: Number(this.$route.params.project_id),\n                                name: self.GroupForm.data.name\n                            };\n                            let url='';\n                            if(self.GroupForm.data.id!=''){\n                                url=`${test}/api/automation/update_name_group`;\n                                params[\"id\"]=self.GroupForm.data.id;\n                            }else{\n                                url=`${test}/api/automation/add_group`;\n                                params[\"parent_id\"]=self.GroupForm.data.parentId;\n                            }\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+sessionStorage.getItem('token')\n                            };\n                            axios.post(url, params, {headers}).then(res => {\n                                let {msg, code, data} = res.data;\n                                self.GroupForm.loading = false;\n                                if (code === '999999') {\n                                    self.$message({\n                                        message: '执行成功',\n                                        center: true,\n                                        type: 'success'\n                                    });\n                                    self.$refs['GroupForm'].resetFields();\n                                    self.GroupForm.visible = false;\n                                    self.getAutomationGroup();\n                                } else if (code === '999997'){\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                } else {\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    });\n                                    self.$refs['GroupForm'].resetFields();\n                                    self.GroupForm.visible = false;\n                                    self.getAutomationGroup();\n                                }\n                            })\n                        }).catch(() => {});;\n                    }\n                });\n            },\n        },\n        mounted() {\n            this.getAutomationGroup();\n            this.project = this.$route.params.project_id\n\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .api-title {\n        padding: 15px;\n        margin: 0px;\n        text-align: center;\n        border-radius:5px;\n        font-size: 15px;\n        color: aliceblue;\n        background-color: rgb(32, 160, 255);\n        font-family: PingFang SC;\n    }\n    .group .editGroup {\n        float:right;\n    }\n    .row-title {\n        margin: 35px;\n    }\n    .addGroup {\n        margin-top: 0px;\n        margin-bottom: 10px;\n        border-radius: 25px;\n    }\n</style>\n"],"sourceRoot":"src/views/project/auto"}]}