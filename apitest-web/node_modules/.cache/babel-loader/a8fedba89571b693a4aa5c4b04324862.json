{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-vue/src/views/project/api/apiList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-vue/src/views/project/api/apiList.vue","mtime":1588228449027},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/huangrong/workspace/apitest/apitest-vue/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\nvar _api = require(\"../../../api/api\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//    import SelectTree from \"../../../components/treeSelect.vue\";\nvar _default = {\n  components: {\n    //          SelectTree,\n    Treeselect: _vueTreeselect.default\n  },\n  data: function data() {\n    return {\n      filters: {\n        name: '',\n        type: ''\n      },\n      type: [{\n        value: '',\n        label: ''\n      }, {\n        value: 'http',\n        label: '普通http'\n      }, {\n        value: 'jyb',\n        label: '加油宝app'\n      }, {\n        value: 'service',\n        label: '微服务'\n      }],\n      api: [],\n      total: 0,\n      page: 1,\n      pages: 0,\n      page_size: 20,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      updateGroupFormVisible: false,\n      updateGroupForm: {\n        firstGroup: null\n      },\n      updateGroupFormRules: {\n        firstGroup: [{\n          type: 'number',\n          required: true,\n          message: '请选择分组',\n          trigger: 'blur'\n        }]\n      },\n      group: [],\n      updateGroupLoading: false,\n      update: true,\n      loadSwaggerApi: false,\n      addLoading: false,\n      //新增界面数据\n      swaggerUrl: \"\",\n      updatePublishForm: {\n        visible: false,\n        loading: false,\n        publish: \"\",\n        publishlist: [\"加油宝\", \"资产系统\"],\n        rules: {\n          publish: [{\n            type: 'string',\n            required: true,\n            message: '请选择发布项目',\n            trigger: 'blur'\n          }]\n        }\n      },\n      importApi: {\n        type: \"auto\",\n        types: [{\n          value: 'auto',\n          label: 'auto'\n        }, {\n          value: 'mock.fe',\n          label: 'mock.fe'\n        }],\n        visible: false,\n        loading: false,\n        rules: {\n          fromGroup: [{\n            type: 'string',\n            required: true,\n            message: '请选择源分组',\n            trigger: 'blur'\n          }],\n          toGroup: [{\n            type: 'string',\n            required: true,\n            message: '请选择导入分组',\n            trigger: 'blur'\n          }]\n        },\n        value: null,\n        fromGroup: null,\n        toGroup: null,\n        fromDate: \"\",\n        toDate: \"\",\n        groups: [],\n        fileName: \"\"\n      },\n      uploadActionUrl: _api.test + \"/api/imports/uploadfile\",\n      fileList: []\n    };\n  },\n  methods: {\n    handleUploadSuccess: function handleUploadSuccess(res, file) {\n      this.importApi.fileName = file.name;\n    },\n    // 修改mock状态\n    checkMockStatus: function checkMockStatus(row) {\n      var self = this;\n      var param = JSON.stringify({\n        project_id: Number(this.$route.params.project_id),\n        id: Number(row.id)\n      });\n\n      _axios.default.post(_api.test + \"/api/api/updateMock\", param, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n        self.listLoading = false;\n\n        if (data.code === '999999') {\n          self.$message.success({\n            message: data.msg,\n            center: true\n          });\n          self.getApiList();\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    handleSearch: function handleSearch() {\n      this.page = 1;\n      this.getApiList();\n    },\n    // 获取接口列表\n    getApiList: function getApiList() {\n      this.listLoading = true;\n      var self = this;\n      sessionStorage.setItem(\"api_name\", self.filters.name);\n      sessionStorage.setItem(\"api_type\", self.filters.type);\n      var param = {\n        project_id: this.$route.params.project_id,\n        page: self.page,\n        name: self.filters.name,\n        type: self.filters.type\n      };\n\n      if (this.$route.params.firstGroup) {\n        param['apiGroupLevelFirst_id'] = this.$route.params.firstGroup;\n      }\n\n      _axios.default.get(_api.test + \"/api/api/api_list\", {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n        self.listLoading = false;\n\n        if (data.code === '999999') {\n          self.total = data.data.total;\n          self.pages = data.data.pages;\n          self.page_size = data.data.page_size;\n          self.api = data.data.data;\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    // 获取接口列表\n    getDevApiGroupList: function getDevApiGroupList() {\n      this.importApi.loading = true;\n      var self = this;\n      var param = {};\n      var url = _api.test + \"/api/imports/apidomainlist\";\n\n      if (self.importApi.type == \"mock.fe\") {\n        url = _api.test + \"/api/imports/devapi_grouplist\";\n      }\n\n      _axios.default.get(url, {\n        params: param,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n        self.importApi.loading = false;\n\n        if (data.code === '999999') {\n          self.importApi.groups = data.data;\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    // 修改接口所属分组\n    importApiSubmit: function importApiSubmit() {\n      var _this = this;\n\n      var self = this;\n      this.$confirm('确认导入接口吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this.importApi.loading = true; //NProgress.start();\n\n        var params = JSON.stringify({\n          project_id: Number(_this.$route.params.project_id),\n          group_id: _this.importApi.toGroup,\n          fileName: _this.importApi.fileName\n        });\n        var url = _api.test + \"/api/imports/api_importfrompostman\";\n\n        _axios.default.post(url, params, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Token ' + sessionStorage.getItem('token')\n          }\n        }).then(function (response) {\n          var data = response.data;\n          self.importApi.loading = false;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: data.msg,\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            });\n          }\n\n          self.importApi.visible = false;\n          self.getApiList();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    },\n    // 修改接口所属分组\n    updateGroupSubmit: function updateGroupSubmit() {\n      var _this2 = this;\n\n      var ids = this.sels.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认修改所属分组吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.updateGroupLoading = true; //NProgress.start();\n\n        var params = JSON.stringify({\n          project_id: Number(_this2.$route.params.project_id),\n          apiGroupLevelFirst_id: Number(self.updateGroupForm.firstGroup),\n          ids: ids\n        });\n\n        _axios.default.post(_api.test + \"/api/api/update_group\", params, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Token ' + sessionStorage.getItem('token')\n          }\n        }).then(function (response) {\n          var data = response.data;\n          self.updateGroupLoading = false;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: '修改成功',\n              center: true,\n              type: 'success'\n            });\n            self.$router.push({\n              name: '分组接口列表',\n              params: {\n                project_id: self.$route.params.project_id,\n                firstGroup: self.updateGroupForm.firstGroup\n              }\n            });\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            });\n          }\n\n          self.updateGroupFormVisible = false;\n          self.getApiList();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    },\n    // 修改接口所属发布项目\n    updatePublishSubmit: function updatePublishSubmit() {\n      var _this3 = this;\n\n      var ids = this.sels.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认修改发布项目吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.updatePublishForm.loading = true; //NProgress.start();\n\n        var params = JSON.stringify({\n          project_id: Number(_this3.$route.params.project_id),\n          publish: self.updatePublishForm.publish,\n          ids: ids\n        });\n\n        _axios.default.post(_api.test + \"/api/api/update_publish\", params, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Token ' + sessionStorage.getItem('token')\n          }\n        }).then(function (response) {\n          var data = response.data;\n          self.updatePublishForm.loading = false;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: '修改成功',\n              center: true,\n              type: 'success'\n            }); //\t\t\t\t\t\t\t\t                self.$router.push({ name: '分组接口列表', params: { project_id: self.$route.params.project_id, firstGroup: self.updateGroupForm.firstGroup}});\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            });\n          }\n\n          self.updatePublishForm.visible = false;\n          self.getApiList();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    },\n    // 获取api分组\n    getApiGroup: function getApiGroup() {\n      var self = this;\n\n      _axios.default.get(_api.test + \"/api/api/group\", {\n        params: {\n          project_id: this.$route.params.project_id\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code === '999999') {\n          self.group = data.data;\n        } else {\n          self.$message.error({\n            message: data.msg,\n            center: true\n          });\n        }\n      }).catch(function (error) {});\n    },\n    // 修改分组弹窗\n    changeGroup: function changeGroup() {\n      this.getApiGroup();\n      this.updateGroupFormVisible = true;\n    },\n    changePublish: function changePublish() {\n      this.updatePublishForm.visible = true;\n    },\n    handleImportApi: function handleImportApi() {\n      this.getApiGroup();\n      this.getDevApiGroupList();\n      this.importApi.visible = true;\n    },\n    //删除\n    handleDel: function handleDel(index, row) {\n      var _this4 = this;\n\n      this.$confirm('确认删除接口[' + row.name + ']吗?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this4.listLoading = true; //NProgress.start();\n\n        var self = _this4;\n\n        _axios.default.post(_api.test + \"/api/api/del_api\", JSON.stringify({\n          project_id: Number(_this4.$route.params.project_id),\n          ids: [row.id]\n        }), {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Token ' + sessionStorage.getItem('token')\n          }\n        }).then(function (response) {\n          var data = response.data;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            });\n          }\n\n          self.getApiList();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    },\n    // 下载接口文档\n    DownloadApi: function DownloadApi() {\n      _axios.default.get(_api.test + \"/api/api/Download\", {\n        params: {\n          project_id: this.$route.params.project_id\n        },\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + sessionStorage.getItem('token')\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code === \"999999\") {\n          window.open(_api.test + \"/api/api/download_doc?url=\" + data.data);\n        }\n      }).catch(function (error) {});\n    },\n    // 翻页\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.page = val;\n      this.getApiList();\n    },\n    selsChange: function selsChange(sels) {\n      if (sels.length > 0) {\n        this.sels = sels;\n        this.update = false;\n      } else {\n        this.update = true;\n      }\n    },\n    //批量删除\n    batchRemove: function batchRemove() {\n      var _this5 = this;\n\n      var ids = this.sels.map(function (item) {\n        return item.id;\n      });\n      var self = this;\n      this.$confirm('确认删除选中记录吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        self.listLoading = true; //NProgress.start();\n\n        _axios.default.post(_api.test + \"/api/api/del_api\", JSON.stringify({\n          project_id: Number(_this5.$route.params.project_id),\n          ids: ids\n        }), {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Token ' + sessionStorage.getItem('token')\n          }\n        }).then(function (response) {\n          var data = response.data;\n          self.listLoading = false;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: data.msg,\n              center: true\n            });\n          }\n\n          self.getApiList();\n        }).catch(function (error) {});\n      }).catch(function () {});\n    },\n    addSubmit: function addSubmit() {\n      var self = this;\n      this.addLoading = true;\n      console.log(this.swaggerUrl);\n\n      if (this.swaggerUrl) {\n        _axios.default.post(_api.test + \"/api/api/lead_swagger\", JSON.stringify({\n          project_id: Number(this.$route.params.project_id),\n          url: this.swaggerUrl\n        }), {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Token ' + sessionStorage.getItem('token')\n          }\n        }).then(function (response) {\n          var data = response.data;\n\n          if (data.code === '999999') {\n            self.$message({\n              message: '添加成功',\n              center: true,\n              type: 'success'\n            });\n            self.listLoading = true;\n            self.addLoading = false;\n            self.loadSwaggerApi = false;\n            self.getApiList();\n          } else {\n            self.addLoading = false;\n            self.$message.error({\n              message: \"导入失败，请检查地址是否正确\",\n              center: true\n            });\n          }\n\n          self.getApiList();\n        }).catch(function (error) {});\n      } else {\n        this.addLoading = false;\n      }\n    },\n    load: function load() {\n      if (sessionStorage.getItem(\"api_name\") != null) {\n        this.filters.name = sessionStorage.getItem(\"api_name\");\n      }\n\n      if (sessionStorage.getItem(\"api_type\") != null) {\n        this.filters.type = sessionStorage.getItem(\"api_type\");\n      }\n\n      this.getApiList();\n\n      if (this.$route.params.firstGroup) {\n        this.updateGroupForm.firstGroup = Number(this.$route.params.firstGroup);\n        this.importApi.toGroup = Number(this.$route.params.firstGroup);\n        sessionStorage.setItem(\"api_group\", this.$route.params.firstGroup);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.load();\n  },\n  watch: {\n    '$route': function $route(to, from) {\n      //监听路由是否变化\n      if (to.query != from.query) {\n        this.load();\n      }\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["apiList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<section>\n\t\t<!--工具条-->\n\t\t<el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px;\">\n\t\t\t<el-form :inline=\"true\" :model=\"filters\" @submit.native.prevent>\n\t\t\t\t<el-form-item>\n\t\t\t\t\t<el-input v-model.trim=\"filters.name\" placeholder=\"名称\" @keyup.enter.native=\"handleSearch\"></el-input>\n\t\t\t\t</el-form-item>\n\t\t\t\t<el-form-item>\n            <el-select v-model=\"filters.type\"  placeholder=\"类型\">\n                <el-option v-for=\"(item,index) in type\" :label=\"item.label\" :value=\"item.value\"></el-option>\n            </el-select>\n        </el-form-item>\n\t\t\t\t<el-form-item>\n\t\t\t\t\t<el-button size=\"medium\" type=\"primary\" @click=\"handleSearch\">查询</el-button>\n\t\t\t\t</el-form-item>\n\t\t\t\t<el-form-item>\n\t\t\t\t\t<router-link :to=\"{ name: '新增接口', params: {project_id: this.$route.params.project_id}}\" style='text-decoration: none;color: aliceblue;'>\n\t\t\t\t\t\t<el-button size=\"medium\" type=\"primary\">新增</el-button>\n\t\t\t\t\t</router-link>\n\t\t\t\t</el-form-item>\n        <el-form-item>\n\t\t\t\t\t<el-button size=\"medium\" type=\"primary\" @click=\"handleImportApi\">导入</el-button>\n\t\t\t\t</el-form-item>\n\t\t\t\t<el-form-item>\n\t\t\t\t\t<el-button size=\"medium\" type=\"primary\" :disabled=\"update\" @click=\"changeGroup\">修改分组</el-button>\n\t\t\t\t</el-form-item>\n\t\t\t</el-form>\n\t\t</el-col>\n\t\t<el-dialog width=\"40%\" title=\"修改所属分组\" :visible.sync=\"updateGroupFormVisible\" :close-on-click-modal=\"false\">\n\t\t\t<el-form :model=\"updateGroupForm\" label-width=\"80px\" :rules=\"updateGroupFormRules\" ref=\"updateGroupForm\">\n\t\t\t\t<el-form-item label=\"分组名称\" prop=\"firstGroup\">\n            <treeselect v-model=\"updateGroupForm.firstGroup\" :options=\"group\" placeholder=\"请选择\"/>\n\t\t\t\t</el-form-item>\n\t\t\t</el-form>\n\t\t\t<div slot=\"footer\" class=\"dialog-footer\">\n\t\t\t\t<el-button @click.native=\"updateGroupFormVisible = false\">取消</el-button>\n\t\t\t\t<el-button type=\"primary\" @click.native=\"updateGroupSubmit\" :loading=\"updateGroupLoading\">提交</el-button>\n\t\t\t</div>\n\t\t</el-dialog>\n    <el-dialog width=\"40%\" title=\"设置发布项目\" :visible.sync=\"updatePublishForm.visible\" :close-on-click-modal=\"false\">\n\t\t\t<el-form :model=\"updatePublishForm\" label-width=\"80px\" :rules=\"updatePublishForm.rules\" ref=\"updatePublishForm\">\n\t\t\t\t<el-form-item label=\"发布项目\" prop=\"publish\">\n\t\t\t\t\t<el-select v-model=\"updatePublishForm.publish\" placeholder=\"请选择\">\n\t\t\t\t\t\t<el-option v-for=\"(item,index) in updatePublishForm.publishlist\" :key=\"index+''\" :label=\"item\" :value=\"item\">\n\t\t\t\t\t\t</el-option>\n\t\t\t\t\t</el-select>\n\t\t\t\t</el-form-item>\n\t\t\t</el-form>\n\t\t\t<div slot=\"footer\" class=\"dialog-footer\">\n\t\t\t\t<el-button @click.native=\"updatePublishForm.visible = false\">取消</el-button>\n\t\t\t\t<el-button type=\"primary\" @click.native=\"updatePublishSubmit\" :loading=\"updatePublishForm.loading\">提交</el-button>\n\t\t\t</div>\n\t\t</el-dialog>\n    <el-dialog width=\"40%\" title=\"导入接口\" :visible.sync=\"importApi.visible\" :close-on-click-modal=\"false\">\n\t\t\t<el-form label-width=\"80px\" :rules=\"importApi.rules\">\n        <el-form-item label=\"文件名:\" prop='importApi.fileName'>\n              <el-input v-model.trim=\"importApi.fileName\"></el-input>\n            </el-form-item>\n        <el-form-item label=\"导入分组:\" prop=\"importApi.toGroup\">\n          <treeselect v-model=\"importApi.toGroup\" :options=\"group\" placeholder=\"请选择\"/>\n\t\t\t\t</el-form-item>\n        <el-upload\n              class=\"upload-demo\"\n              :action=\"uploadActionUrl\"\n              :on-success=\"handleUploadSuccess\"\n              :limit=\"1\"\n              accept=\".json\"\n              :file-list=\"fileList\">\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传并导入json文件</div>\n            </el-upload>\n        </el-form>\n\t\t\t<div slot=\"footer\" class=\"dialog-footer\">\n\t\t\t\t<el-button @click.native=\"importApi.visible = false\">取消</el-button>\n\t\t\t\t<el-button type=\"primary\" @click.native=\"importApiSubmit\" :loading=\"importApi.loading\">提交</el-button>\n\t\t\t</div>\n\t\t</el-dialog>\n\t\t<!--列表-->\n\t\t<el-table :data=\"api\" stripe border element-loading-text=\"拼命加载中\" element-loading-spinner=\"el-icon-loading\" highlight-current-row v-loading=\"listLoading\" @selection-change=\"selsChange\" style=\"width: 100%;\">\n\t\t\t<el-table-column type=\"selection\" min-width=\"5%\">\n\t\t\t</el-table-column>\n      <el-table-column prop=\"id\" label=\"ID\" sortable min-width=\"5%\"></el-table-column>\n\t\t\t<el-table-column prop=\"name\" label=\"名称\" sortable min-width=\"15%\" show-overflow-tooltip>\n\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t<!--<el-icon name=\"name\"></el-icon>-->\n\t\t\t\t\t<router-link :to=\"{ name: '基础信息', params: {api_id: scope.row.id}}\" style='text-decoration: none;'>{{ scope.row.name }}</router-link>\n\t\t\t\t</template>\n\t\t\t</el-table-column>\n\t\t\t<el-table-column prop=\"type\" label=\"类型\" min-width=\"5%\" show-overflow-tooltip>\n\t\t\t</el-table-column>\n\t\t\t<el-table-column prop=\"apiAddress\" label=\"地址\" min-width=\"20%\" show-overflow-tooltip>\n\t\t\t</el-table-column>\n\t\t\t<el-table-column prop=\"userUpdate\" label=\"更新人\" min-width=\"5%\" show-overflow-tooltip>\n\t\t\t</el-table-column>\n\t\t\t<el-table-column prop=\"lastUpdateTime\" label=\"更新日期\" min-width=\"10%\" show-overflow-tooltip>\n\t\t\t</el-table-column>\n\t\t\t<!--<el-table-column label=\"Mock\" min-width=\"7%\">-->\n\t\t\t\t<!--<template slot-scope=\"scope\">-->\n\t\t\t\t\t<!--<el-button v-if=\"scope.row.mockStatus\" type=\"success\" size=\"small\" @click=\"checkMockStatus(scope.row)\">关闭</el-button>-->\n\t\t\t\t\t<!--<el-button v-if=\"!scope.row.mockStatus\" type=\"info\" size=\"small\"  @click=\"checkMockStatus(scope.row)\">启动</el-button>-->\n\t\t\t\t<!--</template>-->\n\t\t\t<!--</el-table-column>-->\n\t\t\t<el-table-column label=\"操作\" min-width=\"13%\">\n\t\t\t\t<template slot-scope=\"scope\">\n          <!--<el-button-group>-->\n            <!--<router-link :to=\"{ name: '修改接口', params: {api_id: scope.row.id}}\" style='text-decoration: none;color: aliceblue;'>-->\n              <!--<el-button type=\"primary\" size=\"mini\">修改</el-button>-->\n            <!--</router-link>-->\n\t\t\t\t\t  <!--<el-button type=\"danger\" size=\"mini\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>-->\n          <!--</el-button-group>-->\n          <el-dropdown>\n            <router-link :to=\"{ name: '修改接口', params: {api_id: scope.row.id}}\" style='text-decoration: none;color: aliceblue;'>\n              <el-button type=\"primary\" size=\"small\" plain>修改<i class=\"el-icon-arrow-down el-icon--right\"></i></el-button>\n            </router-link>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item><el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\" plain>删除</el-button></el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n\t\t\t\t</template>\n\t\t\t</el-table-column>\n\t\t</el-table>\n\n\t\t<!--工具条-->\n\t\t<el-col :span=\"24\" class=\"toolbar\">\n\t\t\t<el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n\t\t\t<el-pagination layout=\"total, prev, pager, next\" @current-change=\"handleCurrentChange\" :current-page.sync=\"page\" :total=\"total\" :page-size=\"page_size\" :page-count=\"pages\" style=\"float:right;\">\n\t\t\t</el-pagination>\n\t\t</el-col>\n\t</section>\n</template>\n\n<script>\n//    import SelectTree from \"../../../components/treeSelect.vue\";\n    import Treeselect from '@riophae/vue-treeselect'\n    import '@riophae/vue-treeselect/dist/vue-treeselect.css'\n    import { test } from '../../../api/api'\n    import axios from 'axios'\n    export default {\n        components: {\n//          SelectTree,\n          Treeselect,\n        },\n        data() {\n            return {\n                filters: {\n                    name: '',\n                    type: '',\n                },\n                type: [{value: '', label: ''},\n                    {value: 'http', label: '普通http'},\n                    {value: 'jyb', label: '加油宝app'},\n                    {value: 'service', label: '微服务'}],\n                api: [],\n                total: 0,\n                page: 1,\n                pages: 0,\n                page_size:20,\n                listLoading: false,\n                sels: [],//列表选中列\n                updateGroupFormVisible: false,\n                updateGroupForm: {\n                    firstGroup: null,\n                },\n                updateGroupFormRules: {\n                    firstGroup : [{ type: 'number', required: true, message: '请选择分组', trigger: 'blur'}],\n                },\n                group: [],\n                updateGroupLoading: false,\n                update: true,\n                loadSwaggerApi: false,\n                addLoading: false,\n                //新增界面数据\n                swaggerUrl: \"\",\n                updatePublishForm: {\n                    visible: false,\n                    loading: false,\n                    publish: \"\",\n                    publishlist: [\"加油宝\",\"资产系统\"],\n                    rules: {\n                        publish : [{ type: 'string', required: true, message: '请选择发布项目', trigger: 'blur'}],\n                    },\n                },\n                importApi:{\n                    type: \"auto\",\n                    types: [{value: 'auto', label: 'auto'},\n                      {value: 'mock.fe', label: 'mock.fe'}],\n                    visible: false,\n                    loading: false,\n                    rules: {\n                        fromGroup : [{ type: 'string', required: true, message: '请选择源分组', trigger: 'blur'}],\n                        toGroup : [{ type: 'string', required: true, message: '请选择导入分组', trigger: 'blur'}],\n                    },\n                    value: null,\n                    fromGroup: null,\n                    toGroup: null,\n                    fromDate: \"\",\n                    toDate: \"\",\n                    groups: [],\n                    fileName: \"\",\n                },\n                uploadActionUrl: test + \"/api/imports/uploadfile\",\n                fileList: []\n            }\n        },\n        methods: {\n            handleUploadSuccess(res, file) {\n              this.importApi.fileName=file.name;\n            },\n            // 修改mock状态\n            checkMockStatus(row){\n                let self = this;\n                let param = JSON.stringify({\n                    project_id:Number(this.$route.params.project_id),\n                    id:Number(row.id)\n                });\n                axios.post(test+\"/api/api/updateMock\", param, {headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    self.listLoading = false;\n                    if (data.code === '999999') {\n                        self.$message.success({\n                            message: data.msg,\n                            center: true,\n                        });\n                        self.getApiList();\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n\t\t\t      },\n            handleSearch(){\n                this.page=1;\n                this.getApiList();\n            },\n            // 获取接口列表\n            getApiList() {\n                this.listLoading = true;\n                let self = this;\n                sessionStorage.setItem(\"api_name\",self.filters.name);\n                sessionStorage.setItem(\"api_type\",self.filters.type);\n                let param = { project_id: this.$route.params.project_id, page: self.page, name: self.filters.name,type: self.filters.type};\n                if (this.$route.params.firstGroup) {\n                    param['apiGroupLevelFirst_id'] = this.$route.params.firstGroup;\n                }\n                axios.get(test+\"/api/api/api_list\", {params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    self.listLoading = false;\n                    if (data.code === '999999') {\n                        self.total = data.data.total;\n                        self.pages=data.data.pages;\n                        self.page_size=data.data.page_size;\n                        self.api = data.data.data\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            // 获取接口列表\n            getDevApiGroupList() {\n                this.importApi.loading = true;\n                let self = this;\n                let param = {};\n                let url=test+\"/api/imports/apidomainlist\";\n                if(self.importApi.type==\"mock.fe\"){\n                    url=test+\"/api/imports/devapi_grouplist\";\n                }\n                axios.get(url, {params:param,headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    self.importApi.loading = false;\n                    if (data.code === '999999') {\n                        self.importApi.groups = data.data;\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n            // 修改接口所属分组\n            importApiSubmit() {\n                let self = this;\n                this.$confirm('确认导入接口吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.importApi.loading = true;\n                    //NProgress.start();\n                    let params = JSON.stringify({\n                        project_id:Number(this.$route.params.project_id),\n                        group_id: this.importApi.toGroup,\n                        fileName: this.importApi.fileName,\n                    });\n                    let url=test+\"/api/imports/api_importfrompostman\";\n                    axios.post(url, params,{headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                        let data=response.data;\n                        self.importApi.loading = false;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: data.msg,\n                                center: true,\n                                type: 'success'\n                            });\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.importApi.visible = false;\n                        self.getApiList();\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {\n\n                });\n            },\n            // 修改接口所属分组\n            updateGroupSubmit() {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认修改所属分组吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.updateGroupLoading = true;\n                    //NProgress.start();\n                    let params = JSON.stringify({\n                        project_id:Number(this.$route.params.project_id),\n                        apiGroupLevelFirst_id: Number(self.updateGroupForm.firstGroup),\n                        ids: ids,\n                    });\n                    axios.post(test+\"/api/api/update_group\", params,{headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                        let data=response.data;\n                        self.updateGroupLoading = false;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '修改成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            self.$router.push({ name: '分组接口列表', params: { project_id: self.$route.params.project_id, firstGroup: self.updateGroupForm.firstGroup}});\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.updateGroupFormVisible = false;\n                        self.getApiList();\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {\n\n                });\n            },\n            // 修改接口所属发布项目\n            updatePublishSubmit() {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认修改发布项目吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.updatePublishForm.loading = true;\n                    //NProgress.start();\n                    let params = JSON.stringify({\n                        project_id:Number(this.$route.params.project_id),\n                        publish: self.updatePublishForm.publish,\n                        ids: ids,\n                    });\n                    axios.post(test+\"/api/api/update_publish\", params,{headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                        let data=response.data;\n                        self.updatePublishForm.loading = false;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '修改成功',\n                                center: true,\n                                type: 'success'\n                            });\n//\t\t\t\t\t\t\t\t                self.$router.push({ name: '分组接口列表', params: { project_id: self.$route.params.project_id, firstGroup: self.updateGroupForm.firstGroup}});\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.updatePublishForm.visible = false;\n                        self.getApiList();\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {\n\n                });\n            },\n            // 获取api分组\n            getApiGroup() {\n                let self = this;\n                axios.get(test+\"/api/api/group\", {params:{ project_id: this.$route.params.project_id},headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === '999999') {\n                        self.group = data.data;\n                    }\n                    else {\n                        self.$message.error({\n                            message: data.msg,\n                            center: true,\n                        })\n                    }\n                }).catch(error=>{\n\n                });\n            },\n\t\t\t// 修改分组弹窗\n            changeGroup() {\n                this.getApiGroup();\n                this.updateGroupFormVisible = true;\n            },\n            changePublish() {\n                this.updatePublishForm.visible = true;\n            },\n            handleImportApi() {\n                this.getApiGroup();\n                this.getDevApiGroupList();\n                this.importApi.visible = true;\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除接口[' + row.name + ']吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    axios.post(test+\"/api/api/del_api\", JSON.stringify({ project_id: Number(this.$route.params.project_id), ids: [row.id] }),{headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                        let data=response.data;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.getApiList();\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {\n                });\n            },\n\t\t\t// 下载接口文档\n            DownloadApi() {\n                axios.get(test+\"/api/api/Download\", {params:{ project_id: this.$route.params.project_id},headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                    let data=response.data;\n                    if (data.code === \"999999\") {\n                        window.open(test+\"/api/api/download_doc?url=\"+data.data)\n                    }\n                }).catch(error=>{\n\n                });\n            },\n\t\t\t// 翻页\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getApiList()\n            },\n            selsChange: function (sels) {\n                if (sels.length>0) {\n                    this.sels = sels;\n                    this.update = false\n                } else {\n                    this.update = true\n                }\n            },\n            //批量删除\n            batchRemove: function () {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认删除选中记录吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    axios.post(test+\"/api/api/del_api\", JSON.stringify({ project_id: Number(this.$route.params.project_id), ids: ids}),{headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                        let data=response.data;\n                        self.listLoading = false;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                        self.getApiList();\n                    }).catch(error=>{\n\n                    });\n                }).catch(() => {\n                });\n            },\n            addSubmit(){\n                let self = this;\n                this.addLoading = true;\n                console.log(this.swaggerUrl);\n                if (this.swaggerUrl){\n                    axios.post(test+\"/api/api/lead_swagger\", JSON.stringify({ project_id: Number(this.$route.params.project_id), url: this.swaggerUrl}),{headers:{\"Content-Type\": \"application/json\", Authorization: 'Token ' + sessionStorage.getItem('token')}}).then(response => {\n                        let data=response.data;\n                        if (data.code === '999999') {\n                            self.$message({\n                                message: '添加成功',\n                                center: true,\n                                type: 'success'\n                            });\n                            self.listLoading = true;\n                            self.addLoading = false;\n                            self.loadSwaggerApi = false;\n                            self.getApiList()\n                        }\n                        else {\n                            self.addLoading = false;\n                            self.$message.error({\n                                message: \"导入失败，请检查地址是否正确\",\n                                center: true,\n                            })\n                        }\n                        self.getApiList();\n                    }).catch(error=>{\n\n                    });\n                } else {\n                    this.addLoading = false\n                }\n            },\n            load(){\n                if(sessionStorage.getItem(\"api_name\")!=null){\n                    this.filters.name=sessionStorage.getItem(\"api_name\");\n                }\n                if(sessionStorage.getItem(\"api_type\")!=null){\n                    this.filters.type=sessionStorage.getItem(\"api_type\");\n                }\n                this.getApiList();\n                if (this.$route.params.firstGroup) {\n                    this.updateGroupForm.firstGroup = Number(this.$route.params.firstGroup);\n                    this.importApi.toGroup=Number(this.$route.params.firstGroup);\n                    sessionStorage.setItem(\"api_group\",this.$route.params.firstGroup);\n                }\n            },\n        },\n        mounted() {\n            this.load();\n        },\n        watch: {\n            '$route' (to, from) { //监听路由是否变化\n              if(to.query!= from.query){\n                this.load();\n              }\n            }\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\t.api-title {\n\t\tpadding: 15px;\n\t\tmargin: 0px;\n\t\ttext-align: center;\n\t\tborder-radius:5px;\n\t\tfont-size: 15px;\n\t\tcolor: aliceblue;\n\t\tbackground-color: rgb(32, 160, 255);\n\t\tfont-family: PingFang SC;\n\t}\n\t.group .editGroup {\n\t\tfloat:right;\n\t}\n\t.row-title {\n\t\tmargin: 35px;\n\t}\n\t.addGroup {\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 10px;\n\t\tborder-radius: 25px;\n\t}\n\t.api-view-a {\n\t\tmargin-left: 15px;\n\t\tmargin-right: 15px;\n\t\tdisplay: block;\n\t}\n\t.api-view-b {\n\t\tmargin-left: 15px;\n\t\tmargin-right: 15px;\n\t\tdisplay: none;\n\t}\n</style>\n"],"sourceRoot":"src/views/project/api"}]}