{"remainingRequest":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js!/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectTitle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangrong/workspace/apitest/apitest-web/src/views/project/projectTitle.vue","mtime":1590380748867},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huangrong/workspace/apitest/apitest-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { test } from \"../../api/api\";\nimport axios from \"axios\";\nexport default {\n  props: ['project_id'],\n  data: function data() {\n    return {\n      name: '',\n      type: '',\n      version: '',\n      updateDate: '',\n      apiCount: 0,\n      apiAutomatedCount: 0,\n      apiAutomatedCoverage: 0,\n      automationCount: 0,\n      resultCount: 0,\n      statusCount: 0,\n      dynamicCount: 0,\n      memberCount: 0,\n      configCount: 0,\n      createDate: ''\n    };\n  },\n  methods: {\n    getProjectInfo: function getProjectInfo() {\n      var self = this;\n      var params = {\n        project_id: this.project_id\n      };\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Token ' + sessionStorage.getItem('token')\n      };\n      axios.get(\"\".concat(test, \"/api/title/project_info\"), {\n        params: params,\n        headers: headers\n      }).then(function (res) {\n        var _res$data = res.data,\n            msg = _res$data.msg,\n            code = _res$data.code,\n            data = _res$data.data;\n        self.listLoading = false;\n\n        if (code === '999999') {\n          self.name = data.name;\n          self.type = data.type;\n          self.version = data.version;\n          self.updateDate = data.LastUpdateTime;\n          self.apiCount = data.apiCount;\n          self.automationCount = data.automationCount;\n          self.apiAutomatedCount = data.apiAutomatedCount;\n          self.apiAutomatedCoverage = parseFloat((self.apiAutomatedCount * 100 / self.apiCount).toFixed(1));\n          self.resultCount = data.resultCount;\n          self.dynamicCount = data.dynamicCount;\n          self.memberCount = data.memberCount;\n          self.configCount = data.configCount;\n          self.createDate = data.createTime;\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getProjectInfo();\n  }\n};",{"version":3,"sources":["projectTitle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,SAAA,IAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,YAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,CALA;AAMA,MAAA,iBAAA,EAAA,CANA;AAOA,MAAA,oBAAA,EAAA,CAPA;AAQA,MAAA,eAAA,EAAA,CARA;AASA,MAAA,WAAA,EAAA,CATA;AAUA,MAAA,WAAA,EAAA,CAVA;AAWA,MAAA,YAAA,EAAA,CAXA;AAYA,MAAA,WAAA,EAAA,CAZA;AAaA,MAAA,WAAA,EAAA,CAbA;AAcA,MAAA,UAAA,EAAA;AAdA,KAAA;AAgBA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AAAA,QAAA,UAAA,EAAA,KAAA;AAAA,OAAA;AACA,UAAA,OAAA,GAAA;AACA,wBAAA,kBADA;AAEA,QAAA,aAAA,EAAA,WAAA,cAAA,CAAA,OAAA,CAAA,OAAA;AAFA,OAAA;AAIA,MAAA,KAAA,CAAA,GAAA,WAAA,IAAA,8BAAA;AAAA,QAAA,MAAA,EAAA,MAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AAAA,wBACA,GAAA,CAAA,IADA;AAAA,YACA,GADA,aACA,GADA;AAAA,YACA,IADA,aACA,IADA;AAAA,YACA,IADA,aACA,IADA;AAEA,QAAA,IAAA,CAAA,WAAA,GAAA,KAAA;;AACA,YAAA,IAAA,KAAA,QAAA,EAAA;AACA,UAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,UAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,UAAA,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA,OAAA;AACA,UAAA,IAAA,CAAA,UAAA,GAAA,IAAA,CAAA,cAAA;AACA,UAAA,IAAA,CAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AACA,UAAA,IAAA,CAAA,eAAA,GAAA,IAAA,CAAA,eAAA;AACA,UAAA,IAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,iBAAA;AACA,UAAA,IAAA,CAAA,oBAAA,GAAA,UAAA,CAAA,CAAA,IAAA,CAAA,iBAAA,GAAA,GAAA,GAAA,IAAA,CAAA,QAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,IAAA,CAAA,WAAA,GAAA,IAAA,CAAA,WAAA;AACA,UAAA,IAAA,CAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AACA,UAAA,IAAA,CAAA,WAAA,GAAA,IAAA,CAAA,WAAA;AACA,UAAA,IAAA,CAAA,WAAA,GAAA,IAAA,CAAA,WAAA;AACA,UAAA,IAAA,CAAA,UAAA,GAAA,IAAA,CAAA,UAAA;AACA,SAdA,MAeA;AACA,UAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CAAA;AACA,YAAA,OAAA,EAAA,GADA;AAEA,YAAA,MAAA,EAAA;AAFA,WAAA;AAIA;AACA,OAxBA;AAyBA;AAjCA,GApBA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,cAAA;AACA;AAzDA,CAAA","sourcesContent":["<template>\n    <div class=\"main\">\n        <el-row>\n            <el-col :span=\"5\" class='inline'>\n                <el-card class=\"box-card\">\n                    <h2><i class=\"\"/>{{name}} {{version}}</h2>\n                    <div>项目名称和版本</div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"5\" class='inline'>\n                <el-card class=\"box-card\">\n                    <router-link :to=\"{name: '成员管理'}\" style='text-decoration: none;color: #000000;'><h2><i class=\"\"/>{{memberCount}}人</h2></router-link>\n                    <div>项目组成员</div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"5\" class='inline'>\n                <el-card class=\"box-card\">\n                    <router-link :to=\"{name: '项目配置'}\" style='text-decoration: none;color: #000000;'><h2><i class=\"\"/>{{configCount}}个项目配置</h2></router-link>\n                    <div>测试环境和数据配置</div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"5\" class='inline'>\n                <el-card class=\"box-card\">\n                    <router-link :to=\"{name: '项目动态'}\" style='text-decoration: none;color: #000000;'><h2><i class=\"\"/>{{dynamicCount}}条项目动态</h2></router-link>\n                    <div>项目动态</div>\n                </el-card>\n            </el-col>\n        </el-row>\n        <el-row>\n            <el-col :span=\"5\" class='inline'>\n                <el-card class=\"box-card\">\n                    <router-link :to=\"{name: '接口列表'}\" style='text-decoration: none;color: #000000;'><h2>{{apiCount}}个接口</h2></router-link>\n                    <div>接口数量</div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"5\" class='inline'>\n                <el-card class=\"box-card\">\n                    <router-link :to=\"{name: '自动化列表'}\" style='text-decoration: none;color: #000000;'><h2>{{automationCount}}个自动化用例</h2></router-link>\n                    <div>自动化数量</div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"5\" class='inline'>\n                <el-card class=\"box-card\">\n                    <router-link :to=\"{name: '接口列表'}\" style='text-decoration: none;color: #000000;'><h2>{{apiAutomatedCount}}个接口已自动化</h2></router-link>\n                    <div>接口自动化覆盖{{apiAutomatedCoverage}}%</div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"5\" class='inline'>\n                <el-card class=\"box-card\">\n                    <router-link :to=\"{name: '自动化统计'}\" style='text-decoration: none;color: #000000;'><h2>{{resultCount}}次执行自动化</h2></router-link>\n                    <div>自动化用例执行</div>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\n    import { test } from '../../api/api';\n    import axios from \"axios\";\n    export default {\n        props: ['project_id'],\n        data() {\n            return {\n                name: '',\n                type: '',\n                version: '',\n                updateDate: '',\n                apiCount: 0,\n                apiAutomatedCount: 0,\n                apiAutomatedCoverage: 0,\n                automationCount: 0,\n                resultCount: 0,\n                statusCount: 0,\n                dynamicCount: 0,\n                memberCount: 0,\n                configCount: 0,\n                createDate: '',\n            }\n        },\n        methods: {\n            getProjectInfo() {\n                var self = this;\n                let params = { project_id: this.project_id};\n                let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token '+sessionStorage.getItem('token')\n                    };\n                axios.get(`${test}/api/title/project_info`, { params: params, headers:headers}).then(res => {\n                   let { msg, code, data } = res.data;\n                   self.listLoading = false;\n                        if (code === '999999') {\n                            self.name = data.name;\n                            self.type = data.type;\n                            self.version = data.version;\n                            self.updateDate = data.LastUpdateTime;\n                            self.apiCount = data.apiCount;\n                            self.automationCount = data.automationCount;\n                            self.apiAutomatedCount = data.apiAutomatedCount;\n                            self.apiAutomatedCoverage=parseFloat((self.apiAutomatedCount*100/self.apiCount).toFixed(1));\n                            self.resultCount=data.resultCount;\n                            self.dynamicCount = data.dynamicCount;\n                            self.memberCount = data.memberCount;\n                            self.configCount = data.configCount;\n                            self.createDate = data.createTime;\n                        }\n                        else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                });\n            }\n        },\n        mounted() {\n            this.getProjectInfo()\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .box-card {\n        width: 100%;\n        height: 100%;\n        display: block;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n    .member {\n        width: 7%;\n    }\n    .main {\n        margin: 35px;\n        margin-top: 10px;\n    }\n    .inline {\n        margin: 10px;\n        margin-left: 0px;\n        margin-right: 20px;\n    }\n</style>\n"],"sourceRoot":"src/views/project"}]}